ARM GAS  /tmp/cc8ESiuL.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"queue.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	prvGetDisinheritPriorityAfterTimeout:
  23              	.LFB28:
  24              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
ARM GAS  /tmp/cc8ESiuL.s 			page 2


  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** against the coding standard (although an exception to the standard has been
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** permitted where the dual use also significantly changes the type of the
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure member). */
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define pxMutexHolder					pcTail
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
ARM GAS  /tmp/cc8ESiuL.s 			page 3


  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
ARM GAS  /tmp/cc8ESiuL.s 			page 4


 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
ARM GAS  /tmp/cc8ESiuL.s 			page 5


 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
ARM GAS  /tmp/cc8ESiuL.s 			page 6


 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
ARM GAS  /tmp/cc8ESiuL.s 			page 7


 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cc8ESiuL.s 			page 8


 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc8ESiuL.s 			page 9


 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
ARM GAS  /tmp/cc8ESiuL.s 			page 10


 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc8ESiuL.s 			page 11


 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/cc8ESiuL.s 			page 12


 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cc8ESiuL.s 			page 13


 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc8ESiuL.s 			page 14


 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
ARM GAS  /tmp/cc8ESiuL.s 			page 15


 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/cc8ESiuL.s 			page 16


 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
ARM GAS  /tmp/cc8ESiuL.s 			page 17


 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
ARM GAS  /tmp/cc8ESiuL.s 			page 18


 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
ARM GAS  /tmp/cc8ESiuL.s 			page 19


1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
ARM GAS  /tmp/cc8ESiuL.s 			page 20


1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
ARM GAS  /tmp/cc8ESiuL.s 			page 21


1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
ARM GAS  /tmp/cc8ESiuL.s 			page 22


1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cc8ESiuL.s 			page 23


1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/cc8ESiuL.s 			page 24


1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/cc8ESiuL.s 			page 25


1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
ARM GAS  /tmp/cc8ESiuL.s 			page 26


1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is n
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc8ESiuL.s 			page 27


1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/cc8ESiuL.s 			page 28


1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc8ESiuL.s 			page 29


1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc8ESiuL.s 			page 30


1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/cc8ESiuL.s 			page 31


1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cc8ESiuL.s 			page 32


1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
ARM GAS  /tmp/cc8ESiuL.s 			page 33


1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
ARM GAS  /tmp/cc8ESiuL.s 			page 34


1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
ARM GAS  /tmp/cc8ESiuL.s 			page 35


1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
ARM GAS  /tmp/cc8ESiuL.s 			page 36


1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  25              		.loc 1 2015 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
ARM GAS  /tmp/cc8ESiuL.s 			page 37


2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0 )
  31              		.loc 1 2024 0
  32 0000 436A     		ldr	r3, [r0, #36]
  33 0002 002B     		cmp	r3, #0
  34 0004 04D0     		beq	.L3
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = configMAX_PRIORITIES - listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( px
  35              		.loc 1 2026 0
  36 0006 036B     		ldr	r3, [r0, #48]
  37 0008 1B68     		ldr	r3, [r3]
  38 000a 3820     		movs	r0, #56
  39              	.LVL1:
  40 000c C01A     		subs	r0, r0, r3
  41              	.LVL2:
  42              	.L1:
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
  43              		.loc 1 2034 0
  44              		@ sp needed
  45 000e 7047     		bx	lr
  46              	.LVL3:
  47              	.L3:
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  48              		.loc 1 2030 0
  49 0010 0020     		movs	r0, #0
  50              	.LVL4:
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
  51              		.loc 1 2033 0
  52 0012 FCE7     		b	.L1
  53              		.cfi_endproc
  54              	.LFE28:
  56              		.section	.text.prvIsQueueFull,"ax",%progbits
  57              		.align	1
  58              		.syntax unified
  59              		.code	16
  60              		.thumb_func
  61              		.fpu softvfp
  63              	prvIsQueueFull:
  64              	.LFB34:
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
ARM GAS  /tmp/cc8ESiuL.s 			page 38


2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc8ESiuL.s 			page 39


2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
ARM GAS  /tmp/cc8ESiuL.s 			page 40


2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
ARM GAS  /tmp/cc8ESiuL.s 			page 41


2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
ARM GAS  /tmp/cc8ESiuL.s 			page 42


2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  65              		.loc 1 2296 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              	.LVL5:
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
  75 0002 0400     		movs	r4, r0
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  76              		.loc 1 2299 0
  77 0004 FFF7FEFF 		bl	vPortEnterCritical
  78              	.LVL6:
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  79              		.loc 1 2301 0
  80 0008 A26B     		ldr	r2, [r4, #56]
  81 000a E36B     		ldr	r3, [r4, #60]
  82 000c 9A42     		cmp	r2, r3
  83 000e 04D0     		beq	.L7
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  84              		.loc 1 2307 0
  85 0010 0024     		movs	r4, #0
  86              	.LVL7:
  87              	.L5:
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cc8ESiuL.s 			page 43


2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  88              		.loc 1 2310 0
  89 0012 FFF7FEFF 		bl	vPortExitCritical
  90              	.LVL8:
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  91              		.loc 1 2313 0
  92 0016 2000     		movs	r0, r4
  93              		@ sp needed
  94              	.LVL9:
  95 0018 10BD     		pop	{r4, pc}
  96              	.LVL10:
  97              	.L7:
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  98              		.loc 1 2303 0
  99 001a 0124     		movs	r4, #1
 100              	.LVL11:
 101 001c F9E7     		b	.L5
 102              		.cfi_endproc
 103              	.LFE34:
 105              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 106              		.align	1
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 110              		.fpu softvfp
 112              	prvIsQueueEmpty:
 113              	.LFB32:
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 114              		.loc 1 2257 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              	.LVL12:
 119 0000 10B5     		push	{r4, lr}
 120              	.LCFI1:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 4, -8
 123              		.cfi_offset 14, -4
 124 0002 0400     		movs	r4, r0
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 125              		.loc 1 2260 0
 126 0004 FFF7FEFF 		bl	vPortEnterCritical
 127              	.LVL13:
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 128              		.loc 1 2262 0
 129 0008 A36B     		ldr	r3, [r4, #56]
 130 000a 002B     		cmp	r3, #0
 131 000c 04D0     		beq	.L11
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 132              		.loc 1 2268 0
 133 000e 0024     		movs	r4, #0
 134              	.LVL14:
 135              	.L9:
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc8ESiuL.s 			page 44


 136              		.loc 1 2271 0
 137 0010 FFF7FEFF 		bl	vPortExitCritical
 138              	.LVL15:
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 139              		.loc 1 2274 0
 140 0014 2000     		movs	r0, r4
 141              		@ sp needed
 142              	.LVL16:
 143 0016 10BD     		pop	{r4, pc}
 144              	.LVL17:
 145              	.L11:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 146              		.loc 1 2264 0
 147 0018 0124     		movs	r4, #1
 148              	.LVL18:
 149 001a F9E7     		b	.L9
 150              		.cfi_endproc
 151              	.LFE32:
 153              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 154              		.align	1
 155              		.syntax unified
 156              		.code	16
 157              		.thumb_func
 158              		.fpu softvfp
 160              	prvCopyDataToQueue:
 161              	.LFB29:
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 162              		.loc 1 2040 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL19:
 167 0000 70B5     		push	{r4, r5, r6, lr}
 168              	.LCFI2:
 169              		.cfi_def_cfa_offset 16
 170              		.cfi_offset 4, -16
 171              		.cfi_offset 5, -12
 172              		.cfi_offset 6, -8
 173              		.cfi_offset 14, -4
 174 0002 0400     		movs	r4, r0
 175 0004 1600     		movs	r6, r2
 176              	.LVL20:
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 177              		.loc 1 2046 0
 178 0006 856B     		ldr	r5, [r0, #56]
 179              	.LVL21:
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 180              		.loc 1 2048 0
 181 0008 026C     		ldr	r2, [r0, #64]
 182              	.LVL22:
 183 000a 002A     		cmp	r2, #0
 184 000c 0CD1     		bne	.L13
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 185              		.loc 1 2052 0
 186 000e 0368     		ldr	r3, [r0]
 187 0010 002B     		cmp	r3, #0
 188 0012 03D0     		beq	.L21
ARM GAS  /tmp/cc8ESiuL.s 			page 45


2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 189              		.loc 1 2041 0
 190 0014 0020     		movs	r0, #0
 191              	.LVL23:
 192              	.L14:
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 193              		.loc 1 2112 0
 194 0016 0135     		adds	r5, r5, #1
 195              	.LVL24:
 196 0018 A563     		str	r5, [r4, #56]
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 197              		.loc 1 2115 0
 198              		@ sp needed
 199              	.LVL25:
 200              	.LVL26:
 201              	.LVL27:
 202 001a 70BD     		pop	{r4, r5, r6, pc}
 203              	.LVL28:
 204              	.L21:
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 205              		.loc 1 2055 0
 206 001c 4068     		ldr	r0, [r0, #4]
 207              	.LVL29:
 208 001e FFF7FEFF 		bl	xTaskPriorityDisinherit
 209              	.LVL30:
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 210              		.loc 1 2056 0
 211 0022 0023     		movs	r3, #0
 212 0024 6360     		str	r3, [r4, #4]
 213 0026 F6E7     		b	.L14
 214              	.LVL31:
 215              	.L13:
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 216              		.loc 1 2065 0
 217 0028 002E     		cmp	r6, #0
 218 002a 0ED1     		bne	.L15
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 219              		.loc 1 2067 0
 220 002c 8068     		ldr	r0, [r0, #8]
 221              	.LVL32:
 222 002e FFF7FEFF 		bl	memcpy
 223              	.LVL33:
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 224              		.loc 1 2068 0
 225 0032 A368     		ldr	r3, [r4, #8]
 226 0034 226C     		ldr	r2, [r4, #64]
 227 0036 9446     		mov	ip, r2
 228 0038 6344     		add	r3, r3, ip
 229 003a A360     		str	r3, [r4, #8]
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 230              		.loc 1 2069 0
 231 003c 6268     		ldr	r2, [r4, #4]
 232 003e 9342     		cmp	r3, r2
 233 0040 1BD3     		bcc	.L18
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 234              		.loc 1 2071 0
 235 0042 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc8ESiuL.s 			page 46


 236 0044 A360     		str	r3, [r4, #8]
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 237              		.loc 1 2041 0
 238 0046 0020     		movs	r0, #0
 239 0048 E5E7     		b	.L14
 240              	.LVL34:
 241              	.L15:
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 242              		.loc 1 2080 0
 243 004a C068     		ldr	r0, [r0, #12]
 244              	.LVL35:
 245 004c FFF7FEFF 		bl	memcpy
 246              	.LVL36:
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 247              		.loc 1 2081 0
 248 0050 236C     		ldr	r3, [r4, #64]
 249 0052 5A42     		rsbs	r2, r3, #0
 250 0054 E368     		ldr	r3, [r4, #12]
 251 0056 9B18     		adds	r3, r3, r2
 252 0058 E360     		str	r3, [r4, #12]
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 253              		.loc 1 2082 0
 254 005a 2168     		ldr	r1, [r4]
 255 005c 8B42     		cmp	r3, r1
 256 005e 03D2     		bcs	.L16
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 257              		.loc 1 2084 0
 258 0060 6368     		ldr	r3, [r4, #4]
 259 0062 9C46     		mov	ip, r3
 260 0064 6244     		add	r2, r2, ip
 261 0066 E260     		str	r2, [r4, #12]
 262              	.L16:
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 263              		.loc 1 2091 0
 264 0068 022E     		cmp	r6, #2
 265 006a 01D0     		beq	.L22
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 266              		.loc 1 2041 0
 267 006c 0020     		movs	r0, #0
 268 006e D2E7     		b	.L14
 269              	.L22:
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 270              		.loc 1 2093 0
 271 0070 002D     		cmp	r5, #0
 272 0072 04D0     		beq	.L20
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 273              		.loc 1 2099 0
 274 0074 013D     		subs	r5, r5, #1
 275              	.LVL37:
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 276              		.loc 1 2041 0
 277 0076 0020     		movs	r0, #0
 278 0078 CDE7     		b	.L14
 279              	.L18:
 280 007a 0020     		movs	r0, #0
 281 007c CBE7     		b	.L14
 282              	.L20:
ARM GAS  /tmp/cc8ESiuL.s 			page 47


 283 007e 0020     		movs	r0, #0
 284 0080 C9E7     		b	.L14
 285              		.cfi_endproc
 286              	.LFE29:
 288              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 289              		.align	1
 290              		.syntax unified
 291              		.code	16
 292              		.thumb_func
 293              		.fpu softvfp
 295              	prvCopyDataFromQueue:
 296              	.LFB30:
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 297              		.loc 1 2119 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              	.LVL38:
 302 0000 10B5     		push	{r4, lr}
 303              	.LCFI3:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
 307 0002 0C00     		movs	r4, r1
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 308              		.loc 1 2120 0
 309 0004 026C     		ldr	r2, [r0, #64]
 310 0006 002A     		cmp	r2, #0
 311 0008 0BD0     		beq	.L23
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 312              		.loc 1 2122 0
 313 000a C368     		ldr	r3, [r0, #12]
 314 000c 9B18     		adds	r3, r3, r2
 315 000e C360     		str	r3, [r0, #12]
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 316              		.loc 1 2123 0
 317 0010 4168     		ldr	r1, [r0, #4]
 318              	.LVL39:
 319 0012 8B42     		cmp	r3, r1
 320 0014 01D3     		bcc	.L25
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 321              		.loc 1 2125 0
 322 0016 0368     		ldr	r3, [r0]
 323 0018 C360     		str	r3, [r0, #12]
 324              	.L25:
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 325              		.loc 1 2131 0
 326 001a C168     		ldr	r1, [r0, #12]
 327 001c 2000     		movs	r0, r4
 328              	.LVL40:
 329 001e FFF7FEFF 		bl	memcpy
 330              	.LVL41:
 331              	.L23:
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 332              		.loc 1 2133 0
 333              		@ sp needed
 334              	.LVL42:
ARM GAS  /tmp/cc8ESiuL.s 			page 48


 335 0022 10BD     		pop	{r4, pc}
 336              		.cfi_endproc
 337              	.LFE30:
 339              		.section	.text.prvUnlockQueue,"ax",%progbits
 340              		.align	1
 341              		.syntax unified
 342              		.code	16
 343              		.thumb_func
 344              		.fpu softvfp
 346              	prvUnlockQueue:
 347              	.LFB31:
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 348              		.loc 1 2137 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              	.LVL43:
 353 0000 70B5     		push	{r4, r5, r6, lr}
 354              	.LCFI4:
 355              		.cfi_def_cfa_offset 16
 356              		.cfi_offset 4, -16
 357              		.cfi_offset 5, -12
 358              		.cfi_offset 6, -8
 359              		.cfi_offset 14, -4
 360 0002 0500     		movs	r5, r0
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 361              		.loc 1 2144 0
 362 0004 FFF7FEFF 		bl	vPortEnterCritical
 363              	.LVL44:
 364              	.LBB2:
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 365              		.loc 1 2146 0
 366 0008 4523     		movs	r3, #69
 367 000a EC5C     		ldrb	r4, [r5, r3]
 368 000c 64B2     		sxtb	r4, r4
 369              	.LVL45:
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 370              		.loc 1 2149 0
 371 000e 03E0     		b	.L27
 372              	.L35:
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 373              		.loc 1 2203 0
 374 0010 FFF7FEFF 		bl	vTaskMissedYield
 375              	.LVL46:
 376              	.L29:
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 377              		.loc 1 2217 0
 378 0014 013C     		subs	r4, r4, #1
 379              	.LVL47:
 380 0016 64B2     		sxtb	r4, r4
 381              	.LVL48:
 382              	.L27:
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 383              		.loc 1 2149 0
 384 0018 002C     		cmp	r4, #0
 385 001a 09DD     		ble	.L28
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/cc8ESiuL.s 			page 49


 386              		.loc 1 2197 0
 387 001c 6B6A     		ldr	r3, [r5, #36]
 388 001e 002B     		cmp	r3, #0
 389 0020 06D0     		beq	.L28
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 390              		.loc 1 2199 0
 391 0022 2800     		movs	r0, r5
 392 0024 2430     		adds	r0, r0, #36
 393 0026 FFF7FEFF 		bl	xTaskRemoveFromEventList
 394              	.LVL49:
 395 002a 0028     		cmp	r0, #0
 396 002c F2D0     		beq	.L29
 397 002e EFE7     		b	.L35
 398              	.L28:
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 399              		.loc 1 2220 0
 400 0030 4523     		movs	r3, #69
 401 0032 FF22     		movs	r2, #255
 402 0034 EA54     		strb	r2, [r5, r3]
 403              	.LBE2:
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 404              		.loc 1 2222 0
 405 0036 FFF7FEFF 		bl	vPortExitCritical
 406              	.LVL50:
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 407              		.loc 1 2225 0
 408 003a FFF7FEFF 		bl	vPortEnterCritical
 409              	.LVL51:
 410              	.LBB3:
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 411              		.loc 1 2227 0
 412 003e 4423     		movs	r3, #68
 413 0040 EC5C     		ldrb	r4, [r5, r3]
 414              	.LVL52:
 415 0042 64B2     		sxtb	r4, r4
 416              	.LVL53:
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 417              		.loc 1 2229 0
 418 0044 03E0     		b	.L31
 419              	.L36:
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 420              		.loc 1 2235 0
 421 0046 FFF7FEFF 		bl	vTaskMissedYield
 422              	.LVL54:
 423              	.L33:
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 424              		.loc 1 2242 0
 425 004a 013C     		subs	r4, r4, #1
 426              	.LVL55:
 427 004c 64B2     		sxtb	r4, r4
 428              	.LVL56:
 429              	.L31:
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 430              		.loc 1 2229 0
 431 004e 002C     		cmp	r4, #0
 432 0050 09DD     		ble	.L32
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/cc8ESiuL.s 			page 50


 433              		.loc 1 2231 0
 434 0052 2B69     		ldr	r3, [r5, #16]
 435 0054 002B     		cmp	r3, #0
 436 0056 06D0     		beq	.L32
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 437              		.loc 1 2233 0
 438 0058 2800     		movs	r0, r5
 439 005a 1030     		adds	r0, r0, #16
 440 005c FFF7FEFF 		bl	xTaskRemoveFromEventList
 441              	.LVL57:
 442 0060 0028     		cmp	r0, #0
 443 0062 F2D0     		beq	.L33
 444 0064 EFE7     		b	.L36
 445              	.L32:
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 446              		.loc 1 2250 0
 447 0066 4423     		movs	r3, #68
 448 0068 FF22     		movs	r2, #255
 449 006a EA54     		strb	r2, [r5, r3]
 450              	.LBE3:
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 451              		.loc 1 2252 0
 452 006c FFF7FEFF 		bl	vPortExitCritical
 453              	.LVL58:
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 454              		.loc 1 2253 0
 455              		@ sp needed
 456              	.LVL59:
 457              	.LVL60:
 458 0070 70BD     		pop	{r4, r5, r6, pc}
 459              		.cfi_endproc
 460              	.LFE31:
 462              		.section	.text.xQueueGenericReset,"ax",%progbits
 463              		.align	1
 464              		.global	xQueueGenericReset
 465              		.syntax unified
 466              		.code	16
 467              		.thumb_func
 468              		.fpu softvfp
 470              	xQueueGenericReset:
 471              	.LFB0:
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 472              		.loc 1 248 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              	.LVL61:
 477 0000 70B5     		push	{r4, r5, r6, lr}
 478              	.LCFI5:
 479              		.cfi_def_cfa_offset 16
 480              		.cfi_offset 4, -16
 481              		.cfi_offset 5, -12
 482              		.cfi_offset 6, -8
 483              		.cfi_offset 14, -4
 484 0002 0400     		movs	r4, r0
 485 0004 0D00     		movs	r5, r1
 486              	.LVL62:
ARM GAS  /tmp/cc8ESiuL.s 			page 51


 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487              		.loc 1 251 0
 488 0006 0028     		cmp	r0, #0
 489 0008 01D1     		bne	.L38
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 490              		.loc 1 251 0 is_stmt 0 discriminator 1
 491              		.syntax divided
 492              	@ 251 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 493 000a 72B6     		 cpsid i 
 494              	@ 0 "" 2
 495              		.thumb
 496              		.syntax unified
 497              	.L39:
 498 000c FEE7     		b	.L39
 499              	.L38:
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 500              		.loc 1 253 0 is_stmt 1
 501 000e FFF7FEFF 		bl	vPortEnterCritical
 502              	.LVL63:
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 503              		.loc 1 255 0
 504 0012 2268     		ldr	r2, [r4]
 505 0014 E36B     		ldr	r3, [r4, #60]
 506 0016 206C     		ldr	r0, [r4, #64]
 507 0018 0100     		movs	r1, r0
 508 001a 5943     		muls	r1, r3
 509 001c 5118     		adds	r1, r2, r1
 510 001e 6160     		str	r1, [r4, #4]
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 511              		.loc 1 256 0
 512 0020 0021     		movs	r1, #0
 513 0022 A163     		str	r1, [r4, #56]
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 514              		.loc 1 257 0
 515 0024 A260     		str	r2, [r4, #8]
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 516              		.loc 1 258 0
 517 0026 013B     		subs	r3, r3, #1
 518 0028 4343     		muls	r3, r0
 519 002a D318     		adds	r3, r2, r3
 520 002c E360     		str	r3, [r4, #12]
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 521              		.loc 1 259 0
 522 002e FF23     		movs	r3, #255
 523 0030 4422     		movs	r2, #68
 524 0032 A354     		strb	r3, [r4, r2]
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 525              		.loc 1 260 0
 526 0034 0132     		adds	r2, r2, #1
 527 0036 A354     		strb	r3, [r4, r2]
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 528              		.loc 1 262 0
 529 0038 002D     		cmp	r5, #0
 530 003a 0FD1     		bne	.L40
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 531              		.loc 1 269 0
 532 003c 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/cc8ESiuL.s 			page 52


 533 003e 002B     		cmp	r3, #0
 534 0040 03D1     		bne	.L42
 535              	.L41:
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 536              		.loc 1 292 0
 537 0042 FFF7FEFF 		bl	vPortExitCritical
 538              	.LVL64:
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 539              		.loc 1 297 0
 540 0046 0120     		movs	r0, #1
 541              		@ sp needed
 542              	.LVL65:
 543              	.LVL66:
 544 0048 70BD     		pop	{r4, r5, r6, pc}
 545              	.LVL67:
 546              	.L42:
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 547              		.loc 1 271 0
 548 004a 2000     		movs	r0, r4
 549 004c 1030     		adds	r0, r0, #16
 550 004e FFF7FEFF 		bl	xTaskRemoveFromEventList
 551              	.LVL68:
 552 0052 0028     		cmp	r0, #0
 553 0054 F5D0     		beq	.L41
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 554              		.loc 1 273 0
 555 0056 FFF7FEFF 		bl	vPortYield
 556              	.LVL69:
 557 005a F2E7     		b	.L41
 558              	.L40:
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 559              		.loc 1 288 0
 560 005c 2000     		movs	r0, r4
 561 005e 1030     		adds	r0, r0, #16
 562 0060 FFF7FEFF 		bl	vListInitialise
 563              	.LVL70:
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 564              		.loc 1 289 0
 565 0064 2000     		movs	r0, r4
 566 0066 2430     		adds	r0, r0, #36
 567 0068 FFF7FEFF 		bl	vListInitialise
 568              	.LVL71:
 569 006c E9E7     		b	.L41
 570              		.cfi_endproc
 571              	.LFE0:
 573              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 574              		.align	1
 575              		.syntax unified
 576              		.code	16
 577              		.thumb_func
 578              		.fpu softvfp
 580              	prvInitialiseNewQueue:
 581              	.LFB3:
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 582              		.loc 1 409 0
 583              		.cfi_startproc
 584              		@ args = 4, pretend = 0, frame = 0
ARM GAS  /tmp/cc8ESiuL.s 			page 53


 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              	.LVL72:
 587 0000 70B5     		push	{r4, r5, r6, lr}
 588              	.LCFI6:
 589              		.cfi_def_cfa_offset 16
 590              		.cfi_offset 4, -16
 591              		.cfi_offset 5, -12
 592              		.cfi_offset 6, -8
 593              		.cfi_offset 14, -4
 594 0002 1D00     		movs	r5, r3
 595 0004 049C     		ldr	r4, [sp, #16]
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 596              		.loc 1 414 0
 597 0006 0029     		cmp	r1, #0
 598 0008 09D0     		beq	.L46
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 599              		.loc 1 425 0
 600 000a 2260     		str	r2, [r4]
 601              	.L45:
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 602              		.loc 1 430 0
 603 000c E063     		str	r0, [r4, #60]
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 604              		.loc 1 431 0
 605 000e 2164     		str	r1, [r4, #64]
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 606              		.loc 1 432 0
 607 0010 0121     		movs	r1, #1
 608              	.LVL73:
 609 0012 2000     		movs	r0, r4
 610              	.LVL74:
 611 0014 FFF7FEFF 		bl	xQueueGenericReset
 612              	.LVL75:
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 613              		.loc 1 436 0
 614 0018 4C23     		movs	r3, #76
 615 001a E554     		strb	r5, [r4, r3]
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 616              		.loc 1 447 0
 617              		@ sp needed
 618 001c 70BD     		pop	{r4, r5, r6, pc}
 619              	.LVL76:
 620              	.L46:
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 621              		.loc 1 420 0
 622 001e 2460     		str	r4, [r4]
 623 0020 F4E7     		b	.L45
 624              		.cfi_endproc
 625              	.LFE3:
 627              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 628              		.align	1
 629              		.global	xQueueGenericCreateStatic
 630              		.syntax unified
 631              		.code	16
 632              		.thumb_func
 633              		.fpu softvfp
 635              	xQueueGenericCreateStatic:
ARM GAS  /tmp/cc8ESiuL.s 			page 54


 636              	.LFB1:
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 637              		.loc 1 303 0
 638              		.cfi_startproc
 639              		@ args = 4, pretend = 0, frame = 8
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              	.LVL77:
 642 0000 70B5     		push	{r4, r5, r6, lr}
 643              	.LCFI7:
 644              		.cfi_def_cfa_offset 16
 645              		.cfi_offset 4, -16
 646              		.cfi_offset 5, -12
 647              		.cfi_offset 6, -8
 648              		.cfi_offset 14, -4
 649 0002 84B0     		sub	sp, sp, #16
 650              	.LCFI8:
 651              		.cfi_def_cfa_offset 32
 652 0004 1C00     		movs	r4, r3
 653 0006 08AB     		add	r3, sp, #32
 654              	.LVL78:
 655 0008 1B78     		ldrb	r3, [r3]
 656              	.LVL79:
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 657              		.loc 1 306 0
 658 000a 0028     		cmp	r0, #0
 659 000c 01D1     		bne	.L48
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 660              		.loc 1 306 0 is_stmt 0 discriminator 1
 661              		.syntax divided
 662              	@ 306 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 663 000e 72B6     		 cpsid i 
 664              	@ 0 "" 2
 665              		.thumb
 666              		.syntax unified
 667              	.L49:
 668 0010 FEE7     		b	.L49
 669              	.L48:
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 670              		.loc 1 310 0 is_stmt 1
 671 0012 002C     		cmp	r4, #0
 672 0014 05D0     		beq	.L58
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 673              		.loc 1 314 0
 674 0016 002A     		cmp	r2, #0
 675 0018 05D0     		beq	.L52
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 676              		.loc 1 314 0 is_stmt 0 discriminator 2
 677 001a 0029     		cmp	r1, #0
 678 001c 03D1     		bne	.L52
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 679              		.loc 1 314 0
 680              		.syntax divided
 681              	@ 314 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 682 001e 72B6     		 cpsid i 
 683              	@ 0 "" 2
 684              		.thumb
 685              		.syntax unified
ARM GAS  /tmp/cc8ESiuL.s 			page 55


 686              	.L53:
 687 0020 FEE7     		b	.L53
 688              	.L58:
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 689              		.loc 1 310 0 is_stmt 1 discriminator 1
 690              		.syntax divided
 691              	@ 310 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 692 0022 72B6     		 cpsid i 
 693              	@ 0 "" 2
 694              		.thumb
 695              		.syntax unified
 696              	.L51:
 697 0024 FEE7     		b	.L51
 698              	.L52:
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699              		.loc 1 315 0
 700 0026 002A     		cmp	r2, #0
 701 0028 03D1     		bne	.L54
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 702              		.loc 1 315 0 is_stmt 0 discriminator 2
 703 002a 0029     		cmp	r1, #0
 704 002c 01D0     		beq	.L54
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 705              		.loc 1 315 0
 706              		.syntax divided
 707              	@ 315 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 708 002e 72B6     		 cpsid i 
 709              	@ 0 "" 2
 710              		.thumb
 711              		.syntax unified
 712              	.L55:
 713 0030 FEE7     		b	.L55
 714              	.L54:
 715              	.LBB4:
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 716              		.loc 1 322 0 is_stmt 1
 717 0032 5025     		movs	r5, #80
 718 0034 0395     		str	r5, [sp, #12]
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 719              		.loc 1 323 0
 720 0036 039D     		ldr	r5, [sp, #12]
 721 0038 502D     		cmp	r5, #80
 722 003a 01D0     		beq	.L56
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 723              		.loc 1 323 0 is_stmt 0 discriminator 1
 724              		.syntax divided
 725              	@ 323 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 726 003c 72B6     		 cpsid i 
 727              	@ 0 "" 2
 728              		.thumb
 729              		.syntax unified
 730              	.L57:
 731 003e FEE7     		b	.L57
 732              	.L56:
 733              	.LVL80:
 734              	.LBE4:
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/cc8ESiuL.s 			page 56


 735              		.loc 1 339 0 is_stmt 1
 736 0040 4625     		movs	r5, #70
 737 0042 0126     		movs	r6, #1
 738 0044 6655     		strb	r6, [r4, r5]
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 739              		.loc 1 343 0
 740 0046 0094     		str	r4, [sp]
 741 0048 FFF7FEFF 		bl	prvInitialiseNewQueue
 742              	.LVL81:
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 743              		.loc 1 351 0
 744 004c 2000     		movs	r0, r4
 745 004e 04B0     		add	sp, sp, #16
 746              		@ sp needed
 747              	.LVL82:
 748 0050 70BD     		pop	{r4, r5, r6, pc}
 749              		.cfi_endproc
 750              	.LFE1:
 752              		.section	.text.xQueueGenericCreate,"ax",%progbits
 753              		.align	1
 754              		.global	xQueueGenericCreate
 755              		.syntax unified
 756              		.code	16
 757              		.thumb_func
 758              		.fpu softvfp
 760              	xQueueGenericCreate:
 761              	.LFB2:
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 762              		.loc 1 359 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766              	.LVL83:
 767 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 768              	.LCFI9:
 769              		.cfi_def_cfa_offset 20
 770              		.cfi_offset 4, -20
 771              		.cfi_offset 5, -16
 772              		.cfi_offset 6, -12
 773              		.cfi_offset 7, -8
 774              		.cfi_offset 14, -4
 775 0002 83B0     		sub	sp, sp, #12
 776              	.LCFI10:
 777              		.cfi_def_cfa_offset 32
 778 0004 0600     		movs	r6, r0
 779 0006 0F00     		movs	r7, r1
 780 0008 1500     		movs	r5, r2
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 781              		.loc 1 364 0
 782 000a 0028     		cmp	r0, #0
 783 000c 01D1     		bne	.L60
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 784              		.loc 1 364 0 is_stmt 0 discriminator 1
 785              		.syntax divided
 786              	@ 364 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 787 000e 72B6     		 cpsid i 
 788              	@ 0 "" 2
ARM GAS  /tmp/cc8ESiuL.s 			page 57


 789              		.thumb
 790              		.syntax unified
 791              	.L61:
 792 0010 FEE7     		b	.L61
 793              	.L60:
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 794              		.loc 1 366 0 is_stmt 1
 795 0012 0029     		cmp	r1, #0
 796 0014 02D0     		beq	.L64
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 797              		.loc 1 375 0
 798 0016 0800     		movs	r0, r1
 799              	.LVL84:
 800 0018 7043     		muls	r0, r6
 801              	.LVL85:
 802 001a 00E0     		b	.L62
 803              	.LVL86:
 804              	.L64:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 805              		.loc 1 369 0
 806 001c 0020     		movs	r0, #0
 807              	.LVL87:
 808              	.L62:
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 809              		.loc 1 378 0
 810 001e 5030     		adds	r0, r0, #80
 811              	.LVL88:
 812 0020 FFF7FEFF 		bl	pvPortMalloc
 813              	.LVL89:
 814 0024 041E     		subs	r4, r0, #0
 815              	.LVL90:
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 816              		.loc 1 380 0
 817 0026 0AD0     		beq	.L59
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 818              		.loc 1 384 0
 819 0028 0200     		movs	r2, r0
 820 002a 5032     		adds	r2, r2, #80
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 821              		.loc 1 391 0
 822 002c 4623     		movs	r3, #70
 823 002e 0021     		movs	r1, #0
 824 0030 C154     		strb	r1, [r0, r3]
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 825              		.loc 1 395 0
 826 0032 0090     		str	r0, [sp]
 827 0034 2B00     		movs	r3, r5
 828 0036 3900     		movs	r1, r7
 829 0038 3000     		movs	r0, r6
 830              	.LVL91:
 831 003a FFF7FEFF 		bl	prvInitialiseNewQueue
 832              	.LVL92:
 833              	.L59:
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 834              		.loc 1 403 0
 835 003e 2000     		movs	r0, r4
 836 0040 03B0     		add	sp, sp, #12
ARM GAS  /tmp/cc8ESiuL.s 			page 58


 837              		@ sp needed
 838              	.LVL93:
 839              	.LVL94:
 840              	.LVL95:
 841 0042 F0BD     		pop	{r4, r5, r6, r7, pc}
 842              		.cfi_endproc
 843              	.LFE2:
 845              		.section	.text.xQueueGetMutexHolder,"ax",%progbits
 846              		.align	1
 847              		.global	xQueueGetMutexHolder
 848              		.syntax unified
 849              		.code	16
 850              		.thumb_func
 851              		.fpu softvfp
 853              	xQueueGetMutexHolder:
 854              	.LFB7:
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 855              		.loc 1 519 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              	.LVL96:
 860 0000 10B5     		push	{r4, lr}
 861              	.LCFI11:
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 4, -8
 864              		.cfi_offset 14, -4
 865 0002 0400     		movs	r4, r0
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 866              		.loc 1 527 0
 867 0004 FFF7FEFF 		bl	vPortEnterCritical
 868              	.LVL97:
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 869              		.loc 1 529 0
 870 0008 2368     		ldr	r3, [r4]
 871 000a 002B     		cmp	r3, #0
 872 000c 04D1     		bne	.L67
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 873              		.loc 1 531 0
 874 000e 6468     		ldr	r4, [r4, #4]
 875              	.LVL98:
 876              	.L66:
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 877              		.loc 1 538 0
 878 0010 FFF7FEFF 		bl	vPortExitCritical
 879              	.LVL99:
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 880              		.loc 1 541 0
 881 0014 2000     		movs	r0, r4
 882              		@ sp needed
 883              	.LVL100:
 884 0016 10BD     		pop	{r4, pc}
 885              	.LVL101:
 886              	.L67:
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 887              		.loc 1 535 0
 888 0018 0024     		movs	r4, #0
ARM GAS  /tmp/cc8ESiuL.s 			page 59


 889              	.LVL102:
 890 001a F9E7     		b	.L66
 891              		.cfi_endproc
 892              	.LFE7:
 894              		.section	.text.xQueueGetMutexHolderFromISR,"ax",%progbits
 895              		.align	1
 896              		.global	xQueueGetMutexHolderFromISR
 897              		.syntax unified
 898              		.code	16
 899              		.thumb_func
 900              		.fpu softvfp
 902              	xQueueGetMutexHolderFromISR:
 903              	.LFB8:
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 904              		.loc 1 549 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 909              	.LVL103:
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 910              		.loc 1 552 0
 911 0000 0028     		cmp	r0, #0
 912 0002 04D0     		beq	.L73
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 913              		.loc 1 557 0
 914 0004 0368     		ldr	r3, [r0]
 915 0006 002B     		cmp	r3, #0
 916 0008 03D1     		bne	.L72
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 917              		.loc 1 559 0
 918 000a 4068     		ldr	r0, [r0, #4]
 919              	.LVL104:
 920              	.L68:
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 921              		.loc 1 567 0
 922              		@ sp needed
 923 000c 7047     		bx	lr
 924              	.LVL105:
 925              	.L73:
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 926              		.loc 1 552 0 discriminator 1
 927              		.syntax divided
 928              	@ 552 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 929 000e 72B6     		 cpsid i 
 930              	@ 0 "" 2
 931              		.thumb
 932              		.syntax unified
 933              	.L70:
 934 0010 FEE7     		b	.L70
 935              	.L72:
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 936              		.loc 1 563 0
 937 0012 0020     		movs	r0, #0
 938              	.LVL106:
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 939              		.loc 1 566 0
ARM GAS  /tmp/cc8ESiuL.s 			page 60


 940 0014 FAE7     		b	.L68
 941              		.cfi_endproc
 942              	.LFE8:
 944              		.section	.text.xQueueCreateCountingSemaphoreStatic,"ax",%progbits
 945              		.align	1
 946              		.global	xQueueCreateCountingSemaphoreStatic
 947              		.syntax unified
 948              		.code	16
 949              		.thumb_func
 950              		.fpu softvfp
 952              	xQueueCreateCountingSemaphoreStatic:
 953              	.LFB11:
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 954              		.loc 1 672 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              	.LVL107:
 959 0000 10B5     		push	{r4, lr}
 960              	.LCFI12:
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 4, -8
 963              		.cfi_offset 14, -4
 964 0002 82B0     		sub	sp, sp, #8
 965              	.LCFI13:
 966              		.cfi_def_cfa_offset 16
 967 0004 0C00     		movs	r4, r1
 968 0006 1300     		movs	r3, r2
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 969              		.loc 1 675 0
 970 0008 0028     		cmp	r0, #0
 971 000a 01D1     		bne	.L75
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 972              		.loc 1 675 0 is_stmt 0 discriminator 1
 973              		.syntax divided
 974              	@ 675 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 975 000c 72B6     		 cpsid i 
 976              	@ 0 "" 2
 977              		.thumb
 978              		.syntax unified
 979              	.L76:
 980 000e FEE7     		b	.L76
 981              	.L75:
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 982              		.loc 1 676 0 is_stmt 1
 983 0010 8842     		cmp	r0, r1
 984 0012 01D2     		bcs	.L77
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 985              		.loc 1 676 0 is_stmt 0 discriminator 1
 986              		.syntax divided
 987              	@ 676 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 988 0014 72B6     		 cpsid i 
 989              	@ 0 "" 2
 990              		.thumb
 991              		.syntax unified
 992              	.L78:
 993 0016 FEE7     		b	.L78
ARM GAS  /tmp/cc8ESiuL.s 			page 61


 994              	.L77:
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 995              		.loc 1 678 0 is_stmt 1
 996 0018 0222     		movs	r2, #2
 997              	.LVL108:
 998 001a 0092     		str	r2, [sp]
 999 001c 0022     		movs	r2, #0
 1000 001e 1100     		movs	r1, r2
 1001              	.LVL109:
 1002 0020 FFF7FEFF 		bl	xQueueGenericCreateStatic
 1003              	.LVL110:
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1004              		.loc 1 680 0
 1005 0024 0028     		cmp	r0, #0
 1006 0026 00D0     		beq	.L74
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1007              		.loc 1 682 0
 1008 0028 8463     		str	r4, [r0, #56]
 1009              	.L74:
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1010              		.loc 1 692 0
 1011 002a 02B0     		add	sp, sp, #8
 1012              		@ sp needed
 1013              	.LVL111:
 1014 002c 10BD     		pop	{r4, pc}
 1015              		.cfi_endproc
 1016              	.LFE11:
 1018              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 1019              		.align	1
 1020              		.global	xQueueCreateCountingSemaphore
 1021              		.syntax unified
 1022              		.code	16
 1023              		.thumb_func
 1024              		.fpu softvfp
 1026              	xQueueCreateCountingSemaphore:
 1027              	.LFB12:
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1028              		.loc 1 700 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              	.LVL112:
 1033 0000 10B5     		push	{r4, lr}
 1034              	.LCFI14:
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 4, -8
 1037              		.cfi_offset 14, -4
 1038 0002 0C00     		movs	r4, r1
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1039              		.loc 1 703 0
 1040 0004 0028     		cmp	r0, #0
 1041 0006 01D1     		bne	.L81
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1042              		.loc 1 703 0 is_stmt 0 discriminator 1
 1043              		.syntax divided
 1044              	@ 703 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1045 0008 72B6     		 cpsid i 
ARM GAS  /tmp/cc8ESiuL.s 			page 62


 1046              	@ 0 "" 2
 1047              		.thumb
 1048              		.syntax unified
 1049              	.L82:
 1050 000a FEE7     		b	.L82
 1051              	.L81:
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1052              		.loc 1 704 0 is_stmt 1
 1053 000c 8842     		cmp	r0, r1
 1054 000e 01D2     		bcs	.L83
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1055              		.loc 1 704 0 is_stmt 0 discriminator 1
 1056              		.syntax divided
 1057              	@ 704 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1058 0010 72B6     		 cpsid i 
 1059              	@ 0 "" 2
 1060              		.thumb
 1061              		.syntax unified
 1062              	.L84:
 1063 0012 FEE7     		b	.L84
 1064              	.L83:
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1065              		.loc 1 706 0 is_stmt 1
 1066 0014 0222     		movs	r2, #2
 1067 0016 0021     		movs	r1, #0
 1068              	.LVL113:
 1069 0018 FFF7FEFF 		bl	xQueueGenericCreate
 1070              	.LVL114:
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1071              		.loc 1 708 0
 1072 001c 0028     		cmp	r0, #0
 1073 001e 00D0     		beq	.L80
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1074              		.loc 1 710 0
 1075 0020 8463     		str	r4, [r0, #56]
 1076              	.L80:
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1077              		.loc 1 720 0
 1078              		@ sp needed
 1079              	.LVL115:
 1080 0022 10BD     		pop	{r4, pc}
 1081              		.cfi_endproc
 1082              	.LFE12:
 1084              		.section	.text.xQueueGenericSend,"ax",%progbits
 1085              		.align	1
 1086              		.global	xQueueGenericSend
 1087              		.syntax unified
 1088              		.code	16
 1089              		.thumb_func
 1090              		.fpu softvfp
 1092              	xQueueGenericSend:
 1093              	.LFB13:
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1094              		.loc 1 726 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 16
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc8ESiuL.s 			page 63


 1098              	.LVL116:
 1099 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1100              	.LCFI15:
 1101              		.cfi_def_cfa_offset 20
 1102              		.cfi_offset 4, -20
 1103              		.cfi_offset 5, -16
 1104              		.cfi_offset 6, -12
 1105              		.cfi_offset 7, -8
 1106              		.cfi_offset 14, -4
 1107 0002 85B0     		sub	sp, sp, #20
 1108              	.LCFI16:
 1109              		.cfi_def_cfa_offset 40
 1110 0004 0400     		movs	r4, r0
 1111 0006 0F00     		movs	r7, r1
 1112 0008 0192     		str	r2, [sp, #4]
 1113 000a 1D00     		movs	r5, r3
 1114              	.LVL117:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1115              		.loc 1 731 0
 1116 000c 0028     		cmp	r0, #0
 1117 000e 06D0     		beq	.L110
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1118              		.loc 1 732 0
 1119 0010 0029     		cmp	r1, #0
 1120 0012 06D1     		bne	.L89
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1121              		.loc 1 732 0 is_stmt 0 discriminator 2
 1122 0014 036C     		ldr	r3, [r0, #64]
 1123              	.LVL118:
 1124 0016 002B     		cmp	r3, #0
 1125 0018 03D0     		beq	.L89
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1126              		.loc 1 732 0
 1127              		.syntax divided
 1128              	@ 732 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1129 001a 72B6     		 cpsid i 
 1130              	@ 0 "" 2
 1131              		.thumb
 1132              		.syntax unified
 1133              	.L90:
 1134 001c FEE7     		b	.L90
 1135              	.LVL119:
 1136              	.L110:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1137              		.loc 1 731 0 is_stmt 1 discriminator 1
 1138              		.syntax divided
 1139              	@ 731 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1140 001e 72B6     		 cpsid i 
 1141              	@ 0 "" 2
 1142              		.thumb
 1143              		.syntax unified
 1144              	.L88:
 1145 0020 FEE7     		b	.L88
 1146              	.LVL120:
 1147              	.L89:
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1148              		.loc 1 733 0
ARM GAS  /tmp/cc8ESiuL.s 			page 64


 1149 0022 022D     		cmp	r5, #2
 1150 0024 04D1     		bne	.L91
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1151              		.loc 1 733 0 is_stmt 0 discriminator 2
 1152 0026 E36B     		ldr	r3, [r4, #60]
 1153 0028 012B     		cmp	r3, #1
 1154 002a 01D0     		beq	.L91
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1155              		.loc 1 733 0
 1156              		.syntax divided
 1157              	@ 733 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1158 002c 72B6     		 cpsid i 
 1159              	@ 0 "" 2
 1160              		.thumb
 1161              		.syntax unified
 1162              	.L92:
 1163 002e FEE7     		b	.L92
 1164              	.L91:
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1165              		.loc 1 736 0 is_stmt 1
 1166 0030 FFF7FEFF 		bl	xTaskGetSchedulerState
 1167              	.LVL121:
 1168 0034 0028     		cmp	r0, #0
 1169 0036 04D1     		bne	.L108
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1170              		.loc 1 736 0 is_stmt 0 discriminator 2
 1171 0038 019B     		ldr	r3, [sp, #4]
 1172 003a 002B     		cmp	r3, #0
 1173 003c 03D0     		beq	.L109
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1174              		.loc 1 736 0
 1175              		.syntax divided
 1176              	@ 736 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1177 003e 72B6     		 cpsid i 
 1178              	@ 0 "" 2
 1179              		.thumb
 1180              		.syntax unified
 1181              	.L94:
 1182 0040 FEE7     		b	.L94
 1183              	.L108:
 1184 0042 0026     		movs	r6, #0
 1185 0044 31E0     		b	.L95
 1186              	.L109:
 1187 0046 0026     		movs	r6, #0
 1188 0048 2FE0     		b	.L95
 1189              	.LVL122:
 1190              	.L96:
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1191              		.loc 1 755 0 is_stmt 1
 1192 004a 2A00     		movs	r2, r5
 1193 004c 3900     		movs	r1, r7
 1194 004e 2000     		movs	r0, r4
 1195 0050 FFF7FEFF 		bl	prvCopyDataToQueue
 1196              	.LVL123:
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1197              		.loc 1 810 0
 1198 0054 636A     		ldr	r3, [r4, #36]
ARM GAS  /tmp/cc8ESiuL.s 			page 65


 1199 0056 002B     		cmp	r3, #0
 1200 0058 04D1     		bne	.L111
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1201              		.loc 1 825 0
 1202 005a 0028     		cmp	r0, #0
 1203 005c 0AD0     		beq	.L99
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1204              		.loc 1 831 0
 1205 005e FFF7FEFF 		bl	vPortYield
 1206              	.LVL124:
 1207 0062 07E0     		b	.L99
 1208              	.LVL125:
 1209              	.L111:
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1210              		.loc 1 812 0
 1211 0064 2000     		movs	r0, r4
 1212              	.LVL126:
 1213 0066 2430     		adds	r0, r0, #36
 1214 0068 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1215              	.LVL127:
 1216 006c 0028     		cmp	r0, #0
 1217 006e 01D0     		beq	.L99
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1218              		.loc 1 818 0
 1219 0070 FFF7FEFF 		bl	vPortYield
 1220              	.LVL128:
 1221              	.L99:
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1222              		.loc 1 840 0
 1223 0074 FFF7FEFF 		bl	vPortExitCritical
 1224              	.LVL129:
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1225              		.loc 1 841 0
 1226 0078 0120     		movs	r0, #1
 1227              	.L86:
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1228              		.loc 1 920 0
 1229 007a 05B0     		add	sp, sp, #20
 1230              		@ sp needed
 1231              	.LVL130:
 1232              	.LVL131:
 1233              	.LVL132:
 1234              	.LVL133:
 1235 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 1236              	.LVL134:
 1237              	.L112:
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1238              		.loc 1 849 0
 1239 007e FFF7FEFF 		bl	vPortExitCritical
 1240              	.LVL135:
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1241              		.loc 1 854 0
 1242 0082 0020     		movs	r0, #0
 1243 0084 F9E7     		b	.L86
 1244              	.L113:
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1245              		.loc 1 860 0
ARM GAS  /tmp/cc8ESiuL.s 			page 66


 1246 0086 02A8     		add	r0, sp, #8
 1247 0088 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1248              	.LVL136:
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1249              		.loc 1 861 0
 1250 008c 0136     		adds	r6, r6, #1
 1251 008e 19E0     		b	.L102
 1252              	.LVL137:
 1253              	.L114:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1254              		.loc 1 876 0 discriminator 1
 1255 0090 4423     		movs	r3, #68
 1256 0092 0022     		movs	r2, #0
 1257 0094 E254     		strb	r2, [r4, r3]
 1258 0096 20E0     		b	.L103
 1259              	.L115:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1260              		.loc 1 876 0 is_stmt 0 discriminator 4
 1261 0098 4523     		movs	r3, #69
 1262 009a 0022     		movs	r2, #0
 1263 009c E254     		strb	r2, [r4, r3]
 1264 009e 21E0     		b	.L104
 1265              	.L106:
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1266              		.loc 1 906 0 is_stmt 1
 1267 00a0 2000     		movs	r0, r4
 1268 00a2 FFF7FEFF 		bl	prvUnlockQueue
 1269              	.LVL138:
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1270              		.loc 1 907 0
 1271 00a6 FFF7FEFF 		bl	xTaskResumeAll
 1272              	.LVL139:
 1273              	.L95:
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1274              		.loc 1 746 0
 1275 00aa FFF7FEFF 		bl	vPortEnterCritical
 1276              	.LVL140:
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1277              		.loc 1 752 0
 1278 00ae A36B     		ldr	r3, [r4, #56]
 1279 00b0 E26B     		ldr	r2, [r4, #60]
 1280 00b2 9342     		cmp	r3, r2
 1281 00b4 C9D3     		bcc	.L96
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1282              		.loc 1 752 0 is_stmt 0 discriminator 1
 1283 00b6 022D     		cmp	r5, #2
 1284 00b8 C7D0     		beq	.L96
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1285              		.loc 1 845 0 is_stmt 1
 1286 00ba 019B     		ldr	r3, [sp, #4]
 1287 00bc 002B     		cmp	r3, #0
 1288 00be DED0     		beq	.L112
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1289              		.loc 1 856 0
 1290 00c0 002E     		cmp	r6, #0
 1291 00c2 E0D0     		beq	.L113
 1292              	.LVL141:
ARM GAS  /tmp/cc8ESiuL.s 			page 67


 1293              	.L102:
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1294              		.loc 1 870 0
 1295 00c4 FFF7FEFF 		bl	vPortExitCritical
 1296              	.LVL142:
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1297              		.loc 1 875 0
 1298 00c8 FFF7FEFF 		bl	vTaskSuspendAll
 1299              	.LVL143:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1300              		.loc 1 876 0
 1301 00cc FFF7FEFF 		bl	vPortEnterCritical
 1302              	.LVL144:
 1303 00d0 4423     		movs	r3, #68
 1304 00d2 E35C     		ldrb	r3, [r4, r3]
 1305 00d4 5BB2     		sxtb	r3, r3
 1306 00d6 0133     		adds	r3, r3, #1
 1307 00d8 DAD0     		beq	.L114
 1308              	.L103:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1309              		.loc 1 876 0 is_stmt 0 discriminator 3
 1310 00da 4523     		movs	r3, #69
 1311 00dc E35C     		ldrb	r3, [r4, r3]
 1312 00de 5BB2     		sxtb	r3, r3
 1313 00e0 0133     		adds	r3, r3, #1
 1314 00e2 D9D0     		beq	.L115
 1315              	.L104:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1316              		.loc 1 876 0 discriminator 6
 1317 00e4 FFF7FEFF 		bl	vPortExitCritical
 1318              	.LVL145:
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1319              		.loc 1 879 0 is_stmt 1 discriminator 6
 1320 00e8 01A9     		add	r1, sp, #4
 1321 00ea 02A8     		add	r0, sp, #8
 1322 00ec FFF7FEFF 		bl	xTaskCheckForTimeOut
 1323              	.LVL146:
 1324 00f0 0028     		cmp	r0, #0
 1325 00f2 13D1     		bne	.L105
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1326              		.loc 1 881 0
 1327 00f4 2000     		movs	r0, r4
 1328 00f6 FFF7FEFF 		bl	prvIsQueueFull
 1329              	.LVL147:
 1330 00fa 0028     		cmp	r0, #0
 1331 00fc D0D0     		beq	.L106
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1332              		.loc 1 884 0
 1333 00fe 2000     		movs	r0, r4
 1334 0100 1030     		adds	r0, r0, #16
 1335 0102 0199     		ldr	r1, [sp, #4]
 1336 0104 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1337              	.LVL148:
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1338              		.loc 1 891 0
 1339 0108 2000     		movs	r0, r4
 1340 010a FFF7FEFF 		bl	prvUnlockQueue
ARM GAS  /tmp/cc8ESiuL.s 			page 68


 1341              	.LVL149:
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1342              		.loc 1 898 0
 1343 010e FFF7FEFF 		bl	xTaskResumeAll
 1344              	.LVL150:
 1345 0112 0028     		cmp	r0, #0
 1346 0114 C9D1     		bne	.L95
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1347              		.loc 1 900 0
 1348 0116 FFF7FEFF 		bl	vPortYield
 1349              	.LVL151:
 1350 011a C6E7     		b	.L95
 1351              	.L105:
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1352              		.loc 1 913 0
 1353 011c 2000     		movs	r0, r4
 1354 011e FFF7FEFF 		bl	prvUnlockQueue
 1355              	.LVL152:
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1356              		.loc 1 914 0
 1357 0122 FFF7FEFF 		bl	xTaskResumeAll
 1358              	.LVL153:
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1359              		.loc 1 917 0
 1360 0126 0020     		movs	r0, #0
 1361 0128 A7E7     		b	.L86
 1362              		.cfi_endproc
 1363              	.LFE13:
 1365              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1366              		.align	1
 1367              		.syntax unified
 1368              		.code	16
 1369              		.thumb_func
 1370              		.fpu softvfp
 1372              	prvInitialiseMutex:
 1373              	.LFB4:
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1374              		.loc 1 453 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 0
 1377              		@ frame_needed = 0, uses_anonymous_args = 0
 1378              	.LVL154:
 1379 0000 10B5     		push	{r4, lr}
 1380              	.LCFI17:
 1381              		.cfi_def_cfa_offset 8
 1382              		.cfi_offset 4, -8
 1383              		.cfi_offset 14, -4
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1384              		.loc 1 454 0
 1385 0002 0028     		cmp	r0, #0
 1386 0004 07D0     		beq	.L116
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1387              		.loc 1 460 0
 1388 0006 0023     		movs	r3, #0
 1389 0008 4360     		str	r3, [r0, #4]
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1390              		.loc 1 461 0
ARM GAS  /tmp/cc8ESiuL.s 			page 69


 1391 000a 0360     		str	r3, [r0]
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1392              		.loc 1 464 0
 1393 000c C360     		str	r3, [r0, #12]
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1394              		.loc 1 469 0
 1395 000e 0022     		movs	r2, #0
 1396 0010 0021     		movs	r1, #0
 1397 0012 FFF7FEFF 		bl	xQueueGenericSend
 1398              	.LVL155:
 1399              	.L116:
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1400              		.loc 1 475 0
 1401              		@ sp needed
 1402 0016 10BD     		pop	{r4, pc}
 1403              		.cfi_endproc
 1404              	.LFE4:
 1406              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1407              		.align	1
 1408              		.global	xQueueCreateMutex
 1409              		.syntax unified
 1410              		.code	16
 1411              		.thumb_func
 1412              		.fpu softvfp
 1414              	xQueueCreateMutex:
 1415              	.LFB5:
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1416              		.loc 1 483 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 0
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
 1420              	.LVL156:
 1421 0000 10B5     		push	{r4, lr}
 1422              	.LCFI18:
 1423              		.cfi_def_cfa_offset 8
 1424              		.cfi_offset 4, -8
 1425              		.cfi_offset 14, -4
 1426 0002 0200     		movs	r2, r0
 1427              	.LVL157:
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1428              		.loc 1 487 0
 1429 0004 0021     		movs	r1, #0
 1430 0006 0120     		movs	r0, #1
 1431              	.LVL158:
 1432 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1433              	.LVL159:
 1434 000c 0400     		movs	r4, r0
 1435              	.LVL160:
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1436              		.loc 1 488 0
 1437 000e FFF7FEFF 		bl	prvInitialiseMutex
 1438              	.LVL161:
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1439              		.loc 1 491 0
 1440 0012 2000     		movs	r0, r4
 1441              		@ sp needed
 1442              	.LVL162:
ARM GAS  /tmp/cc8ESiuL.s 			page 70


 1443 0014 10BD     		pop	{r4, pc}
 1444              		.cfi_endproc
 1445              	.LFE5:
 1447              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1448              		.align	1
 1449              		.global	xQueueCreateMutexStatic
 1450              		.syntax unified
 1451              		.code	16
 1452              		.thumb_func
 1453              		.fpu softvfp
 1455              	xQueueCreateMutexStatic:
 1456              	.LFB6:
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1457              		.loc 1 499 0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 0
 1460              		@ frame_needed = 0, uses_anonymous_args = 0
 1461              	.LVL163:
 1462 0000 10B5     		push	{r4, lr}
 1463              	.LCFI19:
 1464              		.cfi_def_cfa_offset 8
 1465              		.cfi_offset 4, -8
 1466              		.cfi_offset 14, -4
 1467 0002 82B0     		sub	sp, sp, #8
 1468              	.LCFI20:
 1469              		.cfi_def_cfa_offset 16
 1470 0004 0B00     		movs	r3, r1
 1471              	.LVL164:
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1472              		.loc 1 507 0
 1473 0006 0090     		str	r0, [sp]
 1474 0008 0022     		movs	r2, #0
 1475 000a 0021     		movs	r1, #0
 1476              	.LVL165:
 1477 000c 0120     		movs	r0, #1
 1478              	.LVL166:
 1479 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1480              	.LVL167:
 1481 0012 0400     		movs	r4, r0
 1482              	.LVL168:
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1483              		.loc 1 508 0
 1484 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1485              	.LVL169:
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1486              		.loc 1 511 0
 1487 0018 2000     		movs	r0, r4
 1488 001a 02B0     		add	sp, sp, #8
 1489              		@ sp needed
 1490              	.LVL170:
 1491 001c 10BD     		pop	{r4, pc}
 1492              		.cfi_endproc
 1493              	.LFE6:
 1495              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1496              		.align	1
 1497              		.global	xQueueGiveMutexRecursive
 1498              		.syntax unified
ARM GAS  /tmp/cc8ESiuL.s 			page 71


 1499              		.code	16
 1500              		.thumb_func
 1501              		.fpu softvfp
 1503              	xQueueGiveMutexRecursive:
 1504              	.LFB9:
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 1505              		.loc 1 575 0
 1506              		.cfi_startproc
 1507              		@ args = 0, pretend = 0, frame = 0
 1508              		@ frame_needed = 0, uses_anonymous_args = 0
 1509              	.LVL171:
 1510 0000 70B5     		push	{r4, r5, r6, lr}
 1511              	.LCFI21:
 1512              		.cfi_def_cfa_offset 16
 1513              		.cfi_offset 4, -16
 1514              		.cfi_offset 5, -12
 1515              		.cfi_offset 6, -8
 1516              		.cfi_offset 14, -4
 1517 0002 041E     		subs	r4, r0, #0
 1518              	.LVL172:
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1519              		.loc 1 579 0
 1520 0004 01D1     		bne	.L121
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1521              		.loc 1 579 0 is_stmt 0 discriminator 1
 1522              		.syntax divided
 1523              	@ 579 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1524 0006 72B6     		 cpsid i 
 1525              	@ 0 "" 2
 1526              		.thumb
 1527              		.syntax unified
 1528              	.L122:
 1529 0008 FEE7     		b	.L122
 1530              	.L121:
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1531              		.loc 1 587 0 is_stmt 1
 1532 000a 4568     		ldr	r5, [r0, #4]
 1533 000c FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1534              	.LVL173:
 1535 0010 8542     		cmp	r5, r0
 1536 0012 01D0     		beq	.L126
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1537              		.loc 1 616 0
 1538 0014 0020     		movs	r0, #0
 1539              	.L120:
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1540              		.loc 1 622 0
 1541              		@ sp needed
 1542              	.LVL174:
 1543 0016 70BD     		pop	{r4, r5, r6, pc}
 1544              	.LVL175:
 1545              	.L126:
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1546              		.loc 1 596 0
 1547 0018 E368     		ldr	r3, [r4, #12]
 1548 001a 013B     		subs	r3, r3, #1
 1549 001c E360     		str	r3, [r4, #12]
ARM GAS  /tmp/cc8ESiuL.s 			page 72


 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1550              		.loc 1 599 0
 1551 001e 002B     		cmp	r3, #0
 1552 0020 06D1     		bne	.L125
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1553              		.loc 1 603 0
 1554 0022 1A00     		movs	r2, r3
 1555 0024 1900     		movs	r1, r3
 1556 0026 2000     		movs	r0, r4
 1557 0028 FFF7FEFF 		bl	xQueueGenericSend
 1558              	.LVL176:
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1559              		.loc 1 610 0
 1560 002c 0120     		movs	r0, #1
 1561 002e F2E7     		b	.L120
 1562              	.L125:
 1563 0030 0120     		movs	r0, #1
 1564              	.LVL177:
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1565              		.loc 1 621 0
 1566 0032 F0E7     		b	.L120
 1567              		.cfi_endproc
 1568              	.LFE9:
 1570              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1571              		.align	1
 1572              		.global	xQueueGenericSendFromISR
 1573              		.syntax unified
 1574              		.code	16
 1575              		.thumb_func
 1576              		.fpu softvfp
 1578              	xQueueGenericSendFromISR:
 1579              	.LFB14:
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1580              		.loc 1 924 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 8
 1583              		@ frame_needed = 0, uses_anonymous_args = 0
 1584              	.LVL178:
 1585 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1586              	.LCFI22:
 1587              		.cfi_def_cfa_offset 20
 1588              		.cfi_offset 4, -20
 1589              		.cfi_offset 5, -16
 1590              		.cfi_offset 6, -12
 1591              		.cfi_offset 7, -8
 1592              		.cfi_offset 14, -4
 1593 0002 83B0     		sub	sp, sp, #12
 1594              	.LCFI23:
 1595              		.cfi_def_cfa_offset 32
 1596 0004 0400     		movs	r4, r0
 1597 0006 0091     		str	r1, [sp]
 1598 0008 1500     		movs	r5, r2
 1599 000a 1F00     		movs	r7, r3
 1600              	.LVL179:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1601              		.loc 1 929 0
 1602 000c 0028     		cmp	r0, #0
ARM GAS  /tmp/cc8ESiuL.s 			page 73


 1603 000e 07D0     		beq	.L141
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1604              		.loc 1 930 0
 1605 0010 009B     		ldr	r3, [sp]
 1606              	.LVL180:
 1607 0012 002B     		cmp	r3, #0
 1608 0014 06D1     		bne	.L130
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1609              		.loc 1 930 0 is_stmt 0 discriminator 2
 1610 0016 036C     		ldr	r3, [r0, #64]
 1611 0018 002B     		cmp	r3, #0
 1612 001a 03D0     		beq	.L130
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1613              		.loc 1 930 0
 1614              		.syntax divided
 1615              	@ 930 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1616 001c 72B6     		 cpsid i 
 1617              	@ 0 "" 2
 1618              		.thumb
 1619              		.syntax unified
 1620              	.L131:
 1621 001e FEE7     		b	.L131
 1622              	.LVL181:
 1623              	.L141:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1624              		.loc 1 929 0 is_stmt 1 discriminator 1
 1625              		.syntax divided
 1626              	@ 929 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1627 0020 72B6     		 cpsid i 
 1628              	@ 0 "" 2
 1629              		.thumb
 1630              		.syntax unified
 1631              	.L129:
 1632 0022 FEE7     		b	.L129
 1633              	.LVL182:
 1634              	.L130:
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1635              		.loc 1 931 0
 1636 0024 022F     		cmp	r7, #2
 1637 0026 04D1     		bne	.L132
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1638              		.loc 1 931 0 is_stmt 0 discriminator 2
 1639 0028 E36B     		ldr	r3, [r4, #60]
 1640 002a 012B     		cmp	r3, #1
 1641 002c 01D0     		beq	.L132
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1642              		.loc 1 931 0
 1643              		.syntax divided
 1644              	@ 931 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1645 002e 72B6     		 cpsid i 
 1646              	@ 0 "" 2
 1647              		.thumb
 1648              		.syntax unified
 1649              	.L133:
 1650 0030 FEE7     		b	.L133
 1651              	.L132:
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  /tmp/cc8ESiuL.s 			page 74


 1652              		.loc 1 954 0 is_stmt 1
 1653 0032 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1654              	.LVL183:
 1655 0036 0190     		str	r0, [sp, #4]
 1656              	.LVL184:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1657              		.loc 1 956 0
 1658 0038 A36B     		ldr	r3, [r4, #56]
 1659 003a E26B     		ldr	r2, [r4, #60]
 1660 003c 9342     		cmp	r3, r2
 1661 003e 03D3     		bcc	.L134
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1662              		.loc 1 956 0 is_stmt 0 discriminator 1
 1663 0040 022F     		cmp	r7, #2
 1664 0042 01D0     		beq	.L134
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1665              		.loc 1 1065 0 is_stmt 1
 1666 0044 0024     		movs	r4, #0
 1667              	.LVL185:
 1668 0046 0EE0     		b	.L135
 1669              	.LVL186:
 1670              	.L134:
 1671              	.LBB5:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1672              		.loc 1 958 0
 1673 0048 4523     		movs	r3, #69
 1674 004a E65C     		ldrb	r6, [r4, r3]
 1675 004c 76B2     		sxtb	r6, r6
 1676              	.LVL187:
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1677              		.loc 1 967 0
 1678 004e 3A00     		movs	r2, r7
 1679 0050 0099     		ldr	r1, [sp]
 1680 0052 2000     		movs	r0, r4
 1681              	.LVL188:
 1682 0054 FFF7FEFF 		bl	prvCopyDataToQueue
 1683              	.LVL189:
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1684              		.loc 1 971 0
 1685 0058 731C     		adds	r3, r6, #1
 1686 005a 0AD0     		beq	.L142
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1687              		.loc 1 1057 0
 1688 005c 0136     		adds	r6, r6, #1
 1689              	.LVL190:
 1690 005e 76B2     		sxtb	r6, r6
 1691              	.LVL191:
 1692 0060 4523     		movs	r3, #69
 1693 0062 E654     		strb	r6, [r4, r3]
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1694              		.loc 1 1060 0
 1695 0064 0124     		movs	r4, #1
 1696              	.LVL192:
 1697              	.L135:
 1698              	.LBE5:
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1699              		.loc 1 1068 0
ARM GAS  /tmp/cc8ESiuL.s 			page 75


 1700 0066 0198     		ldr	r0, [sp, #4]
 1701 0068 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1702              	.LVL193:
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1703              		.loc 1 1071 0
 1704 006c 2000     		movs	r0, r4
 1705 006e 03B0     		add	sp, sp, #12
 1706              	.LVL194:
 1707              		@ sp needed
 1708              	.LVL195:
 1709              	.LVL196:
 1710              	.LVL197:
 1711 0070 F0BD     		pop	{r4, r5, r6, r7, pc}
 1712              	.LVL198:
 1713              	.L142:
 1714              	.LBB6:
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1715              		.loc 1 1026 0
 1716 0072 636A     		ldr	r3, [r4, #36]
 1717 0074 002B     		cmp	r3, #0
 1718 0076 0AD0     		beq	.L138
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1719              		.loc 1 1028 0
 1720 0078 2000     		movs	r0, r4
 1721 007a 2430     		adds	r0, r0, #36
 1722 007c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1723              	.LVL199:
 1724 0080 0028     		cmp	r0, #0
 1725 0082 06D0     		beq	.L139
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1726              		.loc 1 1032 0
 1727 0084 002D     		cmp	r5, #0
 1728 0086 06D0     		beq	.L140
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1729              		.loc 1 1034 0
 1730 0088 0124     		movs	r4, #1
 1731              	.LVL200:
 1732 008a 2C60     		str	r4, [r5]
 1733 008c EBE7     		b	.L135
 1734              	.LVL201:
 1735              	.L138:
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1736              		.loc 1 1060 0
 1737 008e 0124     		movs	r4, #1
 1738              	.LVL202:
 1739 0090 E9E7     		b	.L135
 1740              	.LVL203:
 1741              	.L139:
 1742 0092 0124     		movs	r4, #1
 1743              	.LVL204:
 1744 0094 E7E7     		b	.L135
 1745              	.LVL205:
 1746              	.L140:
 1747 0096 0124     		movs	r4, #1
 1748              	.LVL206:
 1749 0098 E5E7     		b	.L135
 1750              	.LBE6:
ARM GAS  /tmp/cc8ESiuL.s 			page 76


 1751              		.cfi_endproc
 1752              	.LFE14:
 1754              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1755              		.align	1
 1756              		.global	xQueueGiveFromISR
 1757              		.syntax unified
 1758              		.code	16
 1759              		.thumb_func
 1760              		.fpu softvfp
 1762              	xQueueGiveFromISR:
 1763              	.LFB15:
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1764              		.loc 1 1075 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              	.LVL207:
 1769 0000 70B5     		push	{r4, r5, r6, lr}
 1770              	.LCFI24:
 1771              		.cfi_def_cfa_offset 16
 1772              		.cfi_offset 4, -16
 1773              		.cfi_offset 5, -12
 1774              		.cfi_offset 6, -8
 1775              		.cfi_offset 14, -4
 1776 0002 0400     		movs	r4, r0
 1777 0004 0E00     		movs	r6, r1
 1778              	.LVL208:
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1779              		.loc 1 1086 0
 1780 0006 0028     		cmp	r0, #0
 1781 0008 04D0     		beq	.L156
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1782              		.loc 1 1090 0
 1783 000a 036C     		ldr	r3, [r0, #64]
 1784 000c 002B     		cmp	r3, #0
 1785 000e 03D0     		beq	.L146
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1786              		.loc 1 1090 0 is_stmt 0 discriminator 1
 1787              		.syntax divided
 1788              	@ 1090 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1789 0010 72B6     		 cpsid i 
 1790              	@ 0 "" 2
 1791              		.thumb
 1792              		.syntax unified
 1793              	.L147:
 1794 0012 FEE7     		b	.L147
 1795              	.L156:
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1796              		.loc 1 1086 0 is_stmt 1 discriminator 1
 1797              		.syntax divided
 1798              	@ 1086 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1799 0014 72B6     		 cpsid i 
 1800              	@ 0 "" 2
 1801              		.thumb
 1802              		.syntax unified
 1803              	.L145:
 1804 0016 FEE7     		b	.L145
ARM GAS  /tmp/cc8ESiuL.s 			page 77


 1805              	.L146:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1806              		.loc 1 1095 0
 1807 0018 0368     		ldr	r3, [r0]
 1808 001a 002B     		cmp	r3, #0
 1809 001c 1FD0     		beq	.L157
 1810              	.L148:
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1811              		.loc 1 1113 0
 1812 001e FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1813              	.LVL209:
 1814 0022 0500     		movs	r5, r0
 1815              	.LVL210:
 1816              	.LBB7:
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1817              		.loc 1 1115 0
 1818 0024 A26B     		ldr	r2, [r4, #56]
 1819              	.LVL211:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1820              		.loc 1 1120 0
 1821 0026 E36B     		ldr	r3, [r4, #60]
 1822 0028 9342     		cmp	r3, r2
 1823 002a 23D9     		bls	.L152
 1824              	.LBB8:
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1825              		.loc 1 1122 0
 1826 002c 4523     		movs	r3, #69
 1827 002e E35C     		ldrb	r3, [r4, r3]
 1828 0030 5BB2     		sxtb	r3, r3
 1829              	.LVL212:
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1830              		.loc 1 1132 0
 1831 0032 0132     		adds	r2, r2, #1
 1832              	.LVL213:
 1833 0034 A263     		str	r2, [r4, #56]
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1834              		.loc 1 1136 0
 1835 0036 5A1C     		adds	r2, r3, #1
 1836 0038 16D1     		bne	.L151
 1837              	.LVL214:
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1838              		.loc 1 1191 0
 1839 003a 636A     		ldr	r3, [r4, #36]
 1840              	.LVL215:
 1841 003c 002B     		cmp	r3, #0
 1842 003e 1BD0     		beq	.L153
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1843              		.loc 1 1193 0
 1844 0040 2000     		movs	r0, r4
 1845              	.LVL216:
 1846 0042 2430     		adds	r0, r0, #36
 1847 0044 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1848              	.LVL217:
 1849 0048 0028     		cmp	r0, #0
 1850 004a 17D0     		beq	.L154
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1851              		.loc 1 1197 0
ARM GAS  /tmp/cc8ESiuL.s 			page 78


 1852 004c 002E     		cmp	r6, #0
 1853 004e 17D0     		beq	.L155
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1854              		.loc 1 1199 0
 1855 0050 0124     		movs	r4, #1
 1856              	.LVL218:
 1857 0052 3460     		str	r4, [r6]
 1858              	.L150:
 1859              	.LVL219:
 1860              	.LBE8:
 1861              	.LBE7:
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1862              		.loc 1 1233 0
 1863 0054 2800     		movs	r0, r5
 1864 0056 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1865              	.LVL220:
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1866              		.loc 1 1236 0
 1867 005a 2000     		movs	r0, r4
 1868              		@ sp needed
 1869              	.LVL221:
 1870              	.LVL222:
 1871              	.LVL223:
 1872 005c 70BD     		pop	{r4, r5, r6, pc}
 1873              	.LVL224:
 1874              	.L157:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1875              		.loc 1 1095 0 discriminator 2
 1876 005e 4368     		ldr	r3, [r0, #4]
 1877 0060 002B     		cmp	r3, #0
 1878 0062 DCD0     		beq	.L148
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1879              		.loc 1 1095 0 is_stmt 0
 1880              		.syntax divided
 1881              	@ 1095 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1882 0064 72B6     		 cpsid i 
 1883              	@ 0 "" 2
 1884              		.thumb
 1885              		.syntax unified
 1886              	.L149:
 1887 0066 FEE7     		b	.L149
 1888              	.LVL225:
 1889              	.L151:
 1890              	.LBB11:
 1891              	.LBB9:
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1892              		.loc 1 1222 0 is_stmt 1
 1893 0068 0133     		adds	r3, r3, #1
 1894              	.LVL226:
 1895 006a 5BB2     		sxtb	r3, r3
 1896              	.LVL227:
 1897 006c 4522     		movs	r2, #69
 1898 006e A354     		strb	r3, [r4, r2]
 1899              	.LVL228:
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1900              		.loc 1 1225 0
 1901 0070 0124     		movs	r4, #1
ARM GAS  /tmp/cc8ESiuL.s 			page 79


 1902              	.LVL229:
 1903 0072 EFE7     		b	.L150
 1904              	.LVL230:
 1905              	.L152:
 1906              	.LBE9:
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1907              		.loc 1 1230 0
 1908 0074 0024     		movs	r4, #0
 1909              	.LVL231:
 1910 0076 EDE7     		b	.L150
 1911              	.LVL232:
 1912              	.L153:
 1913              	.LBB10:
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1914              		.loc 1 1225 0
 1915 0078 0124     		movs	r4, #1
 1916              	.LVL233:
 1917 007a EBE7     		b	.L150
 1918              	.LVL234:
 1919              	.L154:
 1920 007c 0124     		movs	r4, #1
 1921              	.LVL235:
 1922 007e E9E7     		b	.L150
 1923              	.LVL236:
 1924              	.L155:
 1925 0080 0124     		movs	r4, #1
 1926              	.LVL237:
 1927 0082 E7E7     		b	.L150
 1928              	.LBE10:
 1929              	.LBE11:
 1930              		.cfi_endproc
 1931              	.LFE15:
 1933              		.section	.text.xQueueReceive,"ax",%progbits
 1934              		.align	1
 1935              		.global	xQueueReceive
 1936              		.syntax unified
 1937              		.code	16
 1938              		.thumb_func
 1939              		.fpu softvfp
 1941              	xQueueReceive:
 1942              	.LFB16:
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1943              		.loc 1 1240 0
 1944              		.cfi_startproc
 1945              		@ args = 0, pretend = 0, frame = 16
 1946              		@ frame_needed = 0, uses_anonymous_args = 0
 1947              	.LVL238:
 1948 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1949              	.LCFI25:
 1950              		.cfi_def_cfa_offset 20
 1951              		.cfi_offset 4, -20
 1952              		.cfi_offset 5, -16
 1953              		.cfi_offset 6, -12
 1954              		.cfi_offset 7, -8
 1955              		.cfi_offset 14, -4
 1956 0002 85B0     		sub	sp, sp, #20
 1957              	.LCFI26:
ARM GAS  /tmp/cc8ESiuL.s 			page 80


 1958              		.cfi_def_cfa_offset 40
 1959 0004 0400     		movs	r4, r0
 1960 0006 0F00     		movs	r7, r1
 1961 0008 0192     		str	r2, [sp, #4]
 1962              	.LVL239:
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1963              		.loc 1 1246 0
 1964 000a 0028     		cmp	r0, #0
 1965 000c 06D0     		beq	.L178
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1966              		.loc 1 1250 0
 1967 000e 0029     		cmp	r1, #0
 1968 0010 06D1     		bne	.L161
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1969              		.loc 1 1250 0 is_stmt 0 discriminator 2
 1970 0012 036C     		ldr	r3, [r0, #64]
 1971 0014 002B     		cmp	r3, #0
 1972 0016 03D0     		beq	.L161
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1973              		.loc 1 1250 0
 1974              		.syntax divided
 1975              	@ 1250 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1976 0018 72B6     		 cpsid i 
 1977              	@ 0 "" 2
 1978              		.thumb
 1979              		.syntax unified
 1980              	.L162:
 1981 001a FEE7     		b	.L162
 1982              	.L178:
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1983              		.loc 1 1246 0 is_stmt 1 discriminator 1
 1984              		.syntax divided
 1985              	@ 1246 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1986 001c 72B6     		 cpsid i 
 1987              	@ 0 "" 2
 1988              		.thumb
 1989              		.syntax unified
 1990              	.L160:
 1991 001e FEE7     		b	.L160
 1992              	.L161:
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1993              		.loc 1 1255 0
 1994 0020 FFF7FEFF 		bl	xTaskGetSchedulerState
 1995              	.LVL240:
 1996 0024 0028     		cmp	r0, #0
 1997 0026 04D1     		bne	.L176
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1998              		.loc 1 1255 0 is_stmt 0 discriminator 2
 1999 0028 019B     		ldr	r3, [sp, #4]
 2000 002a 002B     		cmp	r3, #0
 2001 002c 03D0     		beq	.L177
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2002              		.loc 1 1255 0
 2003              		.syntax divided
 2004              	@ 1255 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2005 002e 72B6     		 cpsid i 
 2006              	@ 0 "" 2
ARM GAS  /tmp/cc8ESiuL.s 			page 81


 2007              		.thumb
 2008              		.syntax unified
 2009              	.L164:
 2010 0030 FEE7     		b	.L164
 2011              	.L176:
 2012 0032 0026     		movs	r6, #0
 2013 0034 39E0     		b	.L165
 2014              	.L177:
 2015 0036 0026     		movs	r6, #0
 2016 0038 37E0     		b	.L165
 2017              	.LVL241:
 2018              	.L181:
 2019              	.LBB12:
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 2020              		.loc 1 1274 0 is_stmt 1
 2021 003a 3900     		movs	r1, r7
 2022 003c 2000     		movs	r0, r4
 2023 003e FFF7FEFF 		bl	prvCopyDataFromQueue
 2024              	.LVL242:
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2025              		.loc 1 1276 0
 2026 0042 013D     		subs	r5, r5, #1
 2027              	.LVL243:
 2028 0044 A563     		str	r5, [r4, #56]
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2029              		.loc 1 1281 0
 2030 0046 2369     		ldr	r3, [r4, #16]
 2031 0048 002B     		cmp	r3, #0
 2032 004a 04D1     		bne	.L179
 2033              	.L167:
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2034              		.loc 1 1297 0
 2035 004c FFF7FEFF 		bl	vPortExitCritical
 2036              	.LVL244:
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2037              		.loc 1 1298 0
 2038 0050 0120     		movs	r0, #1
 2039              	.LVL245:
 2040              	.L158:
 2041              	.LBE12:
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2042              		.loc 1 1377 0
 2043 0052 05B0     		add	sp, sp, #20
 2044              		@ sp needed
 2045              	.LVL246:
 2046              	.LVL247:
 2047              	.LVL248:
 2048 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 2049              	.LVL249:
 2050              	.L179:
 2051              	.LBB13:
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2052              		.loc 1 1283 0
 2053 0056 2000     		movs	r0, r4
 2054 0058 1030     		adds	r0, r0, #16
 2055 005a FFF7FEFF 		bl	xTaskRemoveFromEventList
 2056              	.LVL250:
ARM GAS  /tmp/cc8ESiuL.s 			page 82


 2057 005e 0028     		cmp	r0, #0
 2058 0060 F4D0     		beq	.L167
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2059              		.loc 1 1285 0
 2060 0062 FFF7FEFF 		bl	vPortYield
 2061              	.LVL251:
 2062 0066 F1E7     		b	.L167
 2063              	.LVL252:
 2064              	.L182:
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2065              		.loc 1 1306 0
 2066 0068 FFF7FEFF 		bl	vPortExitCritical
 2067              	.LVL253:
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2068              		.loc 1 1308 0
 2069 006c 0020     		movs	r0, #0
 2070 006e F0E7     		b	.L158
 2071              	.L183:
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2072              		.loc 1 1314 0
 2073 0070 02A8     		add	r0, sp, #8
 2074 0072 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2075              	.LVL254:
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2076              		.loc 1 1315 0
 2077 0076 0136     		adds	r6, r6, #1
 2078 0078 21E0     		b	.L170
 2079              	.LVL255:
 2080              	.L184:
 2081              	.LBE13:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2082              		.loc 1 1330 0 discriminator 1
 2083 007a 4423     		movs	r3, #68
 2084 007c 0022     		movs	r2, #0
 2085 007e E254     		strb	r2, [r4, r3]
 2086 0080 28E0     		b	.L171
 2087              	.L185:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2088              		.loc 1 1330 0 is_stmt 0 discriminator 4
 2089 0082 4523     		movs	r3, #69
 2090 0084 0022     		movs	r2, #0
 2091 0086 E254     		strb	r2, [r4, r3]
 2092 0088 29E0     		b	.L172
 2093              	.L174:
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2094              		.loc 1 1355 0 is_stmt 1
 2095 008a 2000     		movs	r0, r4
 2096 008c FFF7FEFF 		bl	prvUnlockQueue
 2097              	.LVL256:
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2098              		.loc 1 1356 0
 2099 0090 FFF7FEFF 		bl	xTaskResumeAll
 2100              	.LVL257:
 2101 0094 09E0     		b	.L165
 2102              	.L173:
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2103              		.loc 1 1363 0
ARM GAS  /tmp/cc8ESiuL.s 			page 83


 2104 0096 2000     		movs	r0, r4
 2105 0098 FFF7FEFF 		bl	prvUnlockQueue
 2106              	.LVL258:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2107              		.loc 1 1364 0
 2108 009c FFF7FEFF 		bl	xTaskResumeAll
 2109              	.LVL259:
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2110              		.loc 1 1366 0
 2111 00a0 2000     		movs	r0, r4
 2112 00a2 FFF7FEFF 		bl	prvIsQueueEmpty
 2113              	.LVL260:
 2114 00a6 0028     		cmp	r0, #0
 2115 00a8 35D1     		bne	.L180
 2116              	.LVL261:
 2117              	.L165:
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2118              		.loc 1 1265 0
 2119 00aa FFF7FEFF 		bl	vPortEnterCritical
 2120              	.LVL262:
 2121              	.LBB14:
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2122              		.loc 1 1267 0
 2123 00ae A56B     		ldr	r5, [r4, #56]
 2124              	.LVL263:
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2125              		.loc 1 1271 0
 2126 00b0 002D     		cmp	r5, #0
 2127 00b2 C2D1     		bne	.L181
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2128              		.loc 1 1302 0
 2129 00b4 019B     		ldr	r3, [sp, #4]
 2130 00b6 002B     		cmp	r3, #0
 2131 00b8 D6D0     		beq	.L182
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2132              		.loc 1 1310 0
 2133 00ba 002E     		cmp	r6, #0
 2134 00bc D8D0     		beq	.L183
 2135              	.LVL264:
 2136              	.L170:
 2137              	.LBE14:
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2138              		.loc 1 1324 0
 2139 00be FFF7FEFF 		bl	vPortExitCritical
 2140              	.LVL265:
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2141              		.loc 1 1329 0
 2142 00c2 FFF7FEFF 		bl	vTaskSuspendAll
 2143              	.LVL266:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2144              		.loc 1 1330 0
 2145 00c6 FFF7FEFF 		bl	vPortEnterCritical
 2146              	.LVL267:
 2147 00ca 4423     		movs	r3, #68
 2148 00cc E35C     		ldrb	r3, [r4, r3]
 2149 00ce 5BB2     		sxtb	r3, r3
 2150 00d0 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc8ESiuL.s 			page 84


 2151 00d2 D2D0     		beq	.L184
 2152              	.L171:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2153              		.loc 1 1330 0 is_stmt 0 discriminator 3
 2154 00d4 4523     		movs	r3, #69
 2155 00d6 E35C     		ldrb	r3, [r4, r3]
 2156 00d8 5BB2     		sxtb	r3, r3
 2157 00da 0133     		adds	r3, r3, #1
 2158 00dc D1D0     		beq	.L185
 2159              	.L172:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2160              		.loc 1 1330 0 discriminator 6
 2161 00de FFF7FEFF 		bl	vPortExitCritical
 2162              	.LVL268:
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2163              		.loc 1 1333 0 is_stmt 1 discriminator 6
 2164 00e2 01A9     		add	r1, sp, #4
 2165 00e4 02A8     		add	r0, sp, #8
 2166 00e6 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2167              	.LVL269:
 2168 00ea 0028     		cmp	r0, #0
 2169 00ec D3D1     		bne	.L173
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2170              		.loc 1 1337 0
 2171 00ee 2000     		movs	r0, r4
 2172 00f0 FFF7FEFF 		bl	prvIsQueueEmpty
 2173              	.LVL270:
 2174 00f4 0028     		cmp	r0, #0
 2175 00f6 C8D0     		beq	.L174
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2176              		.loc 1 1340 0
 2177 00f8 2000     		movs	r0, r4
 2178 00fa 2430     		adds	r0, r0, #36
 2179 00fc 0199     		ldr	r1, [sp, #4]
 2180 00fe FFF7FEFF 		bl	vTaskPlaceOnEventList
 2181              	.LVL271:
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2182              		.loc 1 1341 0
 2183 0102 2000     		movs	r0, r4
 2184 0104 FFF7FEFF 		bl	prvUnlockQueue
 2185              	.LVL272:
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2186              		.loc 1 1342 0
 2187 0108 FFF7FEFF 		bl	xTaskResumeAll
 2188              	.LVL273:
 2189 010c 0028     		cmp	r0, #0
 2190 010e CCD1     		bne	.L165
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2191              		.loc 1 1344 0
 2192 0110 FFF7FEFF 		bl	vPortYield
 2193              	.LVL274:
 2194 0114 C9E7     		b	.L165
 2195              	.L180:
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2196              		.loc 1 1369 0
 2197 0116 0020     		movs	r0, #0
 2198 0118 9BE7     		b	.L158
ARM GAS  /tmp/cc8ESiuL.s 			page 85


 2199              		.cfi_endproc
 2200              	.LFE16:
 2202              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2203              		.align	1
 2204              		.global	xQueueSemaphoreTake
 2205              		.syntax unified
 2206              		.code	16
 2207              		.thumb_func
 2208              		.fpu softvfp
 2210              	xQueueSemaphoreTake:
 2211              	.LFB17:
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2212              		.loc 1 1381 0
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 16
 2215              		@ frame_needed = 0, uses_anonymous_args = 0
 2216              	.LVL275:
 2217 0000 70B5     		push	{r4, r5, r6, lr}
 2218              	.LCFI27:
 2219              		.cfi_def_cfa_offset 16
 2220              		.cfi_offset 4, -16
 2221              		.cfi_offset 5, -12
 2222              		.cfi_offset 6, -8
 2223              		.cfi_offset 14, -4
 2224 0002 84B0     		sub	sp, sp, #16
 2225              	.LCFI28:
 2226              		.cfi_def_cfa_offset 32
 2227 0004 041E     		subs	r4, r0, #0
 2228 0006 0191     		str	r1, [sp, #4]
 2229              	.LVL276:
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2230              		.loc 1 1391 0
 2231 0008 01D1     		bne	.L187
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2232              		.loc 1 1391 0 is_stmt 0 discriminator 1
 2233              		.syntax divided
 2234              	@ 1391 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2235 000a 72B6     		 cpsid i 
 2236              	@ 0 "" 2
 2237              		.thumb
 2238              		.syntax unified
 2239              	.L188:
 2240 000c FEE7     		b	.L188
 2241              	.L187:
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2242              		.loc 1 1395 0 is_stmt 1
 2243 000e 036C     		ldr	r3, [r0, #64]
 2244 0010 002B     		cmp	r3, #0
 2245 0012 01D0     		beq	.L189
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2246              		.loc 1 1395 0 is_stmt 0 discriminator 1
 2247              		.syntax divided
 2248              	@ 1395 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2249 0014 72B6     		 cpsid i 
 2250              	@ 0 "" 2
 2251              		.thumb
 2252              		.syntax unified
ARM GAS  /tmp/cc8ESiuL.s 			page 86


 2253              	.L190:
 2254 0016 FEE7     		b	.L190
 2255              	.L189:
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2256              		.loc 1 1400 0 is_stmt 1
 2257 0018 FFF7FEFF 		bl	xTaskGetSchedulerState
 2258              	.LVL277:
 2259 001c 0028     		cmp	r0, #0
 2260 001e 04D1     		bne	.L208
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2261              		.loc 1 1400 0 is_stmt 0 discriminator 2
 2262 0020 019B     		ldr	r3, [sp, #4]
 2263 0022 002B     		cmp	r3, #0
 2264 0024 04D0     		beq	.L209
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2265              		.loc 1 1400 0
 2266              		.syntax divided
 2267              	@ 1400 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2268 0026 72B6     		 cpsid i 
 2269              	@ 0 "" 2
 2270              		.thumb
 2271              		.syntax unified
 2272              	.L192:
 2273 0028 FEE7     		b	.L192
 2274              	.L208:
 2275 002a 0025     		movs	r5, #0
 2276 002c 2E00     		movs	r6, r5
 2277 002e 48E0     		b	.L193
 2278              	.L209:
 2279 0030 0025     		movs	r5, #0
 2280 0032 2E00     		movs	r6, r5
 2281 0034 45E0     		b	.L193
 2282              	.LVL278:
 2283              	.L211:
 2284              	.LBB15:
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2285              		.loc 1 1425 0 is_stmt 1
 2286 0036 013B     		subs	r3, r3, #1
 2287              	.LVL279:
 2288 0038 A363     		str	r3, [r4, #56]
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2289              		.loc 1 1429 0
 2290 003a 2368     		ldr	r3, [r4]
 2291              	.LVL280:
 2292 003c 002B     		cmp	r3, #0
 2293 003e 02D1     		bne	.L195
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2294              		.loc 1 1433 0
 2295 0040 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2296              	.LVL281:
 2297 0044 6060     		str	r0, [r4, #4]
 2298              	.L195:
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2299              		.loc 1 1444 0
 2300 0046 2369     		ldr	r3, [r4, #16]
 2301 0048 002B     		cmp	r3, #0
 2302 004a 07D0     		beq	.L196
ARM GAS  /tmp/cc8ESiuL.s 			page 87


1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2303              		.loc 1 1446 0
 2304 004c 2000     		movs	r0, r4
 2305 004e 1030     		adds	r0, r0, #16
 2306 0050 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2307              	.LVL282:
 2308 0054 0028     		cmp	r0, #0
 2309 0056 01D0     		beq	.L196
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2310              		.loc 1 1448 0
 2311 0058 FFF7FEFF 		bl	vPortYield
 2312              	.LVL283:
 2313              	.L196:
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2314              		.loc 1 1460 0
 2315 005c FFF7FEFF 		bl	vPortExitCritical
 2316              	.LVL284:
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2317              		.loc 1 1461 0
 2318 0060 0125     		movs	r5, #1
 2319              	.LVL285:
 2320              	.L186:
 2321              	.LBE15:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2322              		.loc 1 1596 0
 2323 0062 2800     		movs	r0, r5
 2324 0064 04B0     		add	sp, sp, #16
 2325              		@ sp needed
 2326              	.LVL286:
 2327              	.LVL287:
 2328 0066 70BD     		pop	{r4, r5, r6, pc}
 2329              	.LVL288:
 2330              	.L212:
 2331              	.LBB16:
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2332              		.loc 1 1472 0
 2333 0068 002D     		cmp	r5, #0
 2334 006a 01D0     		beq	.L199
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2335              		.loc 1 1472 0 is_stmt 0 discriminator 1
 2336              		.syntax divided
 2337              	@ 1472 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2338 006c 72B6     		 cpsid i 
 2339              	@ 0 "" 2
 2340              		.thumb
 2341              		.syntax unified
 2342              	.L200:
 2343 006e FEE7     		b	.L200
 2344              	.L199:
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2345              		.loc 1 1478 0 is_stmt 1
 2346 0070 FFF7FEFF 		bl	vPortExitCritical
 2347              	.LVL289:
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2348              		.loc 1 1480 0
 2349 0074 F5E7     		b	.L186
 2350              	.L213:
ARM GAS  /tmp/cc8ESiuL.s 			page 88


1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2351              		.loc 1 1486 0
 2352 0076 02A8     		add	r0, sp, #8
 2353 0078 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2354              	.LVL290:
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2355              		.loc 1 1487 0
 2356 007c 0136     		adds	r6, r6, #1
 2357 007e 2AE0     		b	.L201
 2358              	.LVL291:
 2359              	.L214:
 2360              	.LBE16:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2361              		.loc 1 1502 0 discriminator 1
 2362 0080 4423     		movs	r3, #68
 2363 0082 0022     		movs	r2, #0
 2364 0084 E254     		strb	r2, [r4, r3]
 2365 0086 31E0     		b	.L202
 2366              	.L215:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2367              		.loc 1 1502 0 is_stmt 0 discriminator 4
 2368 0088 4523     		movs	r3, #69
 2369 008a 0022     		movs	r2, #0
 2370 008c E254     		strb	r2, [r4, r3]
 2371 008e 32E0     		b	.L203
 2372              	.L216:
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2373              		.loc 1 1519 0 is_stmt 1
 2374 0090 FFF7FEFF 		bl	vPortEnterCritical
 2375              	.LVL292:
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2376              		.loc 1 1521 0
 2377 0094 6068     		ldr	r0, [r4, #4]
 2378 0096 FFF7FEFF 		bl	xTaskPriorityInherit
 2379              	.LVL293:
 2380 009a 0500     		movs	r5, r0
 2381              	.LVL294:
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2382              		.loc 1 1523 0
 2383 009c FFF7FEFF 		bl	vPortExitCritical
 2384              	.LVL295:
 2385 00a0 39E0     		b	.L206
 2386              	.L205:
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2387              		.loc 1 1547 0
 2388 00a2 2000     		movs	r0, r4
 2389 00a4 FFF7FEFF 		bl	prvUnlockQueue
 2390              	.LVL296:
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2391              		.loc 1 1548 0
 2392 00a8 FFF7FEFF 		bl	xTaskResumeAll
 2393              	.LVL297:
 2394 00ac 09E0     		b	.L193
 2395              	.L204:
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2396              		.loc 1 1554 0
 2397 00ae 2000     		movs	r0, r4
ARM GAS  /tmp/cc8ESiuL.s 			page 89


 2398 00b0 FFF7FEFF 		bl	prvUnlockQueue
 2399              	.LVL298:
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2400              		.loc 1 1555 0
 2401 00b4 FFF7FEFF 		bl	xTaskResumeAll
 2402              	.LVL299:
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2403              		.loc 1 1561 0
 2404 00b8 2000     		movs	r0, r4
 2405 00ba FFF7FEFF 		bl	prvIsQueueEmpty
 2406              	.LVL300:
 2407 00be 0028     		cmp	r0, #0
 2408 00c0 38D1     		bne	.L210
 2409              	.LVL301:
 2410              	.L193:
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2411              		.loc 1 1411 0
 2412 00c2 FFF7FEFF 		bl	vPortEnterCritical
 2413              	.LVL302:
 2414              	.LBB17:
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2415              		.loc 1 1415 0
 2416 00c6 A36B     		ldr	r3, [r4, #56]
 2417              	.LVL303:
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2418              		.loc 1 1419 0
 2419 00c8 002B     		cmp	r3, #0
 2420 00ca B4D1     		bne	.L211
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2421              		.loc 1 1465 0
 2422 00cc 019B     		ldr	r3, [sp, #4]
 2423              	.LVL304:
 2424 00ce 002B     		cmp	r3, #0
 2425 00d0 CAD0     		beq	.L212
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2426              		.loc 1 1482 0
 2427 00d2 002E     		cmp	r6, #0
 2428 00d4 CFD0     		beq	.L213
 2429              	.LVL305:
 2430              	.L201:
 2431              	.LBE17:
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2432              		.loc 1 1496 0
 2433 00d6 FFF7FEFF 		bl	vPortExitCritical
 2434              	.LVL306:
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2435              		.loc 1 1501 0
 2436 00da FFF7FEFF 		bl	vTaskSuspendAll
 2437              	.LVL307:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2438              		.loc 1 1502 0
 2439 00de FFF7FEFF 		bl	vPortEnterCritical
 2440              	.LVL308:
 2441 00e2 4423     		movs	r3, #68
 2442 00e4 E35C     		ldrb	r3, [r4, r3]
 2443 00e6 5BB2     		sxtb	r3, r3
 2444 00e8 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc8ESiuL.s 			page 90


 2445 00ea C9D0     		beq	.L214
 2446              	.L202:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2447              		.loc 1 1502 0 is_stmt 0 discriminator 3
 2448 00ec 4523     		movs	r3, #69
 2449 00ee E35C     		ldrb	r3, [r4, r3]
 2450 00f0 5BB2     		sxtb	r3, r3
 2451 00f2 0133     		adds	r3, r3, #1
 2452 00f4 C8D0     		beq	.L215
 2453              	.L203:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2454              		.loc 1 1502 0 discriminator 6
 2455 00f6 FFF7FEFF 		bl	vPortExitCritical
 2456              	.LVL309:
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2457              		.loc 1 1505 0 is_stmt 1 discriminator 6
 2458 00fa 01A9     		add	r1, sp, #4
 2459 00fc 02A8     		add	r0, sp, #8
 2460 00fe FFF7FEFF 		bl	xTaskCheckForTimeOut
 2461              	.LVL310:
 2462 0102 0028     		cmp	r0, #0
 2463 0104 D3D1     		bne	.L204
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2464              		.loc 1 1511 0
 2465 0106 2000     		movs	r0, r4
 2466 0108 FFF7FEFF 		bl	prvIsQueueEmpty
 2467              	.LVL311:
 2468 010c 0028     		cmp	r0, #0
 2469 010e C8D0     		beq	.L205
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2470              		.loc 1 1517 0
 2471 0110 2368     		ldr	r3, [r4]
 2472 0112 002B     		cmp	r3, #0
 2473 0114 BCD0     		beq	.L216
 2474              	.L206:
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2475              		.loc 1 1532 0
 2476 0116 2000     		movs	r0, r4
 2477 0118 2430     		adds	r0, r0, #36
 2478 011a 0199     		ldr	r1, [sp, #4]
 2479 011c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2480              	.LVL312:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2481              		.loc 1 1533 0
 2482 0120 2000     		movs	r0, r4
 2483 0122 FFF7FEFF 		bl	prvUnlockQueue
 2484              	.LVL313:
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2485              		.loc 1 1534 0
 2486 0126 FFF7FEFF 		bl	xTaskResumeAll
 2487              	.LVL314:
 2488 012a 0028     		cmp	r0, #0
 2489 012c C9D1     		bne	.L193
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2490              		.loc 1 1536 0
 2491 012e FFF7FEFF 		bl	vPortYield
 2492              	.LVL315:
ARM GAS  /tmp/cc8ESiuL.s 			page 91


 2493 0132 C6E7     		b	.L193
 2494              	.L210:
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2495              		.loc 1 1568 0
 2496 0134 002D     		cmp	r5, #0
 2497 0136 00D1     		bne	.LCB2411
 2498 0138 93E7     		b	.L186	@long jump
 2499              	.LCB2411:
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2500              		.loc 1 1570 0
 2501 013a FFF7FEFF 		bl	vPortEnterCritical
 2502              	.LVL316:
 2503              	.LBB18:
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
 2504              		.loc 1 1579 0
 2505 013e 2000     		movs	r0, r4
 2506 0140 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2507              	.LVL317:
 2508 0144 0100     		movs	r1, r0
 2509              	.LVL318:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2510              		.loc 1 1580 0
 2511 0146 6068     		ldr	r0, [r4, #4]
 2512              	.LVL319:
 2513 0148 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2514              	.LVL320:
 2515              	.LBE18:
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2516              		.loc 1 1582 0
 2517 014c FFF7FEFF 		bl	vPortExitCritical
 2518              	.LVL321:
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2519              		.loc 1 1588 0
 2520 0150 0025     		movs	r5, #0
 2521              	.LVL322:
 2522 0152 86E7     		b	.L186
 2523              		.cfi_endproc
 2524              	.LFE17:
 2526              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 2527              		.align	1
 2528              		.global	xQueueTakeMutexRecursive
 2529              		.syntax unified
 2530              		.code	16
 2531              		.thumb_func
 2532              		.fpu softvfp
 2534              	xQueueTakeMutexRecursive:
 2535              	.LFB10:
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2536              		.loc 1 630 0
 2537              		.cfi_startproc
 2538              		@ args = 0, pretend = 0, frame = 0
 2539              		@ frame_needed = 0, uses_anonymous_args = 0
 2540              	.LVL323:
 2541 0000 70B5     		push	{r4, r5, r6, lr}
 2542              	.LCFI29:
 2543              		.cfi_def_cfa_offset 16
 2544              		.cfi_offset 4, -16
ARM GAS  /tmp/cc8ESiuL.s 			page 92


 2545              		.cfi_offset 5, -12
 2546              		.cfi_offset 6, -8
 2547              		.cfi_offset 14, -4
 2548 0002 0400     		movs	r4, r0
 2549 0004 0D00     		movs	r5, r1
 2550              	.LVL324:
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2551              		.loc 1 634 0
 2552 0006 0028     		cmp	r0, #0
 2553 0008 01D1     		bne	.L218
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2554              		.loc 1 634 0 is_stmt 0 discriminator 1
 2555              		.syntax divided
 2556              	@ 634 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2557 000a 72B6     		 cpsid i 
 2558              	@ 0 "" 2
 2559              		.thumb
 2560              		.syntax unified
 2561              	.L219:
 2562 000c FEE7     		b	.L219
 2563              	.L218:
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2564              		.loc 1 641 0 is_stmt 1
 2565 000e 4668     		ldr	r6, [r0, #4]
 2566 0010 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 2567              	.LVL325:
 2568 0014 8642     		cmp	r6, r0
 2569 0016 09D0     		beq	.L222
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2570              		.loc 1 648 0
 2571 0018 2900     		movs	r1, r5
 2572 001a 2000     		movs	r0, r4
 2573 001c FFF7FEFF 		bl	xQueueSemaphoreTake
 2574              	.LVL326:
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2575              		.loc 1 653 0
 2576 0020 0028     		cmp	r0, #0
 2577 0022 07D0     		beq	.L217
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2578              		.loc 1 655 0
 2579 0024 E368     		ldr	r3, [r4, #12]
 2580 0026 0133     		adds	r3, r3, #1
 2581 0028 E360     		str	r3, [r4, #12]
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2582              		.loc 1 663 0
 2583 002a 03E0     		b	.L217
 2584              	.LVL327:
 2585              	.L222:
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2586              		.loc 1 643 0
 2587 002c E368     		ldr	r3, [r4, #12]
 2588 002e 0133     		adds	r3, r3, #1
 2589 0030 E360     		str	r3, [r4, #12]
 2590              	.LVL328:
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2591              		.loc 1 644 0
 2592 0032 0120     		movs	r0, #1
ARM GAS  /tmp/cc8ESiuL.s 			page 93


 2593              	.LVL329:
 2594              	.L217:
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2595              		.loc 1 664 0
 2596              		@ sp needed
 2597              	.LVL330:
 2598              	.LVL331:
 2599 0034 70BD     		pop	{r4, r5, r6, pc}
 2600              		.cfi_endproc
 2601              	.LFE10:
 2603              		.section	.text.xQueuePeek,"ax",%progbits
 2604              		.align	1
 2605              		.global	xQueuePeek
 2606              		.syntax unified
 2607              		.code	16
 2608              		.thumb_func
 2609              		.fpu softvfp
 2611              	xQueuePeek:
 2612              	.LFB18:
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2613              		.loc 1 1600 0
 2614              		.cfi_startproc
 2615              		@ args = 0, pretend = 0, frame = 16
 2616              		@ frame_needed = 0, uses_anonymous_args = 0
 2617              	.LVL332:
 2618 0000 70B5     		push	{r4, r5, r6, lr}
 2619              	.LCFI30:
 2620              		.cfi_def_cfa_offset 16
 2621              		.cfi_offset 4, -16
 2622              		.cfi_offset 5, -12
 2623              		.cfi_offset 6, -8
 2624              		.cfi_offset 14, -4
 2625 0002 84B0     		sub	sp, sp, #16
 2626              	.LCFI31:
 2627              		.cfi_def_cfa_offset 32
 2628 0004 0400     		movs	r4, r0
 2629 0006 0E00     		movs	r6, r1
 2630 0008 0192     		str	r2, [sp, #4]
 2631              	.LVL333:
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2632              		.loc 1 1607 0
 2633 000a 0028     		cmp	r0, #0
 2634 000c 06D0     		beq	.L243
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2635              		.loc 1 1611 0
 2636 000e 0029     		cmp	r1, #0
 2637 0010 06D1     		bne	.L226
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2638              		.loc 1 1611 0 is_stmt 0 discriminator 2
 2639 0012 036C     		ldr	r3, [r0, #64]
 2640 0014 002B     		cmp	r3, #0
 2641 0016 03D0     		beq	.L226
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2642              		.loc 1 1611 0
 2643              		.syntax divided
 2644              	@ 1611 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2645 0018 72B6     		 cpsid i 
ARM GAS  /tmp/cc8ESiuL.s 			page 94


 2646              	@ 0 "" 2
 2647              		.thumb
 2648              		.syntax unified
 2649              	.L227:
 2650 001a FEE7     		b	.L227
 2651              	.L243:
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2652              		.loc 1 1607 0 is_stmt 1 discriminator 1
 2653              		.syntax divided
 2654              	@ 1607 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2655 001c 72B6     		 cpsid i 
 2656              	@ 0 "" 2
 2657              		.thumb
 2658              		.syntax unified
 2659              	.L225:
 2660 001e FEE7     		b	.L225
 2661              	.L226:
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2662              		.loc 1 1616 0
 2663 0020 FFF7FEFF 		bl	xTaskGetSchedulerState
 2664              	.LVL334:
 2665 0024 0028     		cmp	r0, #0
 2666 0026 04D1     		bne	.L241
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2667              		.loc 1 1616 0 is_stmt 0 discriminator 2
 2668 0028 019B     		ldr	r3, [sp, #4]
 2669 002a 002B     		cmp	r3, #0
 2670 002c 03D0     		beq	.L242
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2671              		.loc 1 1616 0
 2672              		.syntax divided
 2673              	@ 1616 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2674 002e 72B6     		 cpsid i 
 2675              	@ 0 "" 2
 2676              		.thumb
 2677              		.syntax unified
 2678              	.L229:
 2679 0030 FEE7     		b	.L229
 2680              	.L241:
 2681 0032 0025     		movs	r5, #0
 2682 0034 39E0     		b	.L230
 2683              	.L242:
 2684 0036 0025     		movs	r5, #0
 2685 0038 37E0     		b	.L230
 2686              	.LVL335:
 2687              	.L246:
 2688              	.LBB19:
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2689              		.loc 1 1638 0 is_stmt 1
 2690 003a E568     		ldr	r5, [r4, #12]
 2691              	.LVL336:
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 2692              		.loc 1 1640 0
 2693 003c 3100     		movs	r1, r6
 2694 003e 2000     		movs	r0, r4
 2695 0040 FFF7FEFF 		bl	prvCopyDataFromQueue
 2696              	.LVL337:
ARM GAS  /tmp/cc8ESiuL.s 			page 95


1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2697              		.loc 1 1644 0
 2698 0044 E560     		str	r5, [r4, #12]
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2699              		.loc 1 1648 0
 2700 0046 636A     		ldr	r3, [r4, #36]
 2701 0048 002B     		cmp	r3, #0
 2702 004a 04D1     		bne	.L244
 2703              	.L232:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2704              		.loc 1 1665 0
 2705 004c FFF7FEFF 		bl	vPortExitCritical
 2706              	.LVL338:
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2707              		.loc 1 1666 0
 2708 0050 0120     		movs	r0, #1
 2709              	.LVL339:
 2710              	.L223:
 2711              	.LBE19:
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2712              		.loc 1 1746 0
 2713 0052 04B0     		add	sp, sp, #16
 2714              		@ sp needed
 2715              	.LVL340:
 2716              	.LVL341:
 2717 0054 70BD     		pop	{r4, r5, r6, pc}
 2718              	.LVL342:
 2719              	.L244:
 2720              	.LBB20:
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2721              		.loc 1 1650 0
 2722 0056 2000     		movs	r0, r4
 2723 0058 2430     		adds	r0, r0, #36
 2724 005a FFF7FEFF 		bl	xTaskRemoveFromEventList
 2725              	.LVL343:
 2726 005e 0028     		cmp	r0, #0
 2727 0060 F4D0     		beq	.L232
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2728              		.loc 1 1653 0
 2729 0062 FFF7FEFF 		bl	vPortYield
 2730              	.LVL344:
 2731 0066 F1E7     		b	.L232
 2732              	.LVL345:
 2733              	.L247:
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 2734              		.loc 1 1674 0
 2735 0068 FFF7FEFF 		bl	vPortExitCritical
 2736              	.LVL346:
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2737              		.loc 1 1676 0
 2738 006c 0020     		movs	r0, #0
 2739 006e F0E7     		b	.L223
 2740              	.L248:
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2741              		.loc 1 1683 0
 2742 0070 02A8     		add	r0, sp, #8
 2743 0072 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
ARM GAS  /tmp/cc8ESiuL.s 			page 96


 2744              	.LVL347:
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2745              		.loc 1 1684 0
 2746 0076 0135     		adds	r5, r5, #1
 2747 0078 21E0     		b	.L235
 2748              	.LVL348:
 2749              	.L249:
 2750              	.LBE20:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2751              		.loc 1 1699 0 discriminator 1
 2752 007a 4423     		movs	r3, #68
 2753 007c 0022     		movs	r2, #0
 2754 007e E254     		strb	r2, [r4, r3]
 2755 0080 28E0     		b	.L236
 2756              	.L250:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2757              		.loc 1 1699 0 is_stmt 0 discriminator 4
 2758 0082 4523     		movs	r3, #69
 2759 0084 0022     		movs	r2, #0
 2760 0086 E254     		strb	r2, [r4, r3]
 2761 0088 29E0     		b	.L237
 2762              	.L239:
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2763              		.loc 1 1724 0 is_stmt 1
 2764 008a 2000     		movs	r0, r4
 2765 008c FFF7FEFF 		bl	prvUnlockQueue
 2766              	.LVL349:
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2767              		.loc 1 1725 0
 2768 0090 FFF7FEFF 		bl	xTaskResumeAll
 2769              	.LVL350:
 2770 0094 09E0     		b	.L230
 2771              	.L238:
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2772              		.loc 1 1732 0
 2773 0096 2000     		movs	r0, r4
 2774 0098 FFF7FEFF 		bl	prvUnlockQueue
 2775              	.LVL351:
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2776              		.loc 1 1733 0
 2777 009c FFF7FEFF 		bl	xTaskResumeAll
 2778              	.LVL352:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2779              		.loc 1 1735 0
 2780 00a0 2000     		movs	r0, r4
 2781 00a2 FFF7FEFF 		bl	prvIsQueueEmpty
 2782              	.LVL353:
 2783 00a6 0028     		cmp	r0, #0
 2784 00a8 35D1     		bne	.L245
 2785              	.LVL354:
 2786              	.L230:
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2787              		.loc 1 1627 0
 2788 00aa FFF7FEFF 		bl	vPortEnterCritical
 2789              	.LVL355:
 2790              	.LBB21:
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc8ESiuL.s 			page 97


 2791              		.loc 1 1629 0
 2792 00ae A36B     		ldr	r3, [r4, #56]
 2793              	.LVL356:
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2794              		.loc 1 1633 0
 2795 00b0 002B     		cmp	r3, #0
 2796 00b2 C2D1     		bne	.L246
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2797              		.loc 1 1670 0
 2798 00b4 019B     		ldr	r3, [sp, #4]
 2799              	.LVL357:
 2800 00b6 002B     		cmp	r3, #0
 2801 00b8 D6D0     		beq	.L247
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2802              		.loc 1 1678 0
 2803 00ba 002D     		cmp	r5, #0
 2804 00bc D8D0     		beq	.L248
 2805              	.LVL358:
 2806              	.L235:
 2807              	.LBE21:
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2808              		.loc 1 1693 0
 2809 00be FFF7FEFF 		bl	vPortExitCritical
 2810              	.LVL359:
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2811              		.loc 1 1698 0
 2812 00c2 FFF7FEFF 		bl	vTaskSuspendAll
 2813              	.LVL360:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2814              		.loc 1 1699 0
 2815 00c6 FFF7FEFF 		bl	vPortEnterCritical
 2816              	.LVL361:
 2817 00ca 4423     		movs	r3, #68
 2818 00cc E35C     		ldrb	r3, [r4, r3]
 2819 00ce 5BB2     		sxtb	r3, r3
 2820 00d0 0133     		adds	r3, r3, #1
 2821 00d2 D2D0     		beq	.L249
 2822              	.L236:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2823              		.loc 1 1699 0 is_stmt 0 discriminator 3
 2824 00d4 4523     		movs	r3, #69
 2825 00d6 E35C     		ldrb	r3, [r4, r3]
 2826 00d8 5BB2     		sxtb	r3, r3
 2827 00da 0133     		adds	r3, r3, #1
 2828 00dc D1D0     		beq	.L250
 2829              	.L237:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2830              		.loc 1 1699 0 discriminator 6
 2831 00de FFF7FEFF 		bl	vPortExitCritical
 2832              	.LVL362:
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2833              		.loc 1 1702 0 is_stmt 1 discriminator 6
 2834 00e2 01A9     		add	r1, sp, #4
 2835 00e4 02A8     		add	r0, sp, #8
 2836 00e6 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2837              	.LVL363:
 2838 00ea 0028     		cmp	r0, #0
ARM GAS  /tmp/cc8ESiuL.s 			page 98


 2839 00ec D3D1     		bne	.L238
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2840              		.loc 1 1706 0
 2841 00ee 2000     		movs	r0, r4
 2842 00f0 FFF7FEFF 		bl	prvIsQueueEmpty
 2843              	.LVL364:
 2844 00f4 0028     		cmp	r0, #0
 2845 00f6 C8D0     		beq	.L239
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2846              		.loc 1 1709 0
 2847 00f8 2000     		movs	r0, r4
 2848 00fa 2430     		adds	r0, r0, #36
 2849 00fc 0199     		ldr	r1, [sp, #4]
 2850 00fe FFF7FEFF 		bl	vTaskPlaceOnEventList
 2851              	.LVL365:
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2852              		.loc 1 1710 0
 2853 0102 2000     		movs	r0, r4
 2854 0104 FFF7FEFF 		bl	prvUnlockQueue
 2855              	.LVL366:
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2856              		.loc 1 1711 0
 2857 0108 FFF7FEFF 		bl	xTaskResumeAll
 2858              	.LVL367:
 2859 010c 0028     		cmp	r0, #0
 2860 010e CCD1     		bne	.L230
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2861              		.loc 1 1713 0
 2862 0110 FFF7FEFF 		bl	vPortYield
 2863              	.LVL368:
 2864 0114 C9E7     		b	.L230
 2865              	.L245:
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2866              		.loc 1 1738 0
 2867 0116 0020     		movs	r0, #0
 2868 0118 9BE7     		b	.L223
 2869              		.cfi_endproc
 2870              	.LFE18:
 2872              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2873              		.align	1
 2874              		.global	xQueueReceiveFromISR
 2875              		.syntax unified
 2876              		.code	16
 2877              		.thumb_func
 2878              		.fpu softvfp
 2880              	xQueueReceiveFromISR:
 2881              	.LFB19:
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2882              		.loc 1 1750 0
 2883              		.cfi_startproc
 2884              		@ args = 0, pretend = 0, frame = 8
 2885              		@ frame_needed = 0, uses_anonymous_args = 0
 2886              	.LVL369:
 2887 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2888              	.LCFI32:
 2889              		.cfi_def_cfa_offset 20
 2890              		.cfi_offset 4, -20
ARM GAS  /tmp/cc8ESiuL.s 			page 99


 2891              		.cfi_offset 5, -16
 2892              		.cfi_offset 6, -12
 2893              		.cfi_offset 7, -8
 2894              		.cfi_offset 14, -4
 2895 0002 83B0     		sub	sp, sp, #12
 2896              	.LCFI33:
 2897              		.cfi_def_cfa_offset 32
 2898 0004 0400     		movs	r4, r0
 2899 0006 0091     		str	r1, [sp]
 2900 0008 1500     		movs	r5, r2
 2901              	.LVL370:
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2902              		.loc 1 1755 0
 2903 000a 0028     		cmp	r0, #0
 2904 000c 07D0     		beq	.L262
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2905              		.loc 1 1756 0
 2906 000e 009B     		ldr	r3, [sp]
 2907 0010 002B     		cmp	r3, #0
 2908 0012 06D1     		bne	.L254
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2909              		.loc 1 1756 0 is_stmt 0 discriminator 2
 2910 0014 036C     		ldr	r3, [r0, #64]
 2911 0016 002B     		cmp	r3, #0
 2912 0018 03D0     		beq	.L254
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2913              		.loc 1 1756 0
 2914              		.syntax divided
 2915              	@ 1756 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2916 001a 72B6     		 cpsid i 
 2917              	@ 0 "" 2
 2918              		.thumb
 2919              		.syntax unified
 2920              	.L255:
 2921 001c FEE7     		b	.L255
 2922              	.L262:
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2923              		.loc 1 1755 0 is_stmt 1 discriminator 1
 2924              		.syntax divided
 2925              	@ 1755 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2926 001e 72B6     		 cpsid i 
 2927              	@ 0 "" 2
 2928              		.thumb
 2929              		.syntax unified
 2930              	.L253:
 2931 0020 FEE7     		b	.L253
 2932              	.L254:
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2933              		.loc 1 1774 0
 2934 0022 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 2935              	.LVL371:
 2936 0026 0190     		str	r0, [sp, #4]
 2937              	.LVL372:
 2938              	.LBB22:
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2939              		.loc 1 1776 0
 2940 0028 A76B     		ldr	r7, [r4, #56]
ARM GAS  /tmp/cc8ESiuL.s 			page 100


 2941              	.LVL373:
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2942              		.loc 1 1779 0
 2943 002a 002F     		cmp	r7, #0
 2944 002c 1ED0     		beq	.L258
 2945              	.LBB23:
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2946              		.loc 1 1781 0
 2947 002e 4423     		movs	r3, #68
 2948 0030 E65C     		ldrb	r6, [r4, r3]
 2949 0032 76B2     		sxtb	r6, r6
 2950              	.LVL374:
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2951              		.loc 1 1785 0
 2952 0034 0099     		ldr	r1, [sp]
 2953 0036 2000     		movs	r0, r4
 2954              	.LVL375:
 2955 0038 FFF7FEFF 		bl	prvCopyDataFromQueue
 2956              	.LVL376:
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2957              		.loc 1 1786 0
 2958 003c 7B1E     		subs	r3, r7, #1
 2959 003e A363     		str	r3, [r4, #56]
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2960              		.loc 1 1792 0
 2961 0040 731C     		adds	r3, r6, #1
 2962 0042 05D0     		beq	.L263
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2963              		.loc 1 1823 0
 2964 0044 0136     		adds	r6, r6, #1
 2965              	.LVL377:
 2966 0046 76B2     		sxtb	r6, r6
 2967              	.LVL378:
 2968 0048 4423     		movs	r3, #68
 2969 004a E654     		strb	r6, [r4, r3]
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2970              		.loc 1 1826 0
 2971 004c 0124     		movs	r4, #1
 2972              	.LVL379:
 2973 004e 0EE0     		b	.L256
 2974              	.LVL380:
 2975              	.L263:
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2976              		.loc 1 1794 0
 2977 0050 2369     		ldr	r3, [r4, #16]
 2978 0052 002B     		cmp	r3, #0
 2979 0054 11D0     		beq	.L259
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2980              		.loc 1 1796 0
 2981 0056 2000     		movs	r0, r4
 2982 0058 1030     		adds	r0, r0, #16
 2983 005a FFF7FEFF 		bl	xTaskRemoveFromEventList
 2984              	.LVL381:
 2985 005e 0028     		cmp	r0, #0
 2986 0060 0DD0     		beq	.L260
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2987              		.loc 1 1800 0
ARM GAS  /tmp/cc8ESiuL.s 			page 101


 2988 0062 002D     		cmp	r5, #0
 2989 0064 0DD0     		beq	.L261
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2990              		.loc 1 1802 0
 2991 0066 0124     		movs	r4, #1
 2992              	.LVL382:
 2993 0068 2C60     		str	r4, [r5]
 2994 006a 00E0     		b	.L256
 2995              	.LVL383:
 2996              	.L258:
 2997              	.LBE23:
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 2998              		.loc 1 1830 0
 2999 006c 0024     		movs	r4, #0
 3000              	.LVL384:
 3001              	.L256:
 3002              	.LBE22:
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3003              		.loc 1 1834 0
 3004 006e 0198     		ldr	r0, [sp, #4]
 3005 0070 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 3006              	.LVL385:
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3007              		.loc 1 1837 0
 3008 0074 2000     		movs	r0, r4
 3009 0076 03B0     		add	sp, sp, #12
 3010              	.LVL386:
 3011              		@ sp needed
 3012              	.LVL387:
 3013              	.LVL388:
 3014              	.LVL389:
 3015 0078 F0BD     		pop	{r4, r5, r6, r7, pc}
 3016              	.LVL390:
 3017              	.L259:
 3018              	.LBB25:
 3019              	.LBB24:
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3020              		.loc 1 1826 0
 3021 007a 0124     		movs	r4, #1
 3022              	.LVL391:
 3023 007c F7E7     		b	.L256
 3024              	.LVL392:
 3025              	.L260:
 3026 007e 0124     		movs	r4, #1
 3027              	.LVL393:
 3028 0080 F5E7     		b	.L256
 3029              	.LVL394:
 3030              	.L261:
 3031 0082 0124     		movs	r4, #1
 3032              	.LVL395:
 3033 0084 F3E7     		b	.L256
 3034              	.LBE24:
 3035              	.LBE25:
 3036              		.cfi_endproc
 3037              	.LFE19:
 3039              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3040              		.align	1
ARM GAS  /tmp/cc8ESiuL.s 			page 102


 3041              		.global	xQueuePeekFromISR
 3042              		.syntax unified
 3043              		.code	16
 3044              		.thumb_func
 3045              		.fpu softvfp
 3047              	xQueuePeekFromISR:
 3048              	.LFB20:
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3049              		.loc 1 1841 0
 3050              		.cfi_startproc
 3051              		@ args = 0, pretend = 0, frame = 0
 3052              		@ frame_needed = 0, uses_anonymous_args = 0
 3053              	.LVL396:
 3054 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3055              	.LCFI34:
 3056              		.cfi_def_cfa_offset 24
 3057              		.cfi_offset 3, -24
 3058              		.cfi_offset 4, -20
 3059              		.cfi_offset 5, -16
 3060              		.cfi_offset 6, -12
 3061              		.cfi_offset 7, -8
 3062              		.cfi_offset 14, -4
 3063 0002 0400     		movs	r4, r0
 3064 0004 0D00     		movs	r5, r1
 3065              	.LVL397:
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3066              		.loc 1 1847 0
 3067 0006 0028     		cmp	r0, #0
 3068 0008 06D0     		beq	.L273
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3069              		.loc 1 1848 0
 3070 000a 0029     		cmp	r1, #0
 3071 000c 06D1     		bne	.L267
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3072              		.loc 1 1848 0 is_stmt 0 discriminator 2
 3073 000e 036C     		ldr	r3, [r0, #64]
 3074 0010 002B     		cmp	r3, #0
 3075 0012 03D0     		beq	.L267
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3076              		.loc 1 1848 0
 3077              		.syntax divided
 3078              	@ 1848 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3079 0014 72B6     		 cpsid i 
 3080              	@ 0 "" 2
 3081              		.thumb
 3082              		.syntax unified
 3083              	.L268:
 3084 0016 FEE7     		b	.L268
 3085              	.L273:
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3086              		.loc 1 1847 0 is_stmt 1 discriminator 1
 3087              		.syntax divided
 3088              	@ 1847 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3089 0018 72B6     		 cpsid i 
 3090              	@ 0 "" 2
 3091              		.thumb
 3092              		.syntax unified
ARM GAS  /tmp/cc8ESiuL.s 			page 103


 3093              	.L266:
 3094 001a FEE7     		b	.L266
 3095              	.L267:
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3096              		.loc 1 1849 0
 3097 001c 236C     		ldr	r3, [r4, #64]
 3098 001e 002B     		cmp	r3, #0
 3099 0020 01D1     		bne	.L269
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3100              		.loc 1 1849 0 is_stmt 0 discriminator 1
 3101              		.syntax divided
 3102              	@ 1849 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3103 0022 72B6     		 cpsid i 
 3104              	@ 0 "" 2
 3105              		.thumb
 3106              		.syntax unified
 3107              	.L270:
 3108 0024 FEE7     		b	.L270
 3109              	.L269:
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3110              		.loc 1 1867 0 is_stmt 1
 3111 0026 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 3112              	.LVL398:
 3113 002a 0600     		movs	r6, r0
 3114              	.LVL399:
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3115              		.loc 1 1870 0
 3116 002c A36B     		ldr	r3, [r4, #56]
 3117 002e 002B     		cmp	r3, #0
 3118 0030 0BD0     		beq	.L272
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3119              		.loc 1 1876 0
 3120 0032 E768     		ldr	r7, [r4, #12]
 3121              	.LVL400:
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 3122              		.loc 1 1877 0
 3123 0034 2900     		movs	r1, r5
 3124 0036 2000     		movs	r0, r4
 3125              	.LVL401:
 3126 0038 FFF7FEFF 		bl	prvCopyDataFromQueue
 3127              	.LVL402:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3128              		.loc 1 1878 0
 3129 003c E760     		str	r7, [r4, #12]
 3130              	.LVL403:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3131              		.loc 1 1880 0
 3132 003e 0124     		movs	r4, #1
 3133              	.LVL404:
 3134              	.L271:
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3135              		.loc 1 1888 0
 3136 0040 3000     		movs	r0, r6
 3137 0042 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 3138              	.LVL405:
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3139              		.loc 1 1891 0
ARM GAS  /tmp/cc8ESiuL.s 			page 104


 3140 0046 2000     		movs	r0, r4
 3141              		@ sp needed
 3142              	.LVL406:
 3143              	.LVL407:
 3144              	.LVL408:
 3145 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3146              	.LVL409:
 3147              	.L272:
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 3148              		.loc 1 1884 0
 3149 004a 0024     		movs	r4, #0
 3150              	.LVL410:
 3151 004c F8E7     		b	.L271
 3152              		.cfi_endproc
 3153              	.LFE20:
 3155              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 3156              		.align	1
 3157              		.global	uxQueueMessagesWaiting
 3158              		.syntax unified
 3159              		.code	16
 3160              		.thumb_func
 3161              		.fpu softvfp
 3163              	uxQueueMessagesWaiting:
 3164              	.LFB21:
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3165              		.loc 1 1895 0
 3166              		.cfi_startproc
 3167              		@ args = 0, pretend = 0, frame = 0
 3168              		@ frame_needed = 0, uses_anonymous_args = 0
 3169              	.LVL411:
 3170 0000 10B5     		push	{r4, lr}
 3171              	.LCFI35:
 3172              		.cfi_def_cfa_offset 8
 3173              		.cfi_offset 4, -8
 3174              		.cfi_offset 14, -4
 3175 0002 041E     		subs	r4, r0, #0
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3176              		.loc 1 1898 0
 3177 0004 01D1     		bne	.L275
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3178              		.loc 1 1898 0 is_stmt 0 discriminator 1
 3179              		.syntax divided
 3180              	@ 1898 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3181 0006 72B6     		 cpsid i 
 3182              	@ 0 "" 2
 3183              		.thumb
 3184              		.syntax unified
 3185              	.L276:
 3186 0008 FEE7     		b	.L276
 3187              	.L275:
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3188              		.loc 1 1900 0 is_stmt 1
 3189 000a FFF7FEFF 		bl	vPortEnterCritical
 3190              	.LVL412:
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3191              		.loc 1 1902 0
 3192 000e A46B     		ldr	r4, [r4, #56]
ARM GAS  /tmp/cc8ESiuL.s 			page 105


 3193              	.LVL413:
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3194              		.loc 1 1904 0
 3195 0010 FFF7FEFF 		bl	vPortExitCritical
 3196              	.LVL414:
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3197              		.loc 1 1907 0
 3198 0014 2000     		movs	r0, r4
 3199              		@ sp needed
 3200              	.LVL415:
 3201 0016 10BD     		pop	{r4, pc}
 3202              		.cfi_endproc
 3203              	.LFE21:
 3205              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3206              		.align	1
 3207              		.global	uxQueueSpacesAvailable
 3208              		.syntax unified
 3209              		.code	16
 3210              		.thumb_func
 3211              		.fpu softvfp
 3213              	uxQueueSpacesAvailable:
 3214              	.LFB22:
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3215              		.loc 1 1911 0
 3216              		.cfi_startproc
 3217              		@ args = 0, pretend = 0, frame = 0
 3218              		@ frame_needed = 0, uses_anonymous_args = 0
 3219              	.LVL416:
 3220 0000 70B5     		push	{r4, r5, r6, lr}
 3221              	.LCFI36:
 3222              		.cfi_def_cfa_offset 16
 3223              		.cfi_offset 4, -16
 3224              		.cfi_offset 5, -12
 3225              		.cfi_offset 6, -8
 3226              		.cfi_offset 14, -4
 3227 0002 051E     		subs	r5, r0, #0
 3228              	.LVL417:
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3229              		.loc 1 1916 0
 3230 0004 01D1     		bne	.L278
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3231              		.loc 1 1916 0 is_stmt 0 discriminator 1
 3232              		.syntax divided
 3233              	@ 1916 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3234 0006 72B6     		 cpsid i 
 3235              	@ 0 "" 2
 3236              		.thumb
 3237              		.syntax unified
 3238              	.L279:
 3239 0008 FEE7     		b	.L279
 3240              	.L278:
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3241              		.loc 1 1918 0 is_stmt 1
 3242 000a FFF7FEFF 		bl	vPortEnterCritical
 3243              	.LVL418:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3244              		.loc 1 1920 0
ARM GAS  /tmp/cc8ESiuL.s 			page 106


 3245 000e EC6B     		ldr	r4, [r5, #60]
 3246 0010 AB6B     		ldr	r3, [r5, #56]
 3247 0012 E41A     		subs	r4, r4, r3
 3248              	.LVL419:
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3249              		.loc 1 1922 0
 3250 0014 FFF7FEFF 		bl	vPortExitCritical
 3251              	.LVL420:
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3252              		.loc 1 1925 0
 3253 0018 2000     		movs	r0, r4
 3254              		@ sp needed
 3255              	.LVL421:
 3256              	.LVL422:
 3257 001a 70BD     		pop	{r4, r5, r6, pc}
 3258              		.cfi_endproc
 3259              	.LFE22:
 3261              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3262              		.align	1
 3263              		.global	uxQueueMessagesWaitingFromISR
 3264              		.syntax unified
 3265              		.code	16
 3266              		.thumb_func
 3267              		.fpu softvfp
 3269              	uxQueueMessagesWaitingFromISR:
 3270              	.LFB23:
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3271              		.loc 1 1929 0
 3272              		.cfi_startproc
 3273              		@ args = 0, pretend = 0, frame = 0
 3274              		@ frame_needed = 0, uses_anonymous_args = 0
 3275              		@ link register save eliminated.
 3276              	.LVL423:
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3277              		.loc 1 1932 0
 3278 0000 0028     		cmp	r0, #0
 3279 0002 01D0     		beq	.L283
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3280              		.loc 1 1934 0
 3281 0004 806B     		ldr	r0, [r0, #56]
 3282              	.LVL424:
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3283              		.loc 1 1937 0
 3284              		@ sp needed
 3285 0006 7047     		bx	lr
 3286              	.LVL425:
 3287              	.L283:
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3288              		.loc 1 1932 0 discriminator 1
 3289              		.syntax divided
 3290              	@ 1932 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3291 0008 72B6     		 cpsid i 
 3292              	@ 0 "" 2
 3293              		.thumb
 3294              		.syntax unified
 3295              	.L282:
 3296 000a FEE7     		b	.L282
ARM GAS  /tmp/cc8ESiuL.s 			page 107


 3297              		.cfi_endproc
 3298              	.LFE23:
 3300              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 3301              		.align	1
 3302              		.global	uxQueueGetQueueNumber
 3303              		.syntax unified
 3304              		.code	16
 3305              		.thumb_func
 3306              		.fpu softvfp
 3308              	uxQueueGetQueueNumber:
 3309              	.LFB25:
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 3310              		.loc 1 1985 0
 3311              		.cfi_startproc
 3312              		@ args = 0, pretend = 0, frame = 0
 3313              		@ frame_needed = 0, uses_anonymous_args = 0
 3314              		@ link register save eliminated.
 3315              	.LVL426:
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3316              		.loc 1 1986 0
 3317 0000 806C     		ldr	r0, [r0, #72]
 3318              	.LVL427:
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3319              		.loc 1 1987 0
 3320              		@ sp needed
 3321 0002 7047     		bx	lr
 3322              		.cfi_endproc
 3323              	.LFE25:
 3325              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 3326              		.align	1
 3327              		.global	vQueueSetQueueNumber
 3328              		.syntax unified
 3329              		.code	16
 3330              		.thumb_func
 3331              		.fpu softvfp
 3333              	vQueueSetQueueNumber:
 3334              	.LFB26:
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 3335              		.loc 1 1995 0
 3336              		.cfi_startproc
 3337              		@ args = 0, pretend = 0, frame = 0
 3338              		@ frame_needed = 0, uses_anonymous_args = 0
 3339              		@ link register save eliminated.
 3340              	.LVL428:
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3341              		.loc 1 1996 0
 3342 0000 8164     		str	r1, [r0, #72]
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3343              		.loc 1 1997 0
 3344              		@ sp needed
 3345 0002 7047     		bx	lr
 3346              		.cfi_endproc
 3347              	.LFE26:
 3349              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 3350              		.align	1
 3351              		.global	ucQueueGetQueueType
 3352              		.syntax unified
ARM GAS  /tmp/cc8ESiuL.s 			page 108


 3353              		.code	16
 3354              		.thumb_func
 3355              		.fpu softvfp
 3357              	ucQueueGetQueueType:
 3358              	.LFB27:
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 3359              		.loc 1 2005 0
 3360              		.cfi_startproc
 3361              		@ args = 0, pretend = 0, frame = 0
 3362              		@ frame_needed = 0, uses_anonymous_args = 0
 3363              		@ link register save eliminated.
 3364              	.LVL429:
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3365              		.loc 1 2006 0
 3366 0000 4C23     		movs	r3, #76
 3367 0002 C05C     		ldrb	r0, [r0, r3]
 3368              	.LVL430:
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3369              		.loc 1 2007 0
 3370              		@ sp needed
 3371 0004 7047     		bx	lr
 3372              		.cfi_endproc
 3373              	.LFE27:
 3375              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3376              		.align	1
 3377              		.global	xQueueIsQueueEmptyFromISR
 3378              		.syntax unified
 3379              		.code	16
 3380              		.thumb_func
 3381              		.fpu softvfp
 3383              	xQueueIsQueueEmptyFromISR:
 3384              	.LFB33:
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3385              		.loc 1 2278 0
 3386              		.cfi_startproc
 3387              		@ args = 0, pretend = 0, frame = 0
 3388              		@ frame_needed = 0, uses_anonymous_args = 0
 3389              		@ link register save eliminated.
 3390              	.LVL431:
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3391              		.loc 1 2281 0
 3392 0000 0028     		cmp	r0, #0
 3393 0002 04D0     		beq	.L292
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3394              		.loc 1 2282 0
 3395 0004 836B     		ldr	r3, [r0, #56]
 3396 0006 002B     		cmp	r3, #0
 3397 0008 03D1     		bne	.L291
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3398              		.loc 1 2284 0
 3399 000a 0120     		movs	r0, #1
 3400              	.LVL432:
 3401              	.L287:
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3402              		.loc 1 2292 0
 3403              		@ sp needed
 3404 000c 7047     		bx	lr
ARM GAS  /tmp/cc8ESiuL.s 			page 109


 3405              	.LVL433:
 3406              	.L292:
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3407              		.loc 1 2281 0 discriminator 1
 3408              		.syntax divided
 3409              	@ 2281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3410 000e 72B6     		 cpsid i 
 3411              	@ 0 "" 2
 3412              		.thumb
 3413              		.syntax unified
 3414              	.L289:
 3415 0010 FEE7     		b	.L289
 3416              	.L291:
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3417              		.loc 1 2288 0
 3418 0012 0020     		movs	r0, #0
 3419              	.LVL434:
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3420              		.loc 1 2291 0
 3421 0014 FAE7     		b	.L287
 3422              		.cfi_endproc
 3423              	.LFE33:
 3425              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3426              		.align	1
 3427              		.global	xQueueIsQueueFullFromISR
 3428              		.syntax unified
 3429              		.code	16
 3430              		.thumb_func
 3431              		.fpu softvfp
 3433              	xQueueIsQueueFullFromISR:
 3434              	.LFB35:
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3435              		.loc 1 2317 0
 3436              		.cfi_startproc
 3437              		@ args = 0, pretend = 0, frame = 0
 3438              		@ frame_needed = 0, uses_anonymous_args = 0
 3439              		@ link register save eliminated.
 3440              	.LVL435:
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 3441              		.loc 1 2320 0
 3442 0000 0028     		cmp	r0, #0
 3443 0002 05D0     		beq	.L298
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 3444              		.loc 1 2321 0
 3445 0004 826B     		ldr	r2, [r0, #56]
 3446 0006 C36B     		ldr	r3, [r0, #60]
 3447 0008 9A42     		cmp	r2, r3
 3448 000a 03D1     		bne	.L297
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 3449              		.loc 1 2323 0
 3450 000c 0120     		movs	r0, #1
ARM GAS  /tmp/cc8ESiuL.s 			page 110


 3451              	.LVL436:
 3452              	.L293:
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3453              		.loc 1 2331 0
 3454              		@ sp needed
 3455 000e 7047     		bx	lr
 3456              	.LVL437:
 3457              	.L298:
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 3458              		.loc 1 2320 0 discriminator 1
 3459              		.syntax divided
 3460              	@ 2320 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3461 0010 72B6     		 cpsid i 
 3462              	@ 0 "" 2
 3463              		.thumb
 3464              		.syntax unified
 3465              	.L295:
 3466 0012 FEE7     		b	.L295
 3467              	.L297:
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3468              		.loc 1 2327 0
 3469 0014 0020     		movs	r0, #0
 3470              	.LVL438:
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3471              		.loc 1 2330 0
 3472 0016 FAE7     		b	.L293
 3473              		.cfi_endproc
 3474              	.LFE35:
 3476              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3477              		.align	1
 3478              		.global	vQueueAddToRegistry
 3479              		.syntax unified
 3480              		.code	16
 3481              		.thumb_func
 3482              		.fpu softvfp
 3484              	vQueueAddToRegistry:
 3485              	.LFB36:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
ARM GAS  /tmp/cc8ESiuL.s 			page 111


2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/cc8ESiuL.s 			page 112


2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
ARM GAS  /tmp/cc8ESiuL.s 			page 113


2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
ARM GAS  /tmp/cc8ESiuL.s 			page 114


2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc8ESiuL.s 			page 115


2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3486              		.loc 1 2612 0
 3487              		.cfi_startproc
 3488              		@ args = 0, pretend = 0, frame = 0
 3489              		@ frame_needed = 0, uses_anonymous_args = 0
 3490              	.LVL439:
 3491 0000 10B5     		push	{r4, lr}
 3492              	.LCFI37:
 3493              		.cfi_def_cfa_offset 8
 3494              		.cfi_offset 4, -8
 3495              		.cfi_offset 14, -4
 3496              	.LVL440:
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3497              		.loc 1 2617 0
ARM GAS  /tmp/cc8ESiuL.s 			page 116


 3498 0002 0023     		movs	r3, #0
 3499              	.LVL441:
 3500              	.L300:
 3501              		.loc 1 2617 0 is_stmt 0 discriminator 1
 3502 0004 072B     		cmp	r3, #7
 3503 0006 0AD8     		bhi	.L299
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3504              		.loc 1 2619 0 is_stmt 1
 3505 0008 DA00     		lsls	r2, r3, #3
 3506 000a 054C     		ldr	r4, .L305
 3507 000c 1259     		ldr	r2, [r2, r4]
 3508 000e 002A     		cmp	r2, #0
 3509 0010 01D0     		beq	.L304
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3510              		.loc 1 2617 0 discriminator 2
 3511 0012 0133     		adds	r3, r3, #1
 3512              	.LVL442:
 3513 0014 F6E7     		b	.L300
 3514              	.L304:
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 3515              		.loc 1 2622 0
 3516 0016 DB00     		lsls	r3, r3, #3
 3517              	.LVL443:
 3518 0018 1951     		str	r1, [r3, r4]
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3519              		.loc 1 2623 0
 3520 001a E318     		adds	r3, r4, r3
 3521 001c 5860     		str	r0, [r3, #4]
 3522              	.L299:
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3523              		.loc 1 2633 0
 3524              		@ sp needed
 3525 001e 10BD     		pop	{r4, pc}
 3526              	.L306:
 3527              		.align	2
 3528              	.L305:
 3529 0020 00000000 		.word	xQueueRegistry
 3530              		.cfi_endproc
 3531              	.LFE36:
 3533              		.section	.text.pcQueueGetName,"ax",%progbits
 3534              		.align	1
 3535              		.global	pcQueueGetName
 3536              		.syntax unified
 3537              		.code	16
 3538              		.thumb_func
ARM GAS  /tmp/cc8ESiuL.s 			page 117


 3539              		.fpu softvfp
 3541              	pcQueueGetName:
 3542              	.LFB37:
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3543              		.loc 1 2641 0
 3544              		.cfi_startproc
 3545              		@ args = 0, pretend = 0, frame = 0
 3546              		@ frame_needed = 0, uses_anonymous_args = 0
 3547              		@ link register save eliminated.
 3548              	.LVL444:
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3549              		.loc 1 2647 0
 3550 0000 0023     		movs	r3, #0
 3551              	.LVL445:
 3552              	.L308:
 3553              		.loc 1 2647 0 is_stmt 0 discriminator 1
 3554 0002 072B     		cmp	r3, #7
 3555 0004 0AD8     		bhi	.L312
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3556              		.loc 1 2649 0 is_stmt 1
 3557 0006 D900     		lsls	r1, r3, #3
 3558 0008 054A     		ldr	r2, .L314
 3559 000a 5218     		adds	r2, r2, r1
 3560 000c 5268     		ldr	r2, [r2, #4]
 3561 000e 8242     		cmp	r2, r0
 3562 0010 01D0     		beq	.L313
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3563              		.loc 1 2647 0 discriminator 2
 3564 0012 0133     		adds	r3, r3, #1
 3565              	.LVL446:
 3566 0014 F5E7     		b	.L308
 3567              	.L313:
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 3568              		.loc 1 2651 0
 3569 0016 024A     		ldr	r2, .L314
 3570 0018 8858     		ldr	r0, [r1, r2]
 3571              	.LVL447:
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3572              		.loc 1 2652 0
 3573 001a 00E0     		b	.L307
 3574              	.LVL448:
 3575              	.L312:
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc8ESiuL.s 			page 118


 3576              		.loc 1 2643 0
 3577 001c 0020     		movs	r0, #0
 3578              	.LVL449:
 3579              	.L307:
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 3580              		.loc 1 2661 0
 3581              		@ sp needed
 3582 001e 7047     		bx	lr
 3583              	.L315:
 3584              		.align	2
 3585              	.L314:
 3586 0020 00000000 		.word	xQueueRegistry
 3587              		.cfi_endproc
 3588              	.LFE37:
 3590              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 3591              		.align	1
 3592              		.global	vQueueUnregisterQueue
 3593              		.syntax unified
 3594              		.code	16
 3595              		.thumb_func
 3596              		.fpu softvfp
 3598              	vQueueUnregisterQueue:
 3599              	.LFB38:
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3600              		.loc 1 2669 0
 3601              		.cfi_startproc
 3602              		@ args = 0, pretend = 0, frame = 0
 3603              		@ frame_needed = 0, uses_anonymous_args = 0
 3604              		@ link register save eliminated.
 3605              	.LVL450:
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3606              		.loc 1 2674 0
 3607 0000 0023     		movs	r3, #0
 3608              	.LVL451:
 3609              	.L317:
 3610              		.loc 1 2674 0 is_stmt 0 discriminator 1
 3611 0002 072B     		cmp	r3, #7
 3612 0004 0DD8     		bhi	.L316
ARM GAS  /tmp/cc8ESiuL.s 			page 119


2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3613              		.loc 1 2676 0 is_stmt 1
 3614 0006 D900     		lsls	r1, r3, #3
 3615 0008 064A     		ldr	r2, .L322
 3616 000a 5218     		adds	r2, r2, r1
 3617 000c 5268     		ldr	r2, [r2, #4]
 3618 000e 8242     		cmp	r2, r0
 3619 0010 01D0     		beq	.L321
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3620              		.loc 1 2674 0 discriminator 2
 3621 0012 0133     		adds	r3, r3, #1
 3622              	.LVL452:
 3623 0014 F5E7     		b	.L317
 3624              	.L321:
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 3625              		.loc 1 2679 0
 3626 0016 034A     		ldr	r2, .L322
 3627 0018 0B00     		movs	r3, r1
 3628              	.LVL453:
 3629 001a 0021     		movs	r1, #0
 3630 001c 9950     		str	r1, [r3, r2]
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 3631              		.loc 1 2684 0
 3632 001e D318     		adds	r3, r2, r3
 3633 0020 5960     		str	r1, [r3, #4]
 3634              	.L316:
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3635              		.loc 1 2693 0
 3636              		@ sp needed
 3637 0022 7047     		bx	lr
 3638              	.L323:
 3639              		.align	2
 3640              	.L322:
 3641 0024 00000000 		.word	xQueueRegistry
 3642              		.cfi_endproc
 3643              	.LFE38:
 3645              		.section	.text.vQueueDelete,"ax",%progbits
 3646              		.align	1
 3647              		.global	vQueueDelete
 3648              		.syntax unified
 3649              		.code	16
 3650              		.thumb_func
ARM GAS  /tmp/cc8ESiuL.s 			page 120


 3651              		.fpu softvfp
 3653              	vQueueDelete:
 3654              	.LFB24:
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 3655              		.loc 1 1941 0
 3656              		.cfi_startproc
 3657              		@ args = 0, pretend = 0, frame = 0
 3658              		@ frame_needed = 0, uses_anonymous_args = 0
 3659              	.LVL454:
 3660 0000 10B5     		push	{r4, lr}
 3661              	.LCFI38:
 3662              		.cfi_def_cfa_offset 8
 3663              		.cfi_offset 4, -8
 3664              		.cfi_offset 14, -4
 3665 0002 041E     		subs	r4, r0, #0
 3666              	.LVL455:
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 3667              		.loc 1 1944 0
 3668 0004 01D1     		bne	.L325
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 3669              		.loc 1 1944 0 is_stmt 0 discriminator 1
 3670              		.syntax divided
 3671              	@ 1944 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3672 0006 72B6     		 cpsid i 
 3673              	@ 0 "" 2
 3674              		.thumb
 3675              		.syntax unified
 3676              	.L326:
 3677 0008 FEE7     		b	.L326
 3678              	.L325:
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3679              		.loc 1 1949 0 is_stmt 1
 3680 000a FFF7FEFF 		bl	vQueueUnregisterQueue
 3681              	.LVL456:
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3682              		.loc 1 1963 0
 3683 000e 4623     		movs	r3, #70
 3684 0010 E35C     		ldrb	r3, [r4, r3]
 3685 0012 002B     		cmp	r3, #0
 3686 0014 00D0     		beq	.L328
 3687              	.L324:
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3688              		.loc 1 1979 0
 3689              		@ sp needed
 3690              	.LVL457:
 3691 0016 10BD     		pop	{r4, pc}
 3692              	.LVL458:
 3693              	.L328:
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3694              		.loc 1 1965 0
 3695 0018 2000     		movs	r0, r4
 3696 001a FFF7FEFF 		bl	vPortFree
 3697              	.LVL459:
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3698              		.loc 1 1979 0
 3699 001e FAE7     		b	.L324
 3700              		.cfi_endproc
ARM GAS  /tmp/cc8ESiuL.s 			page 121


 3701              	.LFE24:
 3703              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 3704              		.align	1
 3705              		.global	vQueueWaitForMessageRestricted
 3706              		.syntax unified
 3707              		.code	16
 3708              		.thumb_func
 3709              		.fpu softvfp
 3711              	vQueueWaitForMessageRestricted:
 3712              	.LFB39:
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TIMERS == 1 )
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3713              		.loc 1 2701 0
 3714              		.cfi_startproc
 3715              		@ args = 0, pretend = 0, frame = 0
 3716              		@ frame_needed = 0, uses_anonymous_args = 0
 3717              	.LVL460:
 3718 0000 70B5     		push	{r4, r5, r6, lr}
 3719              	.LCFI39:
 3720              		.cfi_def_cfa_offset 16
 3721              		.cfi_offset 4, -16
 3722              		.cfi_offset 5, -12
 3723              		.cfi_offset 6, -8
 3724              		.cfi_offset 14, -4
 3725 0002 0400     		movs	r4, r0
 3726 0004 0D00     		movs	r5, r1
 3727 0006 1600     		movs	r6, r2
 3728              	.LVL461:
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function should not be called by application code hence the
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		designed for use by kernel code, and has special calling requirements.
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		It can result in vListInsert() being called on a list that can only
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		possibly ever have one item in it, so the list will be fast, but even
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		so it should be called with the scheduler locked and not from a critical
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		section. */
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Only do anything if there are no messages in the queue.  This function
2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		will not actually cause the task to block, just place it on a blocked
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		list.  It will not block until the scheduler is unlocked - at which
2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		time a yield will be performed.  If an item is added to the queue while
2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		the queue is locked, and the calling task blocks on the queue, then the
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task will be immediately unblocked when the queue is unlocked. */
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 3729              		.loc 1 2718 0
 3730 0008 FFF7FEFF 		bl	vPortEnterCritical
 3731              	.LVL462:
 3732 000c 4423     		movs	r3, #68
 3733 000e E35C     		ldrb	r3, [r4, r3]
 3734 0010 5BB2     		sxtb	r3, r3
ARM GAS  /tmp/cc8ESiuL.s 			page 122


 3735 0012 0133     		adds	r3, r3, #1
 3736 0014 0DD0     		beq	.L333
 3737              	.L330:
 3738              		.loc 1 2718 0 is_stmt 0 discriminator 3
 3739 0016 4523     		movs	r3, #69
 3740 0018 E35C     		ldrb	r3, [r4, r3]
 3741 001a 5BB2     		sxtb	r3, r3
 3742 001c 0133     		adds	r3, r3, #1
 3743 001e 0CD0     		beq	.L334
 3744              	.L331:
 3745              		.loc 1 2718 0 discriminator 6
 3746 0020 FFF7FEFF 		bl	vPortExitCritical
 3747              	.LVL463:
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 3748              		.loc 1 2719 0 is_stmt 1 discriminator 6
 3749 0024 A36B     		ldr	r3, [r4, #56]
 3750 0026 002B     		cmp	r3, #0
 3751 0028 0BD0     		beq	.L335
 3752              	.L332:
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is nothing in the queue, block for the specified period. */
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefi
2723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvUnlockQueue( pxQueue );
 3753              		.loc 1 2728 0
 3754 002a 2000     		movs	r0, r4
 3755 002c FFF7FEFF 		bl	prvUnlockQueue
 3756              	.LVL464:
2729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3757              		.loc 1 2729 0
 3758              		@ sp needed
 3759              	.LVL465:
 3760              	.LVL466:
 3761              	.LVL467:
 3762 0030 70BD     		pop	{r4, r5, r6, pc}
 3763              	.LVL468:
 3764              	.L333:
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 3765              		.loc 1 2718 0 discriminator 1
 3766 0032 4423     		movs	r3, #68
 3767 0034 0022     		movs	r2, #0
 3768 0036 E254     		strb	r2, [r4, r3]
 3769 0038 EDE7     		b	.L330
 3770              	.L334:
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 3771              		.loc 1 2718 0 is_stmt 0 discriminator 4
 3772 003a 4523     		movs	r3, #69
 3773 003c 0022     		movs	r2, #0
 3774 003e E254     		strb	r2, [r4, r3]
 3775 0040 EEE7     		b	.L331
 3776              	.L335:
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3777              		.loc 1 2722 0 is_stmt 1
ARM GAS  /tmp/cc8ESiuL.s 			page 123


 3778 0042 2000     		movs	r0, r4
 3779 0044 2430     		adds	r0, r0, #36
 3780 0046 3200     		movs	r2, r6
 3781 0048 2900     		movs	r1, r5
 3782 004a FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
 3783              	.LVL469:
 3784 004e ECE7     		b	.L332
 3785              		.cfi_endproc
 3786              	.LFE39:
 3788              		.comm	xQueueRegistry,64,4
 3789              		.text
 3790              	.Letext0:
 3791              		.file 2 "/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 3792              		.file 3 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_types.h"
 3793              		.file 4 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 3794              		.file 5 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 3795              		.file 6 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 3796              		.file 7 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 3797              		.file 8 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 3798              		.file 9 "Inc/FreeRTOSConfig.h"
 3799              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 3800              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 3801              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 3802              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3803              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 3804              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 3805              		.file 16 "<built-in>"
ARM GAS  /tmp/cc8ESiuL.s 			page 124


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/cc8ESiuL.s:16     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 $t
     /tmp/cc8ESiuL.s:22     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 prvGetDisinheritPriorityAfterTimeout
     /tmp/cc8ESiuL.s:57     .text.prvIsQueueFull:0000000000000000 $t
     /tmp/cc8ESiuL.s:63     .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/cc8ESiuL.s:106    .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/cc8ESiuL.s:112    .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/cc8ESiuL.s:154    .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/cc8ESiuL.s:160    .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/cc8ESiuL.s:289    .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/cc8ESiuL.s:295    .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/cc8ESiuL.s:340    .text.prvUnlockQueue:0000000000000000 $t
     /tmp/cc8ESiuL.s:346    .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/cc8ESiuL.s:463    .text.xQueueGenericReset:0000000000000000 $t
     /tmp/cc8ESiuL.s:470    .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/cc8ESiuL.s:574    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/cc8ESiuL.s:580    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/cc8ESiuL.s:628    .text.xQueueGenericCreateStatic:0000000000000000 $t
     /tmp/cc8ESiuL.s:635    .text.xQueueGenericCreateStatic:0000000000000000 xQueueGenericCreateStatic
     /tmp/cc8ESiuL.s:753    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/cc8ESiuL.s:760    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/cc8ESiuL.s:846    .text.xQueueGetMutexHolder:0000000000000000 $t
     /tmp/cc8ESiuL.s:853    .text.xQueueGetMutexHolder:0000000000000000 xQueueGetMutexHolder
     /tmp/cc8ESiuL.s:895    .text.xQueueGetMutexHolderFromISR:0000000000000000 $t
     /tmp/cc8ESiuL.s:902    .text.xQueueGetMutexHolderFromISR:0000000000000000 xQueueGetMutexHolderFromISR
     /tmp/cc8ESiuL.s:945    .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 $t
     /tmp/cc8ESiuL.s:952    .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 xQueueCreateCountingSemaphoreStatic
     /tmp/cc8ESiuL.s:1019   .text.xQueueCreateCountingSemaphore:0000000000000000 $t
     /tmp/cc8ESiuL.s:1026   .text.xQueueCreateCountingSemaphore:0000000000000000 xQueueCreateCountingSemaphore
     /tmp/cc8ESiuL.s:1085   .text.xQueueGenericSend:0000000000000000 $t
     /tmp/cc8ESiuL.s:1092   .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/cc8ESiuL.s:1366   .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/cc8ESiuL.s:1372   .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/cc8ESiuL.s:1407   .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/cc8ESiuL.s:1414   .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/cc8ESiuL.s:1448   .text.xQueueCreateMutexStatic:0000000000000000 $t
     /tmp/cc8ESiuL.s:1455   .text.xQueueCreateMutexStatic:0000000000000000 xQueueCreateMutexStatic
     /tmp/cc8ESiuL.s:1496   .text.xQueueGiveMutexRecursive:0000000000000000 $t
     /tmp/cc8ESiuL.s:1503   .text.xQueueGiveMutexRecursive:0000000000000000 xQueueGiveMutexRecursive
     /tmp/cc8ESiuL.s:1571   .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/cc8ESiuL.s:1578   .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/cc8ESiuL.s:1755   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/cc8ESiuL.s:1762   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/cc8ESiuL.s:1934   .text.xQueueReceive:0000000000000000 $t
     /tmp/cc8ESiuL.s:1941   .text.xQueueReceive:0000000000000000 xQueueReceive
     /tmp/cc8ESiuL.s:2203   .text.xQueueSemaphoreTake:0000000000000000 $t
     /tmp/cc8ESiuL.s:2210   .text.xQueueSemaphoreTake:0000000000000000 xQueueSemaphoreTake
     /tmp/cc8ESiuL.s:2527   .text.xQueueTakeMutexRecursive:0000000000000000 $t
     /tmp/cc8ESiuL.s:2534   .text.xQueueTakeMutexRecursive:0000000000000000 xQueueTakeMutexRecursive
     /tmp/cc8ESiuL.s:2604   .text.xQueuePeek:0000000000000000 $t
     /tmp/cc8ESiuL.s:2611   .text.xQueuePeek:0000000000000000 xQueuePeek
     /tmp/cc8ESiuL.s:2873   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/cc8ESiuL.s:2880   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/cc8ESiuL.s:3040   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/cc8ESiuL.s:3047   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
     /tmp/cc8ESiuL.s:3156   .text.uxQueueMessagesWaiting:0000000000000000 $t
ARM GAS  /tmp/cc8ESiuL.s 			page 125


     /tmp/cc8ESiuL.s:3163   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/cc8ESiuL.s:3206   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/cc8ESiuL.s:3213   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/cc8ESiuL.s:3262   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/cc8ESiuL.s:3269   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/cc8ESiuL.s:3301   .text.uxQueueGetQueueNumber:0000000000000000 $t
     /tmp/cc8ESiuL.s:3308   .text.uxQueueGetQueueNumber:0000000000000000 uxQueueGetQueueNumber
     /tmp/cc8ESiuL.s:3326   .text.vQueueSetQueueNumber:0000000000000000 $t
     /tmp/cc8ESiuL.s:3333   .text.vQueueSetQueueNumber:0000000000000000 vQueueSetQueueNumber
     /tmp/cc8ESiuL.s:3350   .text.ucQueueGetQueueType:0000000000000000 $t
     /tmp/cc8ESiuL.s:3357   .text.ucQueueGetQueueType:0000000000000000 ucQueueGetQueueType
     /tmp/cc8ESiuL.s:3376   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/cc8ESiuL.s:3383   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
     /tmp/cc8ESiuL.s:3426   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/cc8ESiuL.s:3433   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/cc8ESiuL.s:3477   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/cc8ESiuL.s:3484   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/cc8ESiuL.s:3529   .text.vQueueAddToRegistry:0000000000000020 $d
                            *COM*:0000000000000040 xQueueRegistry
     /tmp/cc8ESiuL.s:3534   .text.pcQueueGetName:0000000000000000 $t
     /tmp/cc8ESiuL.s:3541   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/cc8ESiuL.s:3586   .text.pcQueueGetName:0000000000000020 $d
     /tmp/cc8ESiuL.s:3591   .text.vQueueUnregisterQueue:0000000000000000 $t
     /tmp/cc8ESiuL.s:3598   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/cc8ESiuL.s:3641   .text.vQueueUnregisterQueue:0000000000000024 $d
     /tmp/cc8ESiuL.s:3646   .text.vQueueDelete:0000000000000000 $t
     /tmp/cc8ESiuL.s:3653   .text.vQueueDelete:0000000000000000 vQueueDelete
     /tmp/cc8ESiuL.s:3704   .text.vQueueWaitForMessageRestricted:0000000000000000 $t
     /tmp/cc8ESiuL.s:3711   .text.vQueueWaitForMessageRestricted:0000000000000000 vQueueWaitForMessageRestricted

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
vTaskMissedYield
xTaskRemoveFromEventList
vPortYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
xTaskResumeAll
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskGetCurrentTaskHandle
ulSetInterruptMaskFromISR
vClearInterruptMaskFromISR
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
vTaskPlaceOnEventListRestricted
