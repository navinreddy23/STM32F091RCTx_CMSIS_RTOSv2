ARM GAS  /tmp/ccVT1W8q.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_timebase_tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_uidiv
  16              		.section	.text.HAL_InitTick,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_InitTick
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_InitTick:
  25              	.LFB40:
  26              		.file 1 "Src/stm32f0xx_hal_timebase_tim.c"
   1:Src/stm32f0xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_hal_timebase_tim.c **** /**
   3:Src/stm32f0xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Src/stm32f0xx_hal_timebase_tim.c ****   * @file    stm32f0xx_hal_timebase_TIM.c
   5:Src/stm32f0xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Src/stm32f0xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Src/stm32f0xx_hal_timebase_tim.c ****   * @attention
   8:Src/stm32f0xx_hal_timebase_tim.c ****   *
   9:Src/stm32f0xx_hal_timebase_tim.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/stm32f0xx_hal_timebase_tim.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f0xx_hal_timebase_tim.c ****   *
  12:Src/stm32f0xx_hal_timebase_tim.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f0xx_hal_timebase_tim.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f0xx_hal_timebase_tim.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f0xx_hal_timebase_tim.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f0xx_hal_timebase_tim.c ****   *
  17:Src/stm32f0xx_hal_timebase_tim.c ****   ******************************************************************************
  18:Src/stm32f0xx_hal_timebase_tim.c ****   */
  19:Src/stm32f0xx_hal_timebase_tim.c **** /* USER CODE END Header */
  20:Src/stm32f0xx_hal_timebase_tim.c **** 
  21:Src/stm32f0xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f0xx_hal_timebase_tim.c **** #include "stm32f0xx_hal.h"
  23:Src/stm32f0xx_hal_timebase_tim.c **** #include "stm32f0xx_hal_tim.h"
  24:Src/stm32f0xx_hal_timebase_tim.c **** 
  25:Src/stm32f0xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  26:Src/stm32f0xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  27:Src/stm32f0xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  28:Src/stm32f0xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  29:Src/stm32f0xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim2;
  30:Src/stm32f0xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  31:Src/stm32f0xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  32:Src/stm32f0xx_hal_timebase_tim.c **** 
ARM GAS  /tmp/ccVT1W8q.s 			page 2


  33:Src/stm32f0xx_hal_timebase_tim.c **** /**
  34:Src/stm32f0xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM2 as a time base source.
  35:Src/stm32f0xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  36:Src/stm32f0xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  37:Src/stm32f0xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  38:Src/stm32f0xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  39:Src/stm32f0xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  40:Src/stm32f0xx_hal_timebase_tim.c ****   * @retval HAL status
  41:Src/stm32f0xx_hal_timebase_tim.c ****   */
  42:Src/stm32f0xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  43:Src/stm32f0xx_hal_timebase_tim.c **** {
  27              		.loc 1 43 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 32
  39 0004 0100     		movs	r1, r0
  40              	.LVL1:
  44:Src/stm32f0xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  45:Src/stm32f0xx_hal_timebase_tim.c ****   uint32_t              uwTimclock = 0;
  46:Src/stm32f0xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0;
  47:Src/stm32f0xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  48:Src/stm32f0xx_hal_timebase_tim.c ****   /*Configure the TIM2 IRQ priority */
  49:Src/stm32f0xx_hal_timebase_tim.c ****   HAL_NVIC_SetPriority(TIM2_IRQn, TickPriority ,0);
  41              		.loc 1 49 0
  42 0006 0022     		movs	r2, #0
  43 0008 0F20     		movs	r0, #15
  44              	.LVL2:
  45 000a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  46              	.LVL3:
  50:Src/stm32f0xx_hal_timebase_tim.c **** 
  51:Src/stm32f0xx_hal_timebase_tim.c ****   /* Enable the TIM2 global Interrupt */
  52:Src/stm32f0xx_hal_timebase_tim.c ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
  47              		.loc 1 52 0
  48 000e 0F20     		movs	r0, #15
  49 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  50              	.LVL4:
  51              	.LBB2:
  53:Src/stm32f0xx_hal_timebase_tim.c ****   /* Enable TIM2 clock */
  54:Src/stm32f0xx_hal_timebase_tim.c ****   __HAL_RCC_TIM2_CLK_ENABLE();
  52              		.loc 1 54 0
  53 0014 134A     		ldr	r2, .L5
  54 0016 D169     		ldr	r1, [r2, #28]
  55 0018 0123     		movs	r3, #1
  56 001a 1943     		orrs	r1, r3
  57 001c D161     		str	r1, [r2, #28]
  58 001e D269     		ldr	r2, [r2, #28]
  59 0020 1340     		ands	r3, r2
  60 0022 0093     		str	r3, [sp]
  61 0024 009B     		ldr	r3, [sp]
ARM GAS  /tmp/ccVT1W8q.s 			page 3


  62              	.LBE2:
  55:Src/stm32f0xx_hal_timebase_tim.c **** 
  56:Src/stm32f0xx_hal_timebase_tim.c ****   /* Get clock configuration */
  57:Src/stm32f0xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  63              		.loc 1 57 0
  64 0026 01A9     		add	r1, sp, #4
  65 0028 02A8     		add	r0, sp, #8
  66 002a FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  67              	.LVL5:
  58:Src/stm32f0xx_hal_timebase_tim.c **** 
  59:Src/stm32f0xx_hal_timebase_tim.c ****   /* Compute TIM2 clock */
  60:Src/stm32f0xx_hal_timebase_tim.c ****   uwTimclock = HAL_RCC_GetPCLK1Freq();
  68              		.loc 1 60 0
  69 002e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  70              	.LVL6:
  61:Src/stm32f0xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM2 counter clock equal to 1MHz */
  62:Src/stm32f0xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  71              		.loc 1 62 0
  72 0032 0D49     		ldr	r1, .L5+4
  73 0034 FFF7FEFF 		bl	__aeabi_uidiv
  74              	.LVL7:
  75 0038 431E     		subs	r3, r0, #1
  76              	.LVL8:
  63:Src/stm32f0xx_hal_timebase_tim.c **** 
  64:Src/stm32f0xx_hal_timebase_tim.c ****   /* Initialize TIM2 */
  65:Src/stm32f0xx_hal_timebase_tim.c ****   htim2.Instance = TIM2;
  77              		.loc 1 65 0
  78 003a 0C48     		ldr	r0, .L5+8
  79 003c 8022     		movs	r2, #128
  80 003e D205     		lsls	r2, r2, #23
  81 0040 0260     		str	r2, [r0]
  66:Src/stm32f0xx_hal_timebase_tim.c **** 
  67:Src/stm32f0xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  68:Src/stm32f0xx_hal_timebase_tim.c ****   + Period = [(TIM2CLK/1000) - 1]. to have a (1/1000) s time base.
  69:Src/stm32f0xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  70:Src/stm32f0xx_hal_timebase_tim.c ****   + ClockDivision = 0
  71:Src/stm32f0xx_hal_timebase_tim.c ****   + Counter direction = Up
  72:Src/stm32f0xx_hal_timebase_tim.c ****   */
  73:Src/stm32f0xx_hal_timebase_tim.c ****   htim2.Init.Period = (1000000U / 1000U) - 1U;
  82              		.loc 1 73 0
  83 0042 0B4A     		ldr	r2, .L5+12
  84 0044 C260     		str	r2, [r0, #12]
  74:Src/stm32f0xx_hal_timebase_tim.c ****   htim2.Init.Prescaler = uwPrescalerValue;
  85              		.loc 1 74 0
  86 0046 4360     		str	r3, [r0, #4]
  75:Src/stm32f0xx_hal_timebase_tim.c ****   htim2.Init.ClockDivision = 0;
  87              		.loc 1 75 0
  88 0048 0023     		movs	r3, #0
  89              	.LVL9:
  90 004a 0361     		str	r3, [r0, #16]
  76:Src/stm32f0xx_hal_timebase_tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  91              		.loc 1 76 0
  92 004c 8360     		str	r3, [r0, #8]
  77:Src/stm32f0xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&htim2) == HAL_OK)
  93              		.loc 1 77 0
  94 004e FFF7FEFF 		bl	HAL_TIM_Base_Init
  95              	.LVL10:
ARM GAS  /tmp/ccVT1W8q.s 			page 4


  96 0052 0028     		cmp	r0, #0
  97 0054 02D0     		beq	.L4
  78:Src/stm32f0xx_hal_timebase_tim.c ****   {
  79:Src/stm32f0xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  80:Src/stm32f0xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&htim2);
  81:Src/stm32f0xx_hal_timebase_tim.c ****   }
  82:Src/stm32f0xx_hal_timebase_tim.c **** 
  83:Src/stm32f0xx_hal_timebase_tim.c ****   /* Return function status */
  84:Src/stm32f0xx_hal_timebase_tim.c ****   return HAL_ERROR;
  98              		.loc 1 84 0
  99 0056 0120     		movs	r0, #1
 100              	.L2:
  85:Src/stm32f0xx_hal_timebase_tim.c **** }
 101              		.loc 1 85 0
 102 0058 07B0     		add	sp, sp, #28
 103              		@ sp needed
 104 005a 00BD     		pop	{pc}
 105              	.L4:
  80:Src/stm32f0xx_hal_timebase_tim.c ****   }
 106              		.loc 1 80 0
 107 005c 0348     		ldr	r0, .L5+8
 108 005e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 109              	.LVL11:
 110 0062 F9E7     		b	.L2
 111              	.L6:
 112              		.align	2
 113              	.L5:
 114 0064 00100240 		.word	1073876992
 115 0068 40420F00 		.word	1000000
 116 006c 00000000 		.word	htim2
 117 0070 E7030000 		.word	999
 118              		.cfi_endproc
 119              	.LFE40:
 121              		.section	.text.HAL_SuspendTick,"ax",%progbits
 122              		.align	1
 123              		.global	HAL_SuspendTick
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
 127              		.fpu softvfp
 129              	HAL_SuspendTick:
 130              	.LFB41:
  86:Src/stm32f0xx_hal_timebase_tim.c **** 
  87:Src/stm32f0xx_hal_timebase_tim.c **** /**
  88:Src/stm32f0xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
  89:Src/stm32f0xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM2 update interrupt.
  90:Src/stm32f0xx_hal_timebase_tim.c ****   * @param  None
  91:Src/stm32f0xx_hal_timebase_tim.c ****   * @retval None
  92:Src/stm32f0xx_hal_timebase_tim.c ****   */
  93:Src/stm32f0xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
  94:Src/stm32f0xx_hal_timebase_tim.c **** {
 131              		.loc 1 94 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
  95:Src/stm32f0xx_hal_timebase_tim.c ****   /* Disable TIM2 update Interrupt */
ARM GAS  /tmp/ccVT1W8q.s 			page 5


  96:Src/stm32f0xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim2, TIM_IT_UPDATE);
 136              		.loc 1 96 0
 137 0000 034B     		ldr	r3, .L8
 138 0002 1A68     		ldr	r2, [r3]
 139 0004 D368     		ldr	r3, [r2, #12]
 140 0006 0121     		movs	r1, #1
 141 0008 8B43     		bics	r3, r1
 142 000a D360     		str	r3, [r2, #12]
  97:Src/stm32f0xx_hal_timebase_tim.c **** }
 143              		.loc 1 97 0
 144              		@ sp needed
 145 000c 7047     		bx	lr
 146              	.L9:
 147 000e C046     		.align	2
 148              	.L8:
 149 0010 00000000 		.word	htim2
 150              		.cfi_endproc
 151              	.LFE41:
 153              		.section	.text.HAL_ResumeTick,"ax",%progbits
 154              		.align	1
 155              		.global	HAL_ResumeTick
 156              		.syntax unified
 157              		.code	16
 158              		.thumb_func
 159              		.fpu softvfp
 161              	HAL_ResumeTick:
 162              	.LFB42:
  98:Src/stm32f0xx_hal_timebase_tim.c **** 
  99:Src/stm32f0xx_hal_timebase_tim.c **** /**
 100:Src/stm32f0xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 101:Src/stm32f0xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM2 update interrupt.
 102:Src/stm32f0xx_hal_timebase_tim.c ****   * @param  None
 103:Src/stm32f0xx_hal_timebase_tim.c ****   * @retval None
 104:Src/stm32f0xx_hal_timebase_tim.c ****   */
 105:Src/stm32f0xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 106:Src/stm32f0xx_hal_timebase_tim.c **** {
 163              		.loc 1 106 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 107:Src/stm32f0xx_hal_timebase_tim.c ****   /* Enable TIM2 Update interrupt */
 108:Src/stm32f0xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim2, TIM_IT_UPDATE);
 168              		.loc 1 108 0
 169 0000 034B     		ldr	r3, .L11
 170 0002 1A68     		ldr	r2, [r3]
 171 0004 D368     		ldr	r3, [r2, #12]
 172 0006 0121     		movs	r1, #1
 173 0008 0B43     		orrs	r3, r1
 174 000a D360     		str	r3, [r2, #12]
 109:Src/stm32f0xx_hal_timebase_tim.c **** }
 175              		.loc 1 109 0
 176              		@ sp needed
 177 000c 7047     		bx	lr
 178              	.L12:
 179 000e C046     		.align	2
 180              	.L11:
ARM GAS  /tmp/ccVT1W8q.s 			page 6


 181 0010 00000000 		.word	htim2
 182              		.cfi_endproc
 183              	.LFE42:
 185              		.comm	htim2,72,4
 186              		.text
 187              	.Letext0:
 188              		.file 2 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_types.h"
 189              		.file 3 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 190              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 191              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f091xc.h"
 192              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 193              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 194              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 195              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 196              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 197              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccVT1W8q.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_timebase_tim.c
     /tmp/ccVT1W8q.s:17     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccVT1W8q.s:24     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccVT1W8q.s:114    .text.HAL_InitTick:0000000000000064 $d
                            *COM*:0000000000000048 htim2
     /tmp/ccVT1W8q.s:122    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccVT1W8q.s:129    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccVT1W8q.s:149    .text.HAL_SuspendTick:0000000000000010 $d
     /tmp/ccVT1W8q.s:154    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccVT1W8q.s:161    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccVT1W8q.s:181    .text.HAL_ResumeTick:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
