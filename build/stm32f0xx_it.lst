ARM GAS  /tmp/ccfsam0i.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB40:
  25              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_it.c **** /**
   3:Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Src/stm32f0xx_it.c ****   * @attention
   8:Src/stm32f0xx_it.c ****   *
   9:Src/stm32f0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/stm32f0xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f0xx_it.c ****   *
  12:Src/stm32f0xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f0xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f0xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f0xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f0xx_it.c ****   *
  17:Src/stm32f0xx_it.c ****   ******************************************************************************
  18:Src/stm32f0xx_it.c ****   */
  19:Src/stm32f0xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f0xx_it.c **** 
  21:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f0xx_it.c **** #include "main.h"
  23:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  24:Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f0xx_it.c **** 
  28:Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f0xx_it.c **** 
  31:Src/stm32f0xx_it.c **** /* USER CODE END TD */
  32:Src/stm32f0xx_it.c **** 
  33:Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccfsam0i.s 			page 2


  34:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f0xx_it.c **** 
  36:Src/stm32f0xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f0xx_it.c **** 
  38:Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f0xx_it.c **** 
  41:Src/stm32f0xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f0xx_it.c **** 
  43:Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f0xx_it.c **** 
  46:Src/stm32f0xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f0xx_it.c **** 
  48:Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f0xx_it.c **** 
  51:Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f0xx_it.c **** 
  53:Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f0xx_it.c **** 
  56:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f0xx_it.c **** 
  58:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim2;
  60:Src/stm32f0xx_it.c **** 
  61:Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  62:Src/stm32f0xx_it.c **** 
  63:Src/stm32f0xx_it.c **** /* USER CODE END EV */
  64:Src/stm32f0xx_it.c **** 
  65:Src/stm32f0xx_it.c **** /******************************************************************************/
  66:Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */
  67:Src/stm32f0xx_it.c **** /******************************************************************************/
  68:Src/stm32f0xx_it.c **** /**
  69:Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Src/stm32f0xx_it.c ****   */
  71:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  72:Src/stm32f0xx_it.c **** {
  26              		.loc 1 72 0
  27              		.cfi_startproc
  28              		@ Volatile: function does not return.
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.L2:
  33 0000 FEE7     		b	.L2
  34              		.cfi_endproc
  35              	.LFE40:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.code	16
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
ARM GAS  /tmp/ccfsam0i.s 			page 3


  46              	.LFB41:
  73:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Src/stm32f0xx_it.c **** 
  75:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Src/stm32f0xx_it.c ****   while (1)
  78:Src/stm32f0xx_it.c ****   {
  79:Src/stm32f0xx_it.c ****   }
  80:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Src/stm32f0xx_it.c **** }
  82:Src/stm32f0xx_it.c **** 
  83:Src/stm32f0xx_it.c **** /**
  84:Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Src/stm32f0xx_it.c ****   */
  86:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  87:Src/stm32f0xx_it.c **** {
  47              		.loc 1 87 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L4:
  54 0000 FEE7     		b	.L4
  55              		.cfi_endproc
  56              	.LFE41:
  58              		.section	.text.TIM2_IRQHandler,"ax",%progbits
  59              		.align	1
  60              		.global	TIM2_IRQHandler
  61              		.syntax unified
  62              		.code	16
  63              		.thumb_func
  64              		.fpu softvfp
  66              	TIM2_IRQHandler:
  67              	.LFB42:
  88:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Src/stm32f0xx_it.c **** 
  90:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Src/stm32f0xx_it.c ****   while (1)
  92:Src/stm32f0xx_it.c ****   {
  93:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Src/stm32f0xx_it.c ****   }
  96:Src/stm32f0xx_it.c **** }
  97:Src/stm32f0xx_it.c **** 
  98:Src/stm32f0xx_it.c **** /******************************************************************************/
  99:Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 100:Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 101:Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 102:Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 103:Src/stm32f0xx_it.c **** /******************************************************************************/
 104:Src/stm32f0xx_it.c **** 
 105:Src/stm32f0xx_it.c **** /**
 106:Src/stm32f0xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 107:Src/stm32f0xx_it.c ****   */
 108:Src/stm32f0xx_it.c **** void TIM2_IRQHandler(void)
 109:Src/stm32f0xx_it.c **** {
ARM GAS  /tmp/ccfsam0i.s 			page 4


  68              		.loc 1 109 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		.loc 1 109 0
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
 110:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 111:Src/stm32f0xx_it.c **** 
 112:Src/stm32f0xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 113:Src/stm32f0xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
  78              		.loc 1 113 0
  79 0002 0248     		ldr	r0, .L6
  80 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
  81              	.LVL0:
 114:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 115:Src/stm32f0xx_it.c **** 
 116:Src/stm32f0xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 117:Src/stm32f0xx_it.c **** }
  82              		.loc 1 117 0
  83              		@ sp needed
  84 0008 10BD     		pop	{r4, pc}
  85              	.L7:
  86 000a C046     		.align	2
  87              	.L6:
  88 000c 00000000 		.word	htim2
  89              		.cfi_endproc
  90              	.LFE42:
  92              		.text
  93              	.Letext0:
  94              		.file 2 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_types.h"
  95              		.file 3 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
  96              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
  97              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f091xc.h"
  98              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
  99              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 100              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 101              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/ccfsam0i.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_it.c
     /tmp/ccfsam0i.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccfsam0i.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccfsam0i.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccfsam0i.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccfsam0i.s:59     .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccfsam0i.s:66     .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccfsam0i.s:88     .text.TIM2_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim2
