ARM GAS  /tmp/ccUgdI1B.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"timers.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	prvGetNextExpireTime:
  23              	.LFB12:
  24              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
ARM GAS  /tmp/ccUgdI1B.s 			page 2


  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** header files above, but not in this file, in order to generate the correct
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** privileged Vs unprivileged linkage and placement. */
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t				uxAutoReload;		/*<< Set to pdTRUE if the timer should be automatically restarted on
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		uint8_t 			ucStaticallyAllocated; /*<< Set to pdTRUE if the timer was created statically so no at
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
ARM GAS  /tmp/ccUgdI1B.s 			page 3


  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists. */
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1 = {0};
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2 = {0};
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList = NULL;
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList = NULL;
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
ARM GAS  /tmp/ccUgdI1B.s 			page 4


 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters ) PRIVILEGED_FUNCTION;
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto reload timer, then call its callback.
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
ARM GAS  /tmp/ccUgdI1B.s 			page 5


 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
ARM GAS  /tmp/ccUgdI1B.s 			page 6


 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically, so note this
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created dynamically in case the timer is later
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				deleted. */
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdFALSE;
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
ARM GAS  /tmp/ccUgdI1B.s 			page 7


 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically so note this
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created statically in case it is later deleted. */
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdTRUE;
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
ARM GAS  /tmp/ccUgdI1B.s 			page 8


 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
ARM GAS  /tmp/ccUgdI1B.s 			page 9


 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
ARM GAS  /tmp/ccUgdI1B.s 			page 10


 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters )
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
ARM GAS  /tmp/ccUgdI1B.s 			page 11


 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  25              		.loc 1 599 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
ARM GAS  /tmp/ccUgdI1B.s 			page 12


  30              	.LVL0:
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  31              		.loc 1 609 0
  32 0000 064B     		ldr	r3, .L4
  33 0002 1A68     		ldr	r2, [r3]
  34 0004 1368     		ldr	r3, [r2]
  35 0006 5942     		rsbs	r1, r3, #0
  36 0008 4B41     		adcs	r3, r3, r1
  37 000a 0360     		str	r3, [r0]
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  38              		.loc 1 610 0
  39 000c 002B     		cmp	r3, #0
  40 000e 02D1     		bne	.L3
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  41              		.loc 1 612 0
  42 0010 D368     		ldr	r3, [r2, #12]
  43 0012 1868     		ldr	r0, [r3]
  44              	.LVL1:
  45              	.L1:
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  46              		.loc 1 621 0
  47              		@ sp needed
  48 0014 7047     		bx	lr
  49              	.LVL2:
  50              	.L3:
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
  51              		.loc 1 617 0
  52 0016 0020     		movs	r0, #0
  53              	.LVL3:
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  54              		.loc 1 620 0
  55 0018 FCE7     		b	.L1
  56              	.L5:
  57 001a C046     		.align	2
  58              	.L4:
  59 001c 00000000 		.word	.LANCHOR0
  60              		.cfi_endproc
  61              	.LFE12:
  63              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
ARM GAS  /tmp/ccUgdI1B.s 			page 13


  64              		.align	1
  65              		.syntax unified
  66              		.code	16
  67              		.thumb_func
  68              		.fpu softvfp
  70              	prvInsertTimerInActiveList:
  71              	.LFB14:
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  72              		.loc 1 648 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              	.LVL4:
  77 0000 10B5     		push	{r4, lr}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 4, -8
  81              		.cfi_offset 14, -4
  82              	.LVL5:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  83              		.loc 1 651 0
  84 0002 4160     		str	r1, [r0, #4]
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  85              		.loc 1 652 0
  86 0004 0061     		str	r0, [r0, #16]
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  87              		.loc 1 654 0
  88 0006 9142     		cmp	r1, r2
ARM GAS  /tmp/ccUgdI1B.s 			page 14


  89 0008 0CD8     		bhi	.L7
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  90              		.loc 1 658 0
  91 000a D21A     		subs	r2, r2, r3
  92              	.LVL6:
  93 000c 8369     		ldr	r3, [r0, #24]
  94              	.LVL7:
  95 000e 9A42     		cmp	r2, r3
  96 0010 01D3     		bcc	.L12
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
  97              		.loc 1 662 0
  98 0012 0120     		movs	r0, #1
  99              	.LVL8:
 100 0014 10E0     		b	.L6
 101              	.LVL9:
 102              	.L12:
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 103              		.loc 1 666 0
 104 0016 011D     		adds	r1, r0, #4
 105              	.LVL10:
 106 0018 094B     		ldr	r3, .L13
 107 001a 1868     		ldr	r0, [r3]
 108              	.LVL11:
 109 001c FFF7FEFF 		bl	vListInsert
 110              	.LVL12:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 111              		.loc 1 649 0
 112 0020 0020     		movs	r0, #0
 113 0022 09E0     		b	.L6
 114              	.LVL13:
 115              	.L7:
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 116              		.loc 1 671 0
 117 0024 9A42     		cmp	r2, r3
 118 0026 01D2     		bcs	.L9
 119              		.loc 1 671 0 is_stmt 0 discriminator 1
 120 0028 9942     		cmp	r1, r3
 121 002a 06D2     		bcs	.L11
 122              	.L9:
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
ARM GAS  /tmp/ccUgdI1B.s 			page 15


 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 123              		.loc 1 680 0 is_stmt 1
 124 002c 011D     		adds	r1, r0, #4
 125              	.LVL14:
 126 002e 054B     		ldr	r3, .L13+4
 127              	.LVL15:
 128 0030 1868     		ldr	r0, [r3]
 129              	.LVL16:
 130 0032 FFF7FEFF 		bl	vListInsert
 131              	.LVL17:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 132              		.loc 1 649 0
 133 0036 0020     		movs	r0, #0
 134              	.LVL18:
 135              	.L6:
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 136              		.loc 1 685 0
 137              		@ sp needed
 138 0038 10BD     		pop	{r4, pc}
 139              	.LVL19:
 140              	.L11:
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 141              		.loc 1 676 0
 142 003a 0120     		movs	r0, #1
 143              	.LVL20:
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 144              		.loc 1 684 0
 145 003c FCE7     		b	.L6
 146              	.L14:
 147 003e C046     		.align	2
 148              	.L13:
 149 0040 00000000 		.word	.LANCHOR1
 150 0044 00000000 		.word	.LANCHOR0
 151              		.cfi_endproc
 152              	.LFE14:
 154              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.code	16
 158              		.thumb_func
 159              		.fpu softvfp
 161              	prvCheckForValidListAndQueue:
 162              	.LFB17:
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
ARM GAS  /tmp/ccUgdI1B.s 			page 16


 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
ARM GAS  /tmp/ccUgdI1B.s 			page 17


 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_START_FROM_ISR :
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET :
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET_FROM_ISR :
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list.
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					There is nothing to do here. */
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list,
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					just free up the memory if the memory was dynamically
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					allocated. */
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer can only have been allocated dynamically -
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						free it again. */
ARM GAS  /tmp/ccUgdI1B.s 			page 18


 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						vPortFree( pxTimer );
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer could have been allocated statically or
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						dynamically, so check before attempting to free the
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						memory. */
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
ARM GAS  /tmp/ccUgdI1B.s 			page 19


 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 163              		.loc 1 895 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 30B5     		push	{r4, r5, lr}
 168              	.LCFI1:
 169              		.cfi_def_cfa_offset 12
 170              		.cfi_offset 4, -12
 171              		.cfi_offset 5, -8
 172              		.cfi_offset 14, -4
 173 0002 83B0     		sub	sp, sp, #12
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 24
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 176              		.loc 1 899 0
 177 0004 FFF7FEFF 		bl	vPortEnterCritical
 178              	.LVL21:
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 179              		.loc 1 901 0
 180 0008 114B     		ldr	r3, .L18
 181 000a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUgdI1B.s 			page 20


 182 000c 002B     		cmp	r3, #0
 183 000e 03D0     		beq	.L17
 184              	.L16:
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 185              		.loc 1 941 0
 186 0010 FFF7FEFF 		bl	vPortExitCritical
 187              	.LVL22:
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 188              		.loc 1 942 0
 189 0014 03B0     		add	sp, sp, #12
 190              		@ sp needed
 191 0016 30BD     		pop	{r4, r5, pc}
 192              	.L17:
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 193              		.loc 1 903 0
 194 0018 0E4D     		ldr	r5, .L18+4
 195 001a 2800     		movs	r0, r5
 196 001c FFF7FEFF 		bl	vListInitialise
ARM GAS  /tmp/ccUgdI1B.s 			page 21


 197              	.LVL23:
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 198              		.loc 1 904 0
 199 0020 0D4C     		ldr	r4, .L18+8
 200 0022 2000     		movs	r0, r4
 201 0024 FFF7FEFF 		bl	vListInitialise
 202              	.LVL24:
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 203              		.loc 1 905 0
 204 0028 0C4B     		ldr	r3, .L18+12
 205 002a 1D60     		str	r5, [r3]
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 206              		.loc 1 906 0
 207 002c 0C4B     		ldr	r3, .L18+16
 208 002e 1C60     		str	r4, [r3]
 209              	.LBB2:
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 210              		.loc 1 915 0
 211 0030 0023     		movs	r3, #0
 212 0032 0093     		str	r3, [sp]
 213 0034 0B4B     		ldr	r3, .L18+20
 214 0036 0C4A     		ldr	r2, .L18+24
 215 0038 1021     		movs	r1, #16
 216 003a 0A20     		movs	r0, #10
 217 003c FFF7FEFF 		bl	xQueueGenericCreateStatic
 218              	.LVL25:
 219 0040 034B     		ldr	r3, .L18
 220 0042 1860     		str	r0, [r3]
 221              	.LBE2:
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 222              		.loc 1 925 0
 223 0044 0028     		cmp	r0, #0
 224 0046 E3D0     		beq	.L16
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 225              		.loc 1 927 0
 226 0048 0849     		ldr	r1, .L18+28
 227 004a FFF7FEFF 		bl	vQueueAddToRegistry
 228              	.LVL26:
 229 004e DFE7     		b	.L16
 230              	.L19:
 231              		.align	2
 232              	.L18:
 233 0050 00000000 		.word	.LANCHOR2
 234 0054 00000000 		.word	.LANCHOR3
 235 0058 00000000 		.word	.LANCHOR4
 236 005c 00000000 		.word	.LANCHOR0
 237 0060 00000000 		.word	.LANCHOR1
 238 0064 00000000 		.word	.LANCHOR5
 239 0068 00000000 		.word	ucStaticTimerQueueStorage.5503
 240 006c 00000000 		.word	.LC10
 241              		.cfi_endproc
 242              	.LFE17:
 244              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 245              		.align	1
 246              		.syntax unified
 247              		.code	16
 248              		.thumb_func
ARM GAS  /tmp/ccUgdI1B.s 			page 22


 249              		.fpu softvfp
 251              	prvInitialiseNewTimer:
 252              	.LFB3:
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 253              		.loc 1 358 0
 254              		.cfi_startproc
 255              		@ args = 8, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              	.LVL27:
 258 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 259              	.LCFI3:
 260              		.cfi_def_cfa_offset 20
 261              		.cfi_offset 4, -20
 262              		.cfi_offset 5, -16
 263              		.cfi_offset 6, -12
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 0002 C646     		mov	lr, r8
 267 0004 00B5     		push	{lr}
 268              	.LCFI4:
 269              		.cfi_def_cfa_offset 24
 270              		.cfi_offset 8, -24
 271 0006 8046     		mov	r8, r0
 272 0008 0D00     		movs	r5, r1
 273 000a 1700     		movs	r7, r2
 274 000c 1E00     		movs	r6, r3
 275 000e 079C     		ldr	r4, [sp, #28]
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 276              		.loc 1 360 0
 277 0010 0029     		cmp	r1, #0
 278 0012 01D1     		bne	.L21
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 279              		.loc 1 360 0 is_stmt 0 discriminator 1
 280              		.syntax divided
 281              	@ 360 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 282 0014 72B6     		 cpsid i 
 283              	@ 0 "" 2
 284              		.thumb
 285              		.syntax unified
 286              	.L22:
 287 0016 FEE7     		b	.L22
 288              	.L21:
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 289              		.loc 1 362 0 is_stmt 1
 290 0018 002C     		cmp	r4, #0
 291 001a 0BD0     		beq	.L20
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292              		.loc 1 366 0
 293 001c FFF7FEFF 		bl	prvCheckForValidListAndQueue
 294              	.LVL28:
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 295              		.loc 1 370 0
 296 0020 4346     		mov	r3, r8
 297 0022 2360     		str	r3, [r4]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 298              		.loc 1 371 0
 299 0024 A561     		str	r5, [r4, #24]
ARM GAS  /tmp/ccUgdI1B.s 			page 23


 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 300              		.loc 1 372 0
 301 0026 E761     		str	r7, [r4, #28]
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 302              		.loc 1 373 0
 303 0028 2662     		str	r6, [r4, #32]
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 304              		.loc 1 374 0
 305 002a 069B     		ldr	r3, [sp, #24]
 306 002c 6362     		str	r3, [r4, #36]
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 307              		.loc 1 375 0
 308 002e 201D     		adds	r0, r4, #4
 309 0030 FFF7FEFF 		bl	vListInitialiseItem
 310              	.LVL29:
 311              	.L20:
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 312              		.loc 1 378 0
 313              		@ sp needed
 314              	.LVL30:
 315              	.LVL31:
 316              	.LVL32:
 317              	.LVL33:
 318 0034 04BC     		pop	{r2}
 319 0036 9046     		mov	r8, r2
 320 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
 321              		.cfi_endproc
 322              	.LFE3:
 324              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 325              		.align	1
 326              		.global	xTimerCreateTimerTask
 327              		.syntax unified
 328              		.code	16
 329              		.thumb_func
 330              		.fpu softvfp
 332              	xTimerCreateTimerTask:
 333              	.LFB0:
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 334              		.loc 1 224 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 16
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 00B5     		push	{lr}
 339              	.LCFI5:
 340              		.cfi_def_cfa_offset 4
 341              		.cfi_offset 14, -4
 342 0002 89B0     		sub	sp, sp, #36
 343              	.LCFI6:
 344              		.cfi_def_cfa_offset 40
 345              	.LVL34:
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346              		.loc 1 231 0
 347 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 348              	.LVL35:
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 349              		.loc 1 233 0
 350 0008 104B     		ldr	r3, .L29
ARM GAS  /tmp/ccUgdI1B.s 			page 24


 351 000a 1B68     		ldr	r3, [r3]
 352 000c 002B     		cmp	r3, #0
 353 000e 1AD0     		beq	.L25
 354              	.LBB3:
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 355              		.loc 1 237 0
 356 0010 0023     		movs	r3, #0
 357 0012 0593     		str	r3, [sp, #20]
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 358              		.loc 1 238 0
 359 0014 0693     		str	r3, [sp, #24]
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 360              		.loc 1 241 0
 361 0016 07AA     		add	r2, sp, #28
 362 0018 06A9     		add	r1, sp, #24
 363 001a 05A8     		add	r0, sp, #20
 364 001c FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 365              	.LVL36:
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 366              		.loc 1 242 0
 367 0020 059B     		ldr	r3, [sp, #20]
 368 0022 0293     		str	r3, [sp, #8]
 369 0024 069B     		ldr	r3, [sp, #24]
 370 0026 0193     		str	r3, [sp, #4]
 371 0028 0223     		movs	r3, #2
 372 002a 0093     		str	r3, [sp]
 373 002c 0023     		movs	r3, #0
 374 002e 079A     		ldr	r2, [sp, #28]
 375 0030 0749     		ldr	r1, .L29+4
 376 0032 0848     		ldr	r0, .L29+8
 377 0034 FFF7FEFF 		bl	xTaskCreateStatic
 378              	.LVL37:
 379 0038 074B     		ldr	r3, .L29+12
 380 003a 1860     		str	r0, [r3]
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 381              		.loc 1 250 0
 382 003c 0028     		cmp	r0, #0
 383 003e 02D0     		beq	.L25
 384              	.LBE3:
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 385              		.loc 1 273 0
 386 0040 0120     		movs	r0, #1
 387 0042 09B0     		add	sp, sp, #36
 388              		@ sp needed
 389 0044 00BD     		pop	{pc}
 390              	.L25:
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 391              		.loc 1 271 0 discriminator 1
 392              		.syntax divided
 393              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 394 0046 72B6     		 cpsid i 
 395              	@ 0 "" 2
 396              		.thumb
 397              		.syntax unified
 398              	.L27:
 399 0048 FEE7     		b	.L27
 400              	.L30:
ARM GAS  /tmp/ccUgdI1B.s 			page 25


 401 004a C046     		.align	2
 402              	.L29:
 403 004c 00000000 		.word	.LANCHOR2
 404 0050 00000000 		.word	.LC13
 405 0054 00000000 		.word	prvTimerTask
 406 0058 00000000 		.word	.LANCHOR6
 407              		.cfi_endproc
 408              	.LFE0:
 410              		.section	.text.xTimerCreate,"ax",%progbits
 411              		.align	1
 412              		.global	xTimerCreate
 413              		.syntax unified
 414              		.code	16
 415              		.thumb_func
 416              		.fpu softvfp
 418              	xTimerCreate:
 419              	.LFB1:
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 420              		.loc 1 283 0
 421              		.cfi_startproc
 422              		@ args = 4, pretend = 0, frame = 8
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              	.LVL38:
 425 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 426              	.LCFI7:
 427              		.cfi_def_cfa_offset 20
 428              		.cfi_offset 4, -20
 429              		.cfi_offset 5, -16
 430              		.cfi_offset 6, -12
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 85B0     		sub	sp, sp, #20
 434              	.LCFI8:
 435              		.cfi_def_cfa_offset 40
 436 0004 0390     		str	r0, [sp, #12]
 437 0006 0D00     		movs	r5, r1
 438 0008 1600     		movs	r6, r2
 439 000a 1F00     		movs	r7, r3
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 440              		.loc 1 286 0
 441 000c 3020     		movs	r0, #48
 442              	.LVL39:
 443 000e FFF7FEFF 		bl	pvPortMalloc
 444              	.LVL40:
 445 0012 041E     		subs	r4, r0, #0
 446              	.LVL41:
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 447              		.loc 1 288 0
 448 0014 0BD0     		beq	.L31
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 449              		.loc 1 290 0
 450 0016 0190     		str	r0, [sp, #4]
 451 0018 0A9B     		ldr	r3, [sp, #40]
 452 001a 0093     		str	r3, [sp]
 453 001c 3B00     		movs	r3, r7
 454 001e 3200     		movs	r2, r6
 455 0020 2900     		movs	r1, r5
ARM GAS  /tmp/ccUgdI1B.s 			page 26


 456 0022 0398     		ldr	r0, [sp, #12]
 457              	.LVL42:
 458 0024 FFF7FEFF 		bl	prvInitialiseNewTimer
 459              	.LVL43:
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 460              		.loc 1 297 0
 461 0028 2C23     		movs	r3, #44
 462 002a 0022     		movs	r2, #0
 463 002c E254     		strb	r2, [r4, r3]
 464              	.L31:
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 465              		.loc 1 303 0
 466 002e 2000     		movs	r0, r4
 467 0030 05B0     		add	sp, sp, #20
 468              		@ sp needed
 469              	.LVL44:
 470              	.LVL45:
 471              	.LVL46:
 472              	.LVL47:
 473 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 474              		.cfi_endproc
 475              	.LFE1:
 477              		.section	.text.xTimerCreateStatic,"ax",%progbits
 478              		.align	1
 479              		.global	xTimerCreateStatic
 480              		.syntax unified
 481              		.code	16
 482              		.thumb_func
 483              		.fpu softvfp
 485              	xTimerCreateStatic:
 486              	.LFB2:
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 487              		.loc 1 316 0
 488              		.cfi_startproc
 489              		@ args = 8, pretend = 0, frame = 8
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              	.LVL48:
 492 0000 30B5     		push	{r4, r5, lr}
 493              	.LCFI9:
 494              		.cfi_def_cfa_offset 12
 495              		.cfi_offset 4, -12
 496              		.cfi_offset 5, -8
 497              		.cfi_offset 14, -4
 498 0002 85B0     		sub	sp, sp, #20
 499              	.LCFI10:
 500              		.cfi_def_cfa_offset 32
 501 0004 099C     		ldr	r4, [sp, #36]
 502              	.LBB4:
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 503              		.loc 1 324 0
 504 0006 3025     		movs	r5, #48
 505 0008 0395     		str	r5, [sp, #12]
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 506              		.loc 1 325 0
 507 000a 039D     		ldr	r5, [sp, #12]
 508 000c 302D     		cmp	r5, #48
 509 000e 01D0     		beq	.L34
ARM GAS  /tmp/ccUgdI1B.s 			page 27


 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 510              		.loc 1 325 0 is_stmt 0 discriminator 1
 511              		.syntax divided
 512              	@ 325 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 513 0010 72B6     		 cpsid i 
 514              	@ 0 "" 2
 515              		.thumb
 516              		.syntax unified
 517              	.L35:
 518 0012 FEE7     		b	.L35
 519              	.L34:
 520              	.LBE4:
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 521              		.loc 1 330 0 is_stmt 1
 522 0014 002C     		cmp	r4, #0
 523 0016 01D1     		bne	.L36
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 524              		.loc 1 330 0 is_stmt 0 discriminator 1
 525              		.syntax divided
 526              	@ 330 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 527 0018 72B6     		 cpsid i 
 528              	@ 0 "" 2
 529              		.thumb
 530              		.syntax unified
 531              	.L37:
 532 001a FEE7     		b	.L37
 533              	.L36:
 534              	.LVL49:
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 535              		.loc 1 335 0 is_stmt 1
 536 001c 0194     		str	r4, [sp, #4]
 537 001e 089D     		ldr	r5, [sp, #32]
 538 0020 0095     		str	r5, [sp]
 539 0022 FFF7FEFF 		bl	prvInitialiseNewTimer
 540              	.LVL50:
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 541              		.loc 1 341 0
 542 0026 2C23     		movs	r3, #44
 543 0028 0122     		movs	r2, #1
 544 002a E254     		strb	r2, [r4, r3]
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 545              		.loc 1 347 0
 546 002c 2000     		movs	r0, r4
 547 002e 05B0     		add	sp, sp, #20
 548              		@ sp needed
 549              	.LVL51:
 550 0030 30BD     		pop	{r4, r5, pc}
 551              		.cfi_endproc
 552              	.LFE2:
 554              		.section	.text.xTimerGenericCommand,"ax",%progbits
 555              		.align	1
 556              		.global	xTimerGenericCommand
 557              		.syntax unified
 558              		.code	16
 559              		.thumb_func
 560              		.fpu softvfp
 562              	xTimerGenericCommand:
ARM GAS  /tmp/ccUgdI1B.s 			page 28


 563              	.LFB4:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 564              		.loc 1 382 0
 565              		.cfi_startproc
 566              		@ args = 4, pretend = 0, frame = 16
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              	.LVL52:
 569 0000 30B5     		push	{r4, r5, lr}
 570              	.LCFI11:
 571              		.cfi_def_cfa_offset 12
 572              		.cfi_offset 4, -12
 573              		.cfi_offset 5, -8
 574              		.cfi_offset 14, -4
 575 0002 85B0     		sub	sp, sp, #20
 576              	.LCFI12:
 577              		.cfi_def_cfa_offset 32
 578 0004 0400     		movs	r4, r0
 579 0006 1D00     		movs	r5, r3
 580              	.LVL53:
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 581              		.loc 1 386 0
 582 0008 0028     		cmp	r0, #0
 583 000a 15D0     		beq	.L45
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 584              		.loc 1 390 0
 585 000c 134B     		ldr	r3, .L47
 586              	.LVL54:
 587 000e 1868     		ldr	r0, [r3]
 588              	.LVL55:
 589 0010 0028     		cmp	r0, #0
 590 0012 21D0     		beq	.L44
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 591              		.loc 1 393 0
 592 0014 0091     		str	r1, [sp]
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 593              		.loc 1 394 0
 594 0016 0192     		str	r2, [sp, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 595              		.loc 1 395 0
 596 0018 0294     		str	r4, [sp, #8]
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 597              		.loc 1 397 0
 598 001a 0529     		cmp	r1, #5
 599 001c 16DC     		bgt	.L42
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 600              		.loc 1 399 0
 601 001e FFF7FEFF 		bl	xTaskGetSchedulerState
 602              	.LVL56:
 603 0022 0228     		cmp	r0, #2
 604 0024 0AD0     		beq	.L46
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 605              		.loc 1 405 0
 606 0026 0D4B     		ldr	r3, .L47
 607 0028 1868     		ldr	r0, [r3]
 608 002a 0023     		movs	r3, #0
 609 002c 0022     		movs	r2, #0
 610 002e 6946     		mov	r1, sp
ARM GAS  /tmp/ccUgdI1B.s 			page 29


 611 0030 FFF7FEFF 		bl	xQueueGenericSend
 612              	.LVL57:
 613              	.L38:
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 614              		.loc 1 421 0
 615 0034 05B0     		add	sp, sp, #20
 616              		@ sp needed
 617              	.LVL58:
 618              	.LVL59:
 619 0036 30BD     		pop	{r4, r5, pc}
 620              	.LVL60:
 621              	.L45:
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 622              		.loc 1 386 0 discriminator 1
 623              		.syntax divided
 624              	@ 386 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 625 0038 72B6     		 cpsid i 
 626              	@ 0 "" 2
 627              		.thumb
 628              		.syntax unified
 629              	.L40:
 630 003a FEE7     		b	.L40
 631              	.LVL61:
 632              	.L46:
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 633              		.loc 1 401 0
 634 003c 074B     		ldr	r3, .L47
 635 003e 1868     		ldr	r0, [r3]
 636 0040 0023     		movs	r3, #0
 637 0042 089A     		ldr	r2, [sp, #32]
 638 0044 6946     		mov	r1, sp
 639 0046 FFF7FEFF 		bl	xQueueGenericSend
 640              	.LVL62:
 641 004a F3E7     		b	.L38
 642              	.LVL63:
 643              	.L42:
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 644              		.loc 1 410 0
 645 004c 0023     		movs	r3, #0
 646 004e 2A00     		movs	r2, r5
 647              	.LVL64:
 648 0050 6946     		mov	r1, sp
 649              	.LVL65:
 650 0052 FFF7FEFF 		bl	xQueueGenericSendFromISR
 651              	.LVL66:
 652 0056 EDE7     		b	.L38
 653              	.LVL67:
 654              	.L44:
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 655              		.loc 1 383 0
 656 0058 0020     		movs	r0, #0
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 657              		.loc 1 420 0
 658 005a EBE7     		b	.L38
 659              	.L48:
 660              		.align	2
 661              	.L47:
ARM GAS  /tmp/ccUgdI1B.s 			page 30


 662 005c 00000000 		.word	.LANCHOR2
 663              		.cfi_endproc
 664              	.LFE4:
 666              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 667              		.align	1
 668              		.syntax unified
 669              		.code	16
 670              		.thumb_func
 671              		.fpu softvfp
 673              	prvSwitchTimerLists:
 674              	.LFB16:
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 675              		.loc 1 836 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679 0000 70B5     		push	{r4, r5, r6, lr}
 680              	.LCFI13:
 681              		.cfi_def_cfa_offset 16
 682              		.cfi_offset 4, -16
 683              		.cfi_offset 5, -12
 684              		.cfi_offset 6, -8
 685              		.cfi_offset 14, -4
 686 0002 82B0     		sub	sp, sp, #8
 687              	.LCFI14:
 688              		.cfi_def_cfa_offset 24
 689              	.L51:
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 690              		.loc 1 846 0
 691 0004 174B     		ldr	r3, .L57
 692 0006 1B68     		ldr	r3, [r3]
 693 0008 1A68     		ldr	r2, [r3]
 694 000a 002A     		cmp	r2, #0
 695 000c 23D0     		beq	.L56
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 696              		.loc 1 848 0
 697 000e DB68     		ldr	r3, [r3, #12]
 698 0010 1E68     		ldr	r6, [r3]
 699              	.LVL68:
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 700              		.loc 1 851 0
 701 0012 DC68     		ldr	r4, [r3, #12]
 702              	.LVL69:
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 703              		.loc 1 852 0
 704 0014 251D     		adds	r5, r4, #4
 705 0016 2800     		movs	r0, r5
 706 0018 FFF7FEFF 		bl	uxListRemove
 707              	.LVL70:
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 708              		.loc 1 858 0
 709 001c 2000     		movs	r0, r4
 710 001e 636A     		ldr	r3, [r4, #36]
 711 0020 9847     		blx	r3
 712              	.LVL71:
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 713              		.loc 1 860 0
ARM GAS  /tmp/ccUgdI1B.s 			page 31


 714 0022 E369     		ldr	r3, [r4, #28]
 715 0024 012B     		cmp	r3, #1
 716 0026 EDD1     		bne	.L51
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 717              		.loc 1 868 0
 718 0028 A369     		ldr	r3, [r4, #24]
 719 002a 9B19     		adds	r3, r3, r6
 720              	.LVL72:
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 721              		.loc 1 869 0
 722 002c 9E42     		cmp	r6, r3
 723 002e 07D2     		bcs	.L52
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 724              		.loc 1 871 0
 725 0030 6360     		str	r3, [r4, #4]
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 726              		.loc 1 872 0
 727 0032 2461     		str	r4, [r4, #16]
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 728              		.loc 1 873 0
 729 0034 0B4B     		ldr	r3, .L57
 730              	.LVL73:
 731 0036 1868     		ldr	r0, [r3]
 732 0038 2900     		movs	r1, r5
 733 003a FFF7FEFF 		bl	vListInsert
 734              	.LVL74:
 735 003e E1E7     		b	.L51
 736              	.LVL75:
 737              	.L52:
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 738              		.loc 1 877 0
 739 0040 0023     		movs	r3, #0
 740              	.LVL76:
 741 0042 0093     		str	r3, [sp]
 742              	.LVL77:
 743 0044 3200     		movs	r2, r6
 744 0046 0021     		movs	r1, #0
 745 0048 2000     		movs	r0, r4
 746 004a FFF7FEFF 		bl	xTimerGenericCommand
 747              	.LVL78:
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 748              		.loc 1 878 0
 749 004e 0028     		cmp	r0, #0
 750 0050 D8D1     		bne	.L51
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 751              		.loc 1 878 0 is_stmt 0 discriminator 1
 752              		.syntax divided
 753              	@ 878 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 754 0052 72B6     		 cpsid i 
 755              	@ 0 "" 2
 756              		.thumb
 757              		.syntax unified
 758              	.L54:
 759 0054 FEE7     		b	.L54
 760              	.LVL79:
 761              	.L56:
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
ARM GAS  /tmp/ccUgdI1B.s 			page 32


 762              		.loc 1 889 0 is_stmt 1
 763 0056 044A     		ldr	r2, .L57+4
 764 0058 0249     		ldr	r1, .L57
 765 005a 1068     		ldr	r0, [r2]
 766 005c 0860     		str	r0, [r1]
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 767              		.loc 1 890 0
 768 005e 1360     		str	r3, [r2]
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 769              		.loc 1 891 0
 770 0060 02B0     		add	sp, sp, #8
 771              		@ sp needed
 772 0062 70BD     		pop	{r4, r5, r6, pc}
 773              	.L58:
 774              		.align	2
 775              	.L57:
 776 0064 00000000 		.word	.LANCHOR0
 777 0068 00000000 		.word	.LANCHOR1
 778              		.cfi_endproc
 779              	.LFE16:
 781              		.section	.text.prvSampleTimeNow,"ax",%progbits
 782              		.align	1
 783              		.syntax unified
 784              		.code	16
 785              		.thumb_func
 786              		.fpu softvfp
 788              	prvSampleTimeNow:
 789              	.LFB13:
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 790              		.loc 1 625 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              	.LVL80:
 795 0000 70B5     		push	{r4, r5, r6, lr}
 796              	.LCFI15:
 797              		.cfi_def_cfa_offset 16
 798              		.cfi_offset 4, -16
 799              		.cfi_offset 5, -12
 800              		.cfi_offset 6, -8
 801              		.cfi_offset 14, -4
 802 0002 0500     		movs	r5, r0
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 803              		.loc 1 629 0
 804 0004 FFF7FEFF 		bl	xTaskGetTickCount
 805              	.LVL81:
 806 0008 0400     		movs	r4, r0
 807              	.LVL82:
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 808              		.loc 1 631 0
 809 000a 074B     		ldr	r3, .L63
 810 000c 1B68     		ldr	r3, [r3]
 811 000e 8342     		cmp	r3, r0
 812 0010 05D8     		bhi	.L62
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 813              		.loc 1 638 0
 814 0012 0023     		movs	r3, #0
ARM GAS  /tmp/ccUgdI1B.s 			page 33


 815 0014 2B60     		str	r3, [r5]
 816              	.LVL83:
 817              	.L61:
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 818              		.loc 1 641 0
 819 0016 044B     		ldr	r3, .L63
 820 0018 1C60     		str	r4, [r3]
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 821              		.loc 1 644 0
 822 001a 2000     		movs	r0, r4
 823              		@ sp needed
 824              	.LVL84:
 825              	.LVL85:
 826 001c 70BD     		pop	{r4, r5, r6, pc}
 827              	.LVL86:
 828              	.L62:
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 829              		.loc 1 633 0
 830 001e FFF7FEFF 		bl	prvSwitchTimerLists
 831              	.LVL87:
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 832              		.loc 1 634 0
 833 0022 0123     		movs	r3, #1
 834 0024 2B60     		str	r3, [r5]
 835 0026 F6E7     		b	.L61
 836              	.L64:
 837              		.align	2
 838              	.L63:
 839 0028 00000000 		.word	.LANCHOR7
 840              		.cfi_endproc
 841              	.LFE13:
 843              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 844              		.align	1
 845              		.syntax unified
 846              		.code	16
 847              		.thumb_func
 848              		.fpu softvfp
 850              	prvProcessExpiredTimer:
 851              	.LFB9:
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 852              		.loc 1 463 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              	.LVL88:
 857 0000 70B5     		push	{r4, r5, r6, lr}
 858              	.LCFI16:
 859              		.cfi_def_cfa_offset 16
 860              		.cfi_offset 4, -16
 861              		.cfi_offset 5, -12
 862              		.cfi_offset 6, -8
 863              		.cfi_offset 14, -4
 864 0002 82B0     		sub	sp, sp, #8
 865              	.LCFI17:
 866              		.cfi_def_cfa_offset 24
 867 0004 0500     		movs	r5, r0
 868 0006 0E00     		movs	r6, r1
ARM GAS  /tmp/ccUgdI1B.s 			page 34


 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 869              		.loc 1 465 0
 870 0008 114B     		ldr	r3, .L69
 871 000a 1B68     		ldr	r3, [r3]
 872 000c DB68     		ldr	r3, [r3, #12]
 873 000e DC68     		ldr	r4, [r3, #12]
 874              	.LVL89:
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 875              		.loc 1 469 0
 876 0010 201D     		adds	r0, r4, #4
 877              	.LVL90:
 878 0012 FFF7FEFF 		bl	uxListRemove
 879              	.LVL91:
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 880              		.loc 1 474 0
 881 0016 E369     		ldr	r3, [r4, #28]
 882 0018 012B     		cmp	r3, #1
 883 001a 04D0     		beq	.L68
 884              	.L66:
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 885              		.loc 1 498 0
 886 001c 636A     		ldr	r3, [r4, #36]
 887 001e 2000     		movs	r0, r4
 888 0020 9847     		blx	r3
 889              	.LVL92:
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 890              		.loc 1 499 0
 891 0022 02B0     		add	sp, sp, #8
 892              		@ sp needed
 893              	.LVL93:
 894              	.LVL94:
 895              	.LVL95:
 896 0024 70BD     		pop	{r4, r5, r6, pc}
 897              	.LVL96:
 898              	.L68:
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 899              		.loc 1 479 0
 900 0026 A369     		ldr	r3, [r4, #24]
 901 0028 5919     		adds	r1, r3, r5
 902 002a 2B00     		movs	r3, r5
 903 002c 3200     		movs	r2, r6
 904 002e 2000     		movs	r0, r4
 905 0030 FFF7FEFF 		bl	prvInsertTimerInActiveList
 906              	.LVL97:
 907 0034 0028     		cmp	r0, #0
 908 0036 F1D0     		beq	.L66
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 909              		.loc 1 483 0
 910 0038 0023     		movs	r3, #0
 911 003a 0093     		str	r3, [sp]
 912 003c 2A00     		movs	r2, r5
 913 003e 0021     		movs	r1, #0
 914 0040 2000     		movs	r0, r4
 915 0042 FFF7FEFF 		bl	xTimerGenericCommand
 916              	.LVL98:
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 917              		.loc 1 484 0
ARM GAS  /tmp/ccUgdI1B.s 			page 35


 918 0046 0028     		cmp	r0, #0
 919 0048 E8D1     		bne	.L66
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 920              		.loc 1 484 0 is_stmt 0 discriminator 1
 921              		.syntax divided
 922              	@ 484 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 923 004a 72B6     		 cpsid i 
 924              	@ 0 "" 2
 925              		.thumb
 926              		.syntax unified
 927              	.L67:
 928 004c FEE7     		b	.L67
 929              	.L70:
 930 004e C046     		.align	2
 931              	.L69:
 932 0050 00000000 		.word	.LANCHOR0
 933              		.cfi_endproc
 934              	.LFE9:
 936              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 937              		.align	1
 938              		.syntax unified
 939              		.code	16
 940              		.thumb_func
 941              		.fpu softvfp
 943              	prvProcessTimerOrBlockTask:
 944              	.LFB11:
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 945              		.loc 1 539 0 is_stmt 1
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 8
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              	.LVL99:
 950 0000 70B5     		push	{r4, r5, r6, lr}
 951              	.LCFI18:
 952              		.cfi_def_cfa_offset 16
 953              		.cfi_offset 4, -16
 954              		.cfi_offset 5, -12
 955              		.cfi_offset 6, -8
 956              		.cfi_offset 14, -4
 957 0002 82B0     		sub	sp, sp, #8
 958              	.LCFI19:
 959              		.cfi_def_cfa_offset 24
 960 0004 0500     		movs	r5, r0
 961 0006 0C00     		movs	r4, r1
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 962              		.loc 1 543 0
 963 0008 FFF7FEFF 		bl	vTaskSuspendAll
 964              	.LVL100:
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 965              		.loc 1 550 0
 966 000c 01A8     		add	r0, sp, #4
 967 000e FFF7FEFF 		bl	prvSampleTimeNow
 968              	.LVL101:
 969 0012 0600     		movs	r6, r0
 970              	.LVL102:
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 971              		.loc 1 551 0
ARM GAS  /tmp/ccUgdI1B.s 			page 36


 972 0014 019B     		ldr	r3, [sp, #4]
 973 0016 002B     		cmp	r3, #0
 974 0018 21D1     		bne	.L72
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 975              		.loc 1 554 0
 976 001a 002C     		cmp	r4, #0
 977 001c 01D1     		bne	.L73
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 978              		.loc 1 554 0 is_stmt 0 discriminator 1
 979 001e A842     		cmp	r0, r5
 980 0020 13D2     		bcs	.L76
 981              	.L73:
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 982              		.loc 1 567 0 is_stmt 1
 983 0022 002C     		cmp	r4, #0
 984 0024 05D0     		beq	.L75
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 985              		.loc 1 571 0
 986 0026 0F4B     		ldr	r3, .L78
 987 0028 1B68     		ldr	r3, [r3]
 988 002a 1C68     		ldr	r4, [r3]
 989              	.LVL103:
 990 002c 6342     		rsbs	r3, r4, #0
 991 002e 5C41     		adcs	r4, r4, r3
 992 0030 E4B2     		uxtb	r4, r4
 993              	.LVL104:
 994              	.L75:
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 995              		.loc 1 574 0
 996 0032 A91B     		subs	r1, r5, r6
 997 0034 0C4B     		ldr	r3, .L78+4
 998 0036 1868     		ldr	r0, [r3]
 999              	.LVL105:
 1000 0038 2200     		movs	r2, r4
 1001 003a FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 1002              	.LVL106:
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1003              		.loc 1 576 0
 1004 003e FFF7FEFF 		bl	xTaskResumeAll
 1005              	.LVL107:
 1006 0042 0028     		cmp	r0, #0
 1007 0044 08D0     		beq	.L77
 1008              	.L71:
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1009              		.loc 1 595 0
 1010 0046 02B0     		add	sp, sp, #8
 1011              		@ sp needed
 1012              	.LVL108:
 1013              	.LVL109:
 1014              	.LVL110:
 1015 0048 70BD     		pop	{r4, r5, r6, pc}
 1016              	.LVL111:
 1017              	.L76:
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1018              		.loc 1 556 0
 1019 004a FFF7FEFF 		bl	xTaskResumeAll
 1020              	.LVL112:
ARM GAS  /tmp/ccUgdI1B.s 			page 37


 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1021              		.loc 1 557 0
 1022 004e 3100     		movs	r1, r6
 1023 0050 2800     		movs	r0, r5
 1024 0052 FFF7FEFF 		bl	prvProcessExpiredTimer
 1025              	.LVL113:
 1026 0056 F6E7     		b	.L71
 1027              	.L77:
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1028              		.loc 1 582 0
 1029 0058 FFF7FEFF 		bl	vPortYield
 1030              	.LVL114:
 1031 005c F3E7     		b	.L71
 1032              	.LVL115:
 1033              	.L72:
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1034              		.loc 1 592 0
 1035 005e FFF7FEFF 		bl	xTaskResumeAll
 1036              	.LVL116:
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1037              		.loc 1 595 0
 1038 0062 F0E7     		b	.L71
 1039              	.L79:
 1040              		.align	2
 1041              	.L78:
 1042 0064 00000000 		.word	.LANCHOR1
 1043 0068 00000000 		.word	.LANCHOR2
 1044              		.cfi_endproc
 1045              	.LFE11:
 1047              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1048              		.align	1
 1049              		.syntax unified
 1050              		.code	16
 1051              		.thumb_func
 1052              		.fpu softvfp
 1054              	prvProcessReceivedCommands:
 1055              	.LFB15:
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 1056              		.loc 1 689 0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 24
 1059              		@ frame_needed = 0, uses_anonymous_args = 0
 1060 0000 10B5     		push	{r4, lr}
 1061              	.LCFI20:
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 4, -8
 1064              		.cfi_offset 14, -4
 1065 0002 88B0     		sub	sp, sp, #32
 1066              	.LCFI21:
 1067              		.cfi_def_cfa_offset 40
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1068              		.loc 1 695 0
 1069 0004 02E0     		b	.L83
 1070              	.L82:
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1071              		.loc 1 721 0
 1072 0006 049B     		ldr	r3, [sp, #16]
ARM GAS  /tmp/ccUgdI1B.s 			page 38


 1073 0008 002B     		cmp	r3, #0
 1074 000a 0FDA     		bge	.L94
 1075              	.L83:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1076              		.loc 1 695 0
 1077 000c 2C4B     		ldr	r3, .L97
 1078 000e 1868     		ldr	r0, [r3]
 1079 0010 0022     		movs	r2, #0
 1080 0012 04A9     		add	r1, sp, #16
 1081 0014 FFF7FEFF 		bl	xQueueReceive
 1082              	.LVL117:
 1083 0018 0028     		cmp	r0, #0
 1084 001a 4ED0     		beq	.L95
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1085              		.loc 1 701 0
 1086 001c 049B     		ldr	r3, [sp, #16]
 1087 001e 002B     		cmp	r3, #0
 1088 0020 F1DA     		bge	.L82
 1089              	.LVL118:
 1090              	.LBB5:
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1091              		.loc 1 710 0
 1092 0022 059B     		ldr	r3, [sp, #20]
 1093 0024 0799     		ldr	r1, [sp, #28]
 1094 0026 0698     		ldr	r0, [sp, #24]
 1095 0028 9847     		blx	r3
 1096              	.LVL119:
 1097              	.LBE5:
 1098 002a ECE7     		b	.L82
 1099              	.LVL120:
 1100              	.L94:
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1101              		.loc 1 725 0
 1102 002c 069C     		ldr	r4, [sp, #24]
 1103              	.LVL121:
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1104              		.loc 1 727 0
 1105 002e 6369     		ldr	r3, [r4, #20]
 1106 0030 002B     		cmp	r3, #0
 1107 0032 02D0     		beq	.L84
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1108              		.loc 1 730 0
 1109 0034 201D     		adds	r0, r4, #4
 1110 0036 FFF7FEFF 		bl	uxListRemove
 1111              	.LVL122:
 1112              	.L84:
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1113              		.loc 1 745 0
 1114 003a 03A8     		add	r0, sp, #12
 1115 003c FFF7FEFF 		bl	prvSampleTimeNow
 1116              	.LVL123:
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1117              		.loc 1 747 0
 1118 0040 049B     		ldr	r3, [sp, #16]
 1119 0042 092B     		cmp	r3, #9
 1120 0044 E2D8     		bhi	.L83
 1121 0046 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccUgdI1B.s 			page 39


 1122 0048 1E49     		ldr	r1, .L97+4
 1123 004a CB58     		ldr	r3, [r1, r3]
 1124 004c 9F46     		mov	pc, r3
 1125              		.section	.rodata.prvProcessReceivedCommands,"a",%progbits
 1126              		.align	2
 1127              	.L87:
 1128 0000 4E000000 		.word	.L86
 1129 0004 4E000000 		.word	.L86
 1130 0008 4E000000 		.word	.L86
 1131 000c 0C000000 		.word	.L83
 1132 0010 90000000 		.word	.L88
 1133 0014 AA000000 		.word	.L89
 1134 0018 4E000000 		.word	.L86
 1135 001c 4E000000 		.word	.L86
 1136 0020 0C000000 		.word	.L83
 1137 0024 90000000 		.word	.L88
 1138              		.section	.text.prvProcessReceivedCommands
 1139              	.L86:
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1140              		.loc 1 755 0
 1141 004e 059B     		ldr	r3, [sp, #20]
 1142 0050 A269     		ldr	r2, [r4, #24]
 1143 0052 9446     		mov	ip, r2
 1144 0054 6344     		add	r3, r3, ip
 1145 0056 1900     		movs	r1, r3
 1146 0058 059B     		ldr	r3, [sp, #20]
 1147 005a 0200     		movs	r2, r0
 1148 005c 2000     		movs	r0, r4
 1149              	.LVL124:
 1150 005e FFF7FEFF 		bl	prvInsertTimerInActiveList
 1151              	.LVL125:
 1152 0062 0028     		cmp	r0, #0
 1153 0064 D2D0     		beq	.L83
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1154              		.loc 1 759 0
 1155 0066 2000     		movs	r0, r4
 1156 0068 636A     		ldr	r3, [r4, #36]
 1157 006a 9847     		blx	r3
 1158              	.LVL126:
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1159              		.loc 1 762 0
 1160 006c E369     		ldr	r3, [r4, #28]
 1161 006e 012B     		cmp	r3, #1
 1162 0070 CCD1     		bne	.L83
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1163              		.loc 1 764 0
 1164 0072 059B     		ldr	r3, [sp, #20]
 1165 0074 A169     		ldr	r1, [r4, #24]
 1166 0076 8C46     		mov	ip, r1
 1167 0078 6344     		add	r3, r3, ip
 1168 007a 1A00     		movs	r2, r3
 1169 007c 0023     		movs	r3, #0
 1170 007e 0093     		str	r3, [sp]
 1171 0080 0021     		movs	r1, #0
 1172 0082 2000     		movs	r0, r4
 1173 0084 FFF7FEFF 		bl	xTimerGenericCommand
 1174              	.LVL127:
ARM GAS  /tmp/ccUgdI1B.s 			page 40


 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1175              		.loc 1 765 0
 1176 0088 0028     		cmp	r0, #0
 1177 008a BFD1     		bne	.L83
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1178              		.loc 1 765 0 is_stmt 0 discriminator 1
 1179              		.syntax divided
 1180              	@ 765 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1181 008c 72B6     		 cpsid i 
 1182              	@ 0 "" 2
 1183              		.thumb
 1184              		.syntax unified
 1185              	.L90:
 1186 008e FEE7     		b	.L90
 1187              	.LVL128:
 1188              	.L88:
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1189              		.loc 1 787 0 is_stmt 1
 1190 0090 0599     		ldr	r1, [sp, #20]
 1191 0092 A161     		str	r1, [r4, #24]
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1192              		.loc 1 788 0
 1193 0094 0029     		cmp	r1, #0
 1194 0096 06D0     		beq	.L96
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1195              		.loc 1 796 0
 1196 0098 0918     		adds	r1, r1, r0
 1197 009a 0300     		movs	r3, r0
 1198 009c 0200     		movs	r2, r0
 1199 009e 2000     		movs	r0, r4
 1200              	.LVL129:
 1201 00a0 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1202              	.LVL130:
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1203              		.loc 1 797 0
 1204 00a4 B2E7     		b	.L83
 1205              	.LVL131:
 1206              	.L96:
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1207              		.loc 1 788 0 discriminator 1
 1208              		.syntax divided
 1209              	@ 788 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1210 00a6 72B6     		 cpsid i 
 1211              	@ 0 "" 2
 1212              		.thumb
 1213              		.syntax unified
 1214              	.L92:
 1215 00a8 FEE7     		b	.L92
 1216              	.L89:
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1217              		.loc 1 814 0
 1218 00aa 2C23     		movs	r3, #44
 1219 00ac E35C     		ldrb	r3, [r4, r3]
 1220 00ae 002B     		cmp	r3, #0
 1221 00b0 ACD1     		bne	.L83
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1222              		.loc 1 816 0
ARM GAS  /tmp/ccUgdI1B.s 			page 41


 1223 00b2 2000     		movs	r0, r4
 1224              	.LVL132:
 1225 00b4 FFF7FEFF 		bl	vPortFree
 1226              	.LVL133:
 1227 00b8 A8E7     		b	.L83
 1228              	.LVL134:
 1229              	.L95:
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1230              		.loc 1 832 0
 1231 00ba 08B0     		add	sp, sp, #32
 1232              		@ sp needed
 1233 00bc 10BD     		pop	{r4, pc}
 1234              	.L98:
 1235 00be C046     		.align	2
 1236              	.L97:
 1237 00c0 00000000 		.word	.LANCHOR2
 1238 00c4 00000000 		.word	.L87
 1239              		.cfi_endproc
 1240              	.LFE15:
 1242              		.section	.text.prvTimerTask,"ax",%progbits
 1243              		.align	1
 1244              		.syntax unified
 1245              		.code	16
 1246              		.thumb_func
 1247              		.fpu softvfp
 1249              	prvTimerTask:
 1250              	.LFB10:
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1251              		.loc 1 503 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 8
 1254              		@ frame_needed = 0, uses_anonymous_args = 0
 1255              	.LVL135:
 1256 0000 00B5     		push	{lr}
 1257              	.LCFI22:
 1258              		.cfi_def_cfa_offset 4
 1259              		.cfi_offset 14, -4
 1260 0002 83B0     		sub	sp, sp, #12
 1261              	.LCFI23:
 1262              		.cfi_def_cfa_offset 16
 1263              	.LVL136:
 1264              	.L100:
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1265              		.loc 1 526 0 discriminator 1
 1266 0004 01A8     		add	r0, sp, #4
 1267 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1268              	.LVL137:
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1269              		.loc 1 530 0 discriminator 1
 1270 000a 0199     		ldr	r1, [sp, #4]
 1271 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1272              	.LVL138:
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1273              		.loc 1 533 0 discriminator 1
 1274 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1275              	.LVL139:
 1276 0014 F6E7     		b	.L100
ARM GAS  /tmp/ccUgdI1B.s 			page 42


 1277              		.cfi_endproc
 1278              	.LFE10:
 1280              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1281              		.align	1
 1282              		.global	xTimerGetTimerDaemonTaskHandle
 1283              		.syntax unified
 1284              		.code	16
 1285              		.thumb_func
 1286              		.fpu softvfp
 1288              	xTimerGetTimerDaemonTaskHandle:
 1289              	.LFB5:
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1290              		.loc 1 425 0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 0
 1293              		@ frame_needed = 0, uses_anonymous_args = 0
 1294              		@ link register save eliminated.
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1295              		.loc 1 428 0
 1296 0000 034B     		ldr	r3, .L105
 1297 0002 1868     		ldr	r0, [r3]
 1298 0004 0028     		cmp	r0, #0
 1299 0006 00D0     		beq	.L104
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1300              		.loc 1 430 0
 1301              		@ sp needed
 1302 0008 7047     		bx	lr
 1303              	.L104:
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1304              		.loc 1 428 0 discriminator 1
 1305              		.syntax divided
 1306              	@ 428 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1307 000a 72B6     		 cpsid i 
 1308              	@ 0 "" 2
 1309              		.thumb
 1310              		.syntax unified
 1311              	.L103:
 1312 000c FEE7     		b	.L103
 1313              	.L106:
 1314 000e C046     		.align	2
 1315              	.L105:
 1316 0010 00000000 		.word	.LANCHOR6
 1317              		.cfi_endproc
 1318              	.LFE5:
 1320              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1321              		.align	1
 1322              		.global	xTimerGetPeriod
 1323              		.syntax unified
 1324              		.code	16
 1325              		.thumb_func
 1326              		.fpu softvfp
 1328              	xTimerGetPeriod:
 1329              	.LFB6:
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1330              		.loc 1 434 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccUgdI1B.s 			page 43


 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 1335              	.LVL140:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1336              		.loc 1 437 0
 1337 0000 0028     		cmp	r0, #0
 1338 0002 01D0     		beq	.L110
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1339              		.loc 1 438 0
 1340 0004 8069     		ldr	r0, [r0, #24]
 1341              	.LVL141:
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1342              		.loc 1 439 0
 1343              		@ sp needed
 1344 0006 7047     		bx	lr
 1345              	.LVL142:
 1346              	.L110:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1347              		.loc 1 437 0 discriminator 1
 1348              		.syntax divided
 1349              	@ 437 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1350 0008 72B6     		 cpsid i 
 1351              	@ 0 "" 2
 1352              		.thumb
 1353              		.syntax unified
 1354              	.L109:
 1355 000a FEE7     		b	.L109
 1356              		.cfi_endproc
 1357              	.LFE6:
 1359              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1360              		.align	1
 1361              		.global	xTimerGetExpiryTime
 1362              		.syntax unified
 1363              		.code	16
 1364              		.thumb_func
 1365              		.fpu softvfp
 1367              	xTimerGetExpiryTime:
 1368              	.LFB7:
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 1369              		.loc 1 443 0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 0
 1372              		@ frame_needed = 0, uses_anonymous_args = 0
 1373              		@ link register save eliminated.
 1374              	.LVL143:
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1375              		.loc 1 447 0
 1376 0000 0028     		cmp	r0, #0
 1377 0002 01D0     		beq	.L114
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 1378              		.loc 1 448 0
 1379 0004 4068     		ldr	r0, [r0, #4]
 1380              	.LVL144:
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1381              		.loc 1 450 0
 1382              		@ sp needed
 1383 0006 7047     		bx	lr
ARM GAS  /tmp/ccUgdI1B.s 			page 44


 1384              	.LVL145:
 1385              	.L114:
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1386              		.loc 1 447 0 discriminator 1
 1387              		.syntax divided
 1388              	@ 447 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1389 0008 72B6     		 cpsid i 
 1390              	@ 0 "" 2
 1391              		.thumb
 1392              		.syntax unified
 1393              	.L113:
 1394 000a FEE7     		b	.L113
 1395              		.cfi_endproc
 1396              	.LFE7:
 1398              		.section	.text.pcTimerGetName,"ax",%progbits
 1399              		.align	1
 1400              		.global	pcTimerGetName
 1401              		.syntax unified
 1402              		.code	16
 1403              		.thumb_func
 1404              		.fpu softvfp
 1406              	pcTimerGetName:
 1407              	.LFB8:
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1408              		.loc 1 454 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              		@ link register save eliminated.
 1413              	.LVL146:
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1414              		.loc 1 457 0
 1415 0000 0028     		cmp	r0, #0
 1416 0002 01D0     		beq	.L118
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1417              		.loc 1 458 0
 1418 0004 0068     		ldr	r0, [r0]
 1419              	.LVL147:
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1420              		.loc 1 459 0
 1421              		@ sp needed
 1422 0006 7047     		bx	lr
 1423              	.LVL148:
 1424              	.L118:
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1425              		.loc 1 457 0 discriminator 1
 1426              		.syntax divided
 1427              	@ 457 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1428 0008 72B6     		 cpsid i 
 1429              	@ 0 "" 2
 1430              		.thumb
 1431              		.syntax unified
 1432              	.L117:
 1433 000a FEE7     		b	.L117
 1434              		.cfi_endproc
 1435              	.LFE8:
 1437              		.section	.text.xTimerIsTimerActive,"ax",%progbits
ARM GAS  /tmp/ccUgdI1B.s 			page 45


 1438              		.align	1
 1439              		.global	xTimerIsTimerActive
 1440              		.syntax unified
 1441              		.code	16
 1442              		.thumb_func
 1443              		.fpu softvfp
 1445              	xTimerIsTimerActive:
 1446              	.LFB18:
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1447              		.loc 1 946 0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 0
 1450              		@ frame_needed = 0, uses_anonymous_args = 0
 1451              	.LVL149:
 1452 0000 10B5     		push	{r4, lr}
 1453              	.LCFI24:
 1454              		.cfi_def_cfa_offset 8
 1455              		.cfi_offset 4, -8
 1456              		.cfi_offset 14, -4
 1457 0002 041E     		subs	r4, r0, #0
 1458              	.LVL150:
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1459              		.loc 1 950 0
 1460 0004 01D1     		bne	.L120
 1461              		.loc 1 950 0 is_stmt 0 discriminator 1
 1462              		.syntax divided
 1463              	@ 950 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1464 0006 72B6     		 cpsid i 
 1465              	@ 0 "" 2
 1466              		.thumb
 1467              		.syntax unified
 1468              	.L121:
 1469 0008 FEE7     		b	.L121
 1470              	.L120:
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1471              		.loc 1 953 0 is_stmt 1
 1472 000a FFF7FEFF 		bl	vPortEnterCritical
 1473              	.LVL151:
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Checking to see if it is in the NULL list in effect checks to see if
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is referenced from either the current or the overflow timer lists in
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		one go, but the logic has to be reversed, hence the '!'. */
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimerIsInActiveList = ( BaseType_t ) !( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListIte
 1474              		.loc 1 958 0
 1475 000e 6469     		ldr	r4, [r4, #20]
 1476              	.LVL152:
 1477 0010 631E     		subs	r3, r4, #1
 1478 0012 9C41     		sbcs	r4, r4, r3
 1479 0014 E4B2     		uxtb	r4, r4
ARM GAS  /tmp/ccUgdI1B.s 			page 46


 1480              	.LVL153:
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1481              		.loc 1 960 0
 1482 0016 FFF7FEFF 		bl	vPortExitCritical
 1483              	.LVL154:
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerIsInActiveList;
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1484              		.loc 1 963 0
 1485 001a 2000     		movs	r0, r4
 1486              		@ sp needed
 1487              	.LVL155:
 1488 001c 10BD     		pop	{r4, pc}
 1489              		.cfi_endproc
 1490              	.LFE18:
 1492              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1493              		.align	1
 1494              		.global	pvTimerGetTimerID
 1495              		.syntax unified
 1496              		.code	16
 1497              		.thumb_func
 1498              		.fpu softvfp
 1500              	pvTimerGetTimerID:
 1501              	.LFB19:
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1502              		.loc 1 967 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 1506              	.LVL156:
 1507 0000 10B5     		push	{r4, lr}
 1508              	.LCFI25:
 1509              		.cfi_def_cfa_offset 8
 1510              		.cfi_offset 4, -8
 1511              		.cfi_offset 14, -4
 1512 0002 041E     		subs	r4, r0, #0
 1513              	.LVL157:
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1514              		.loc 1 971 0
 1515 0004 01D1     		bne	.L123
 1516              		.loc 1 971 0 is_stmt 0 discriminator 1
 1517              		.syntax divided
 1518              	@ 971 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1519 0006 72B6     		 cpsid i 
 1520              	@ 0 "" 2
 1521              		.thumb
 1522              		.syntax unified
 1523              	.L124:
 1524 0008 FEE7     		b	.L124
 1525              	.L123:
ARM GAS  /tmp/ccUgdI1B.s 			page 47


 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1526              		.loc 1 973 0 is_stmt 1
 1527 000a FFF7FEFF 		bl	vPortEnterCritical
 1528              	.LVL158:
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1529              		.loc 1 975 0
 1530 000e 246A     		ldr	r4, [r4, #32]
 1531              	.LVL159:
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1532              		.loc 1 977 0
 1533 0010 FFF7FEFF 		bl	vPortExitCritical
 1534              	.LVL160:
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1535              		.loc 1 980 0
 1536 0014 2000     		movs	r0, r4
 1537              		@ sp needed
 1538              	.LVL161:
 1539 0016 10BD     		pop	{r4, pc}
 1540              		.cfi_endproc
 1541              	.LFE19:
 1543              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1544              		.align	1
 1545              		.global	vTimerSetTimerID
 1546              		.syntax unified
 1547              		.code	16
 1548              		.thumb_func
 1549              		.fpu softvfp
 1551              	vTimerSetTimerID:
 1552              	.LFB20:
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1553              		.loc 1 984 0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 1557              	.LVL162:
 1558 0000 70B5     		push	{r4, r5, r6, lr}
 1559              	.LCFI26:
 1560              		.cfi_def_cfa_offset 16
 1561              		.cfi_offset 4, -16
 1562              		.cfi_offset 5, -12
 1563              		.cfi_offset 6, -8
 1564              		.cfi_offset 14, -4
 1565 0002 0400     		movs	r4, r0
 1566 0004 0D00     		movs	r5, r1
 1567              	.LVL163:
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1568              		.loc 1 987 0
ARM GAS  /tmp/ccUgdI1B.s 			page 48


 1569 0006 0028     		cmp	r0, #0
 1570 0008 01D1     		bne	.L126
 1571              		.loc 1 987 0 is_stmt 0 discriminator 1
 1572              		.syntax divided
 1573              	@ 987 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1574 000a 72B6     		 cpsid i 
 1575              	@ 0 "" 2
 1576              		.thumb
 1577              		.syntax unified
 1578              	.L127:
 1579 000c FEE7     		b	.L127
 1580              	.L126:
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1581              		.loc 1 989 0 is_stmt 1
 1582 000e FFF7FEFF 		bl	vPortEnterCritical
 1583              	.LVL164:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1584              		.loc 1 991 0
 1585 0012 2562     		str	r5, [r4, #32]
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1586              		.loc 1 993 0
 1587 0014 FFF7FEFF 		bl	vPortExitCritical
 1588              	.LVL165:
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1589              		.loc 1 994 0
 1590              		@ sp needed
 1591              	.LVL166:
 1592              	.LVL167:
 1593 0018 70BD     		pop	{r4, r5, r6, pc}
 1594              		.cfi_endproc
 1595              	.LFE20:
 1597              		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
 1598              		.align	1
 1599              		.global	xTimerPendFunctionCallFromISR
 1600              		.syntax unified
 1601              		.code	16
 1602              		.thumb_func
 1603              		.fpu softvfp
 1605              	xTimerPendFunctionCallFromISR:
 1606              	.LFB21:
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1607              		.loc 1 1000 0
 1608              		.cfi_startproc
 1609              		@ args = 0, pretend = 0, frame = 16
 1610              		@ frame_needed = 0, uses_anonymous_args = 0
 1611              	.LVL168:
 1612 0000 10B5     		push	{r4, lr}
 1613              	.LCFI27:
 1614              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccUgdI1B.s 			page 49


 1615              		.cfi_offset 4, -8
 1616              		.cfi_offset 14, -4
 1617 0002 84B0     		sub	sp, sp, #16
 1618              	.LCFI28:
 1619              		.cfi_def_cfa_offset 24
 1620 0004 1C00     		movs	r4, r3
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 1621              		.loc 1 1006 0
 1622 0006 0223     		movs	r3, #2
 1623              	.LVL169:
 1624 0008 5B42     		rsbs	r3, r3, #0
 1625 000a 0093     		str	r3, [sp]
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1626              		.loc 1 1007 0
 1627 000c 0190     		str	r0, [sp, #4]
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1628              		.loc 1 1008 0
 1629 000e 0291     		str	r1, [sp, #8]
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1630              		.loc 1 1009 0
 1631 0010 0392     		str	r2, [sp, #12]
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 1632              		.loc 1 1011 0
 1633 0012 044B     		ldr	r3, .L129
 1634 0014 1868     		ldr	r0, [r3]
 1635              	.LVL170:
 1636 0016 0023     		movs	r3, #0
 1637 0018 2200     		movs	r2, r4
 1638              	.LVL171:
 1639 001a 6946     		mov	r1, sp
 1640              	.LVL172:
 1641 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 1642              	.LVL173:
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1643              		.loc 1 1016 0
 1644 0020 04B0     		add	sp, sp, #16
 1645              		@ sp needed
 1646              	.LVL174:
 1647 0022 10BD     		pop	{r4, pc}
 1648              	.L130:
 1649              		.align	2
 1650              	.L129:
 1651 0024 00000000 		.word	.LANCHOR2
 1652              		.cfi_endproc
 1653              	.LFE21:
 1655              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 1656              		.align	1
ARM GAS  /tmp/ccUgdI1B.s 			page 50


 1657              		.global	xTimerPendFunctionCall
 1658              		.syntax unified
 1659              		.code	16
 1660              		.thumb_func
 1661              		.fpu softvfp
 1663              	xTimerPendFunctionCall:
 1664              	.LFB22:
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1665              		.loc 1 1024 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 16
 1668              		@ frame_needed = 0, uses_anonymous_args = 0
 1669              	.LVL175:
 1670 0000 30B5     		push	{r4, r5, lr}
 1671              	.LCFI29:
 1672              		.cfi_def_cfa_offset 12
 1673              		.cfi_offset 4, -12
 1674              		.cfi_offset 5, -8
 1675              		.cfi_offset 14, -4
 1676 0002 85B0     		sub	sp, sp, #20
 1677              	.LCFI30:
 1678              		.cfi_def_cfa_offset 32
 1679 0004 0500     		movs	r5, r0
 1680 0006 1C00     		movs	r4, r3
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* This function can only be called after a timer has been created or
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		queue does not exist. */
1031:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( xTimerQueue );
 1681              		.loc 1 1031 0
 1682 0008 094B     		ldr	r3, .L134
 1683              	.LVL176:
 1684 000a 1868     		ldr	r0, [r3]
 1685              	.LVL177:
 1686 000c 0028     		cmp	r0, #0
 1687 000e 01D1     		bne	.L132
 1688              		.loc 1 1031 0 is_stmt 0 discriminator 1
 1689              		.syntax divided
 1690              	@ 1031 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1691 0010 72B6     		 cpsid i 
 1692              	@ 0 "" 2
 1693              		.thumb
 1694              		.syntax unified
 1695              	.L133:
 1696 0012 FEE7     		b	.L133
 1697              	.L132:
1032:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1033:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
ARM GAS  /tmp/ccUgdI1B.s 			page 51


1034:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1035:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 1698              		.loc 1 1035 0 is_stmt 1
 1699 0014 0123     		movs	r3, #1
 1700 0016 5B42     		rsbs	r3, r3, #0
 1701 0018 0093     		str	r3, [sp]
1036:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1702              		.loc 1 1036 0
 1703 001a 0195     		str	r5, [sp, #4]
1037:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1704              		.loc 1 1037 0
 1705 001c 0291     		str	r1, [sp, #8]
1038:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1706              		.loc 1 1038 0
 1707 001e 0392     		str	r2, [sp, #12]
1039:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1040:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 1708              		.loc 1 1040 0
 1709 0020 0023     		movs	r3, #0
 1710 0022 2200     		movs	r2, r4
 1711              	.LVL178:
 1712 0024 6946     		mov	r1, sp
 1713              	.LVL179:
 1714 0026 FFF7FEFF 		bl	xQueueGenericSend
 1715              	.LVL180:
1041:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1042:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1043:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1044:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1045:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1716              		.loc 1 1045 0
 1717 002a 05B0     		add	sp, sp, #20
 1718              		@ sp needed
 1719              	.LVL181:
 1720              	.LVL182:
 1721 002c 30BD     		pop	{r4, r5, pc}
 1722              	.L135:
 1723 002e C046     		.align	2
 1724              	.L134:
 1725 0030 00000000 		.word	.LANCHOR2
 1726              		.cfi_endproc
 1727              	.LFE22:
 1729              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 1730              		.align	1
 1731              		.global	uxTimerGetTimerNumber
 1732              		.syntax unified
 1733              		.code	16
 1734              		.thumb_func
 1735              		.fpu softvfp
 1737              	uxTimerGetTimerNumber:
 1738              	.LFB23:
1046:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1047:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1048:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1049:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1050:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1051:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/ccUgdI1B.s 			page 52


1052:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1053:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1739              		.loc 1 1053 0
 1740              		.cfi_startproc
 1741              		@ args = 0, pretend = 0, frame = 0
 1742              		@ frame_needed = 0, uses_anonymous_args = 0
 1743              		@ link register save eliminated.
 1744              	.LVL183:
1054:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
 1745              		.loc 1 1054 0
 1746 0000 806A     		ldr	r0, [r0, #40]
 1747              	.LVL184:
1055:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1748              		.loc 1 1055 0
 1749              		@ sp needed
 1750 0002 7047     		bx	lr
 1751              		.cfi_endproc
 1752              	.LFE23:
 1754              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 1755              		.align	1
 1756              		.global	vTimerSetTimerNumber
 1757              		.syntax unified
 1758              		.code	16
 1759              		.thumb_func
 1760              		.fpu softvfp
 1762              	vTimerSetTimerNumber:
 1763              	.LFB24:
1056:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1057:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1058:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1059:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1060:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1061:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1062:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1063:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1764              		.loc 1 1063 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              		@ link register save eliminated.
 1769              	.LVL185:
1064:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1770              		.loc 1 1064 0
 1771 0000 8162     		str	r1, [r0, #40]
1065:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1772              		.loc 1 1065 0
 1773              		@ sp needed
 1774 0002 7047     		bx	lr
 1775              		.cfi_endproc
 1776              	.LFE24:
 1778              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1779              		.align	2
 1780              		.set	.LANCHOR0,. + 0
 1783              	pxCurrentTimerList:
 1784 0000 00000000 		.space	4
 1785              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1786              		.align	2
ARM GAS  /tmp/ccUgdI1B.s 			page 53


 1787              		.set	.LANCHOR1,. + 0
 1790              	pxOverflowTimerList:
 1791 0000 00000000 		.space	4
 1792              		.section	.bss.ucStaticTimerQueueStorage.5503,"aw",%nobits
 1793              		.align	2
 1796              	ucStaticTimerQueueStorage.5503:
 1797 0000 00000000 		.space	160
 1797      00000000 
 1797      00000000 
 1797      00000000 
 1797      00000000 
 1798              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1799              		.align	2
 1800              		.set	.LANCHOR3,. + 0
 1803              	xActiveTimerList1:
 1804 0000 00000000 		.space	20
 1804      00000000 
 1804      00000000 
 1804      00000000 
 1804      00000000 
 1805              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1806              		.align	2
 1807              		.set	.LANCHOR4,. + 0
 1810              	xActiveTimerList2:
 1811 0000 00000000 		.space	20
 1811      00000000 
 1811      00000000 
 1811      00000000 
 1811      00000000 
 1812              		.section	.bss.xLastTime.5452,"aw",%nobits
 1813              		.align	2
 1814              		.set	.LANCHOR7,. + 0
 1817              	xLastTime.5452:
 1818 0000 00000000 		.space	4
 1819              		.section	.bss.xStaticTimerQueue.5502,"aw",%nobits
 1820              		.align	2
 1821              		.set	.LANCHOR5,. + 0
 1824              	xStaticTimerQueue.5502:
 1825 0000 00000000 		.space	80
 1825      00000000 
 1825      00000000 
 1825      00000000 
 1825      00000000 
 1826              		.section	.bss.xTimerQueue,"aw",%nobits
 1827              		.align	2
 1828              		.set	.LANCHOR2,. + 0
 1831              	xTimerQueue:
 1832 0000 00000000 		.space	4
 1833              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1834              		.align	2
 1835              		.set	.LANCHOR6,. + 0
 1838              	xTimerTaskHandle:
 1839 0000 00000000 		.space	4
 1840              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 1841              		.align	2
 1842              	.LC10:
 1843 0000 546D7251 		.ascii	"TmrQ\000"
ARM GAS  /tmp/ccUgdI1B.s 			page 54


 1843      00
 1844              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 1845              		.align	2
 1846              	.LC13:
 1847 0000 546D7220 		.ascii	"Tmr Svc\000"
 1847      53766300 
 1848              		.text
 1849              	.Letext0:
 1850              		.file 2 "/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1851              		.file 3 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_types.h"
 1852              		.file 4 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1853              		.file 5 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1854              		.file 6 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1855              		.file 7 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 1856              		.file 8 "/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1857              		.file 9 "Inc/FreeRTOSConfig.h"
 1858              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 1859              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1860              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1861              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1862              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1863              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 1864              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccUgdI1B.s 			page 55


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/ccUgdI1B.s:16     .text.prvGetNextExpireTime:0000000000000000 $t
     /tmp/ccUgdI1B.s:22     .text.prvGetNextExpireTime:0000000000000000 prvGetNextExpireTime
     /tmp/ccUgdI1B.s:59     .text.prvGetNextExpireTime:000000000000001c $d
     /tmp/ccUgdI1B.s:64     .text.prvInsertTimerInActiveList:0000000000000000 $t
     /tmp/ccUgdI1B.s:70     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
     /tmp/ccUgdI1B.s:149    .text.prvInsertTimerInActiveList:0000000000000040 $d
     /tmp/ccUgdI1B.s:155    .text.prvCheckForValidListAndQueue:0000000000000000 $t
     /tmp/ccUgdI1B.s:161    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
     /tmp/ccUgdI1B.s:233    .text.prvCheckForValidListAndQueue:0000000000000050 $d
     /tmp/ccUgdI1B.s:1796   .bss.ucStaticTimerQueueStorage.5503:0000000000000000 ucStaticTimerQueueStorage.5503
     /tmp/ccUgdI1B.s:245    .text.prvInitialiseNewTimer:0000000000000000 $t
     /tmp/ccUgdI1B.s:251    .text.prvInitialiseNewTimer:0000000000000000 prvInitialiseNewTimer
     /tmp/ccUgdI1B.s:325    .text.xTimerCreateTimerTask:0000000000000000 $t
     /tmp/ccUgdI1B.s:332    .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
     /tmp/ccUgdI1B.s:403    .text.xTimerCreateTimerTask:000000000000004c $d
     /tmp/ccUgdI1B.s:1249   .text.prvTimerTask:0000000000000000 prvTimerTask
     /tmp/ccUgdI1B.s:411    .text.xTimerCreate:0000000000000000 $t
     /tmp/ccUgdI1B.s:418    .text.xTimerCreate:0000000000000000 xTimerCreate
     /tmp/ccUgdI1B.s:478    .text.xTimerCreateStatic:0000000000000000 $t
     /tmp/ccUgdI1B.s:485    .text.xTimerCreateStatic:0000000000000000 xTimerCreateStatic
     /tmp/ccUgdI1B.s:555    .text.xTimerGenericCommand:0000000000000000 $t
     /tmp/ccUgdI1B.s:562    .text.xTimerGenericCommand:0000000000000000 xTimerGenericCommand
     /tmp/ccUgdI1B.s:662    .text.xTimerGenericCommand:000000000000005c $d
     /tmp/ccUgdI1B.s:667    .text.prvSwitchTimerLists:0000000000000000 $t
     /tmp/ccUgdI1B.s:673    .text.prvSwitchTimerLists:0000000000000000 prvSwitchTimerLists
     /tmp/ccUgdI1B.s:776    .text.prvSwitchTimerLists:0000000000000064 $d
     /tmp/ccUgdI1B.s:782    .text.prvSampleTimeNow:0000000000000000 $t
     /tmp/ccUgdI1B.s:788    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
     /tmp/ccUgdI1B.s:839    .text.prvSampleTimeNow:0000000000000028 $d
     /tmp/ccUgdI1B.s:844    .text.prvProcessExpiredTimer:0000000000000000 $t
     /tmp/ccUgdI1B.s:850    .text.prvProcessExpiredTimer:0000000000000000 prvProcessExpiredTimer
     /tmp/ccUgdI1B.s:932    .text.prvProcessExpiredTimer:0000000000000050 $d
     /tmp/ccUgdI1B.s:937    .text.prvProcessTimerOrBlockTask:0000000000000000 $t
     /tmp/ccUgdI1B.s:943    .text.prvProcessTimerOrBlockTask:0000000000000000 prvProcessTimerOrBlockTask
     /tmp/ccUgdI1B.s:1042   .text.prvProcessTimerOrBlockTask:0000000000000064 $d
     /tmp/ccUgdI1B.s:1048   .text.prvProcessReceivedCommands:0000000000000000 $t
     /tmp/ccUgdI1B.s:1054   .text.prvProcessReceivedCommands:0000000000000000 prvProcessReceivedCommands
     /tmp/ccUgdI1B.s:1126   .rodata.prvProcessReceivedCommands:0000000000000000 $d
     /tmp/ccUgdI1B.s:1237   .text.prvProcessReceivedCommands:00000000000000c0 $d
     /tmp/ccUgdI1B.s:1243   .text.prvTimerTask:0000000000000000 $t
     /tmp/ccUgdI1B.s:1281   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
     /tmp/ccUgdI1B.s:1288   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
     /tmp/ccUgdI1B.s:1316   .text.xTimerGetTimerDaemonTaskHandle:0000000000000010 $d
     /tmp/ccUgdI1B.s:1321   .text.xTimerGetPeriod:0000000000000000 $t
     /tmp/ccUgdI1B.s:1328   .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
     /tmp/ccUgdI1B.s:1360   .text.xTimerGetExpiryTime:0000000000000000 $t
     /tmp/ccUgdI1B.s:1367   .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
     /tmp/ccUgdI1B.s:1399   .text.pcTimerGetName:0000000000000000 $t
     /tmp/ccUgdI1B.s:1406   .text.pcTimerGetName:0000000000000000 pcTimerGetName
     /tmp/ccUgdI1B.s:1438   .text.xTimerIsTimerActive:0000000000000000 $t
     /tmp/ccUgdI1B.s:1445   .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
     /tmp/ccUgdI1B.s:1493   .text.pvTimerGetTimerID:0000000000000000 $t
     /tmp/ccUgdI1B.s:1500   .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
     /tmp/ccUgdI1B.s:1544   .text.vTimerSetTimerID:0000000000000000 $t
     /tmp/ccUgdI1B.s:1551   .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
ARM GAS  /tmp/ccUgdI1B.s 			page 56


     /tmp/ccUgdI1B.s:1598   .text.xTimerPendFunctionCallFromISR:0000000000000000 $t
     /tmp/ccUgdI1B.s:1605   .text.xTimerPendFunctionCallFromISR:0000000000000000 xTimerPendFunctionCallFromISR
     /tmp/ccUgdI1B.s:1651   .text.xTimerPendFunctionCallFromISR:0000000000000024 $d
     /tmp/ccUgdI1B.s:1656   .text.xTimerPendFunctionCall:0000000000000000 $t
     /tmp/ccUgdI1B.s:1663   .text.xTimerPendFunctionCall:0000000000000000 xTimerPendFunctionCall
     /tmp/ccUgdI1B.s:1725   .text.xTimerPendFunctionCall:0000000000000030 $d
     /tmp/ccUgdI1B.s:1730   .text.uxTimerGetTimerNumber:0000000000000000 $t
     /tmp/ccUgdI1B.s:1737   .text.uxTimerGetTimerNumber:0000000000000000 uxTimerGetTimerNumber
     /tmp/ccUgdI1B.s:1755   .text.vTimerSetTimerNumber:0000000000000000 $t
     /tmp/ccUgdI1B.s:1762   .text.vTimerSetTimerNumber:0000000000000000 vTimerSetTimerNumber
     /tmp/ccUgdI1B.s:1779   .bss.pxCurrentTimerList:0000000000000000 $d
     /tmp/ccUgdI1B.s:1783   .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
     /tmp/ccUgdI1B.s:1786   .bss.pxOverflowTimerList:0000000000000000 $d
     /tmp/ccUgdI1B.s:1790   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
     /tmp/ccUgdI1B.s:1793   .bss.ucStaticTimerQueueStorage.5503:0000000000000000 $d
     /tmp/ccUgdI1B.s:1799   .bss.xActiveTimerList1:0000000000000000 $d
     /tmp/ccUgdI1B.s:1803   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
     /tmp/ccUgdI1B.s:1806   .bss.xActiveTimerList2:0000000000000000 $d
     /tmp/ccUgdI1B.s:1810   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
     /tmp/ccUgdI1B.s:1813   .bss.xLastTime.5452:0000000000000000 $d
     /tmp/ccUgdI1B.s:1817   .bss.xLastTime.5452:0000000000000000 xLastTime.5452
     /tmp/ccUgdI1B.s:1820   .bss.xStaticTimerQueue.5502:0000000000000000 $d
     /tmp/ccUgdI1B.s:1824   .bss.xStaticTimerQueue.5502:0000000000000000 xStaticTimerQueue.5502
     /tmp/ccUgdI1B.s:1827   .bss.xTimerQueue:0000000000000000 $d
     /tmp/ccUgdI1B.s:1831   .bss.xTimerQueue:0000000000000000 xTimerQueue
     /tmp/ccUgdI1B.s:1834   .bss.xTimerTaskHandle:0000000000000000 $d
     /tmp/ccUgdI1B.s:1838   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
     /tmp/ccUgdI1B.s:1841   .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
     /tmp/ccUgdI1B.s:1845   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
vPortYield
xQueueReceive
vPortFree
